"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9154],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(n),m=o,f=u["".concat(s,".").concat(m)]||u[m]||d[m]||a;return n?r.createElement(f,i(i({ref:t},p),{},{components:n})):r.createElement(f,i({ref:t},p))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:o,i[1]=l;for(var c=2;c<a;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},74347:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var r=n(87462),o=(n(67294),n(3905));const a={},i="Methods",l={unversionedId:"Topics/TopLevelDeclarations/Entities/Members/methods",id:"Topics/TopLevelDeclarations/Entities/Members/methods",title:"Methods",description:"It can helpful for top level declarations to define methods. These can be used either as helpers or as an interface that can be",source:"@site/docs/Topics/TopLevelDeclarations/Entities/Members/methods.md",sourceDirName:"Topics/TopLevelDeclarations/Entities/Members",slug:"/Topics/TopLevelDeclarations/Entities/Members/methods",permalink:"/EvolveUIDocs/docs/Topics/TopLevelDeclarations/Entities/Members/methods",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"conceptual",previous:{title:"Lifecycle Handlers",permalink:"/EvolveUIDocs/docs/Topics/TopLevelDeclarations/Entities/Members/lifecycle"},next:{title:"on_change",permalink:"/EvolveUIDocs/docs/Topics/TopLevelDeclarations/Entities/Members/on_change"}},s={},c=[],p={toc:c};function u(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"methods"},"Methods"),(0,o.kt)("p",null,"It can helpful for top level declarations to define methods. These can be used either as helpers or as an interface that can be\nextruded. "),(0,o.kt)("p",null,"Methods can be defined with any signature you like. By default they are public and can be extruded.\nMethods are available within other methods as well, and can be sourced with a\n",(0,o.kt)("inlineCode",{parentName:"p"},"from")," mapping or defined in the template definition itself."),(0,o.kt)("p",null,"Methods can be marked with ",(0,o.kt)("inlineCode",{parentName:"p"},":private")," to prevent them being used in extrusions. "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp"},"\ntemplate MethodExample : SomeCompanionType {\n    \n    // when defining a method from a companion type you must define the signature explicitly\n    // and it must exactly match the method as it was defined in the companion type\n    method:private float Sqrt(float input) from $companion;\n    \n    method float PrintSqrt(float input) {\n        // using the Sqrt method\n        Debug.Log(Sqrt(input));\n    }\n    \n    method void PrintValue(int value) {\n        Debug.Log(value);\n    }\n    \n}\n\ntemplate MethodUsage render {\n\n    // methods get extruded like normal with the [] operator\n    MethodExample() [PrintValue, PrintSqrt];\n    \n    run PrintValue(100);\n    run PrintValue(200);\n    run PrintSqrt(300f);\n    \n}\n\n")))}u.isMDXComponent=!0}}]);