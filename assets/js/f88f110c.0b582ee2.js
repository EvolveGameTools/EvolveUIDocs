"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[10795],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var r=n(67294);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,s=function(e,t){if(null==e)return{};var n,r,s={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},y=r.forwardRef((function(e,t){var n=e.components,s=e.mdxType,o=e.originalType,l=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),u=c(n),y=s,f=u["".concat(l,".").concat(y)]||u[y]||m[y]||o;return n?r.createElement(f,i(i({ref:t},p),{},{components:n})):r.createElement(f,i({ref:t},p))}));function f(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var o=n.length,i=new Array(o);i[0]=y;var a={};for(var l in t)hasOwnProperty.call(t,l)&&(a[l]=t[l]);a.originalType=e,a[u]="string"==typeof e?e:s,i[1]=a;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}y.displayName="MDXCreateElement"},85488:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>a,toc:()=>c});var r=n(87462),s=(n(67294),n(3905));const o={},i="Instance Styles",a={unversionedId:"Topics/TopLevelDeclarations/Entities/Members/instance_style",id:"Topics/TopLevelDeclarations/Entities/Members/instance_style",title:"Instance Styles",description:"Instance styles are single-element overrides for style properties. When applied they have the highest",source:"@site/docs/Topics/TopLevelDeclarations/Entities/Members/instance_style.md",sourceDirName:"Topics/TopLevelDeclarations/Entities/Members",slug:"/Topics/TopLevelDeclarations/Entities/Members/instance_style",permalink:"/EvolveUIDocs/docs/Topics/TopLevelDeclarations/Entities/Members/instance_style",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"conceptual",previous:{title:"Input Handlers",permalink:"/EvolveUIDocs/docs/Topics/TopLevelDeclarations/Entities/Members/input_handlers"},next:{title:"Lifecycle Handlers",permalink:"/EvolveUIDocs/docs/Topics/TopLevelDeclarations/Entities/Members/lifecycle"}},l={},c=[],p={toc:c};function u(e){let{components:t,...n}=e;return(0,s.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"instance-styles"},"Instance Styles"),(0,s.kt)("p",null,"Instance styles are single-element overrides for style properties. When applied they have the highest\nprecedence and will win over non instance styles. "),(0,s.kt)("p",null,"An instance style is assigned either using the ",(0,s.kt)("inlineCode",{parentName:"p"},"style:PropertyName = expression")," syntax within a template file or\nwith the C# api from ",(0,s.kt)("inlineCode",{parentName:"p"},"ElementReference.style"),". The value expression can be either a properly typed expression that\nmatches the property type or can use backticks to use the style file syntax. "),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-csharp"},"\n// assigning from a template context\n\ntemplate Thing : SomeCompanion {\n\n    style:BackgroundColor = `red`;\n    \n    style:PaddingLeft = $companion.ComputePadding();\n    \n    style:PreferredWidth = new UIMeasurement(10f, UIMeasurementUnit.Content);\n    \n}\n\n// assigning from C#\n\nElementReference elementRef = SomeHowGetAnElementReference();\nelementRef.style.SetPreferredWidth(new UIMeasurement(10f, UIMeasurementUnit.Content));\nelementRef.style.SetBackgroundColor(Color.blue);\n\n")),(0,s.kt)("p",null,"Assigning instance styles is more expensive and uses more memory than using pre-baked styles. It's not a huge cost\nbut generally you should prefer to use styles over instance styles."))}u.isMDXComponent=!0}}]);