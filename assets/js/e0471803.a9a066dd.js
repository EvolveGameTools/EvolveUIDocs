"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3502],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>v});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),u=c(n),m=a,v=u["".concat(l,".").concat(m)]||u[m]||d[m]||o;return n?r.createElement(v,i(i({ref:t},s),{},{components:n})):r.createElement(v,i({ref:t},s))}));function v(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p[u]="string"==typeof e?e:a,i[1]=p;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},92348:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>p,toc:()=>c});var r=n(87462),a=(n(67294),n(3905));const o={},i="SRP Setup",p={unversionedId:"getting_started/srp_setup",id:"getting_started/srp_setup",title:"SRP Setup",description:"To setup a simple SRP you can add the compilation define EVOLVEUIENABLEURP.",source:"@site/docs/getting_started/srp_setup.mdx",sourceDirName:"getting_started",slug:"/getting_started/srp_setup",permalink:"/EvolveUIDocs/docs/getting_started/srp_setup",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"conceptual",previous:{title:"Getting Started",permalink:"/EvolveUIDocs/docs/getting_started/"},next:{title:"If / Else",permalink:"/EvolveUIDocs/docs/templates/body_block/control_flow/if_else"}},l={},c=[],s={toc:c};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"srp-setup"},"SRP Setup"),(0,a.kt)("p",null,"To setup a simple SRP you can add the compilation define ",(0,a.kt)("inlineCode",{parentName:"p"},"EVOLVEUI_ENABLE_URP"),"."),(0,a.kt)("p",null,"You can do this in ",(0,a.kt)("inlineCode",{parentName:"p"},"Project Settings / Player / Scripting Compilation / Scripting Define Symbols")),(0,a.kt)("p",null,"Once this is active you see an option on your render pipeline to use ",(0,a.kt)("inlineCode",{parentName:"p"},"EvolveUISimpleSRP"),". Note that this requires you to use\na loading component like UIRoot that implements ",(0,a.kt)("inlineCode",{parentName:"p"},"IEvolveApplication")," and that the ",(0,a.kt)("inlineCode",{parentName:"p"},"IEvolveApplication")," must be on the same\ngameObject as the camera that you want to use to render UI with. "),(0,a.kt)("p",null,"You can also make your own ScriptableRenderPass that invokes Evolve's render pipeline. The bundled render pass is extremely simple: "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"public class EvolveUISimpleSRP : ScriptableRendererFeature {\n\n    public override void Create() { }\n\n    public override void AddRenderPasses(ScriptableRenderer renderer, ref RenderingData renderingData) {\n        Camera camera = renderingData.cameraData.camera;\n\n        IEvolveApplication app = camera.GetComponent<IEvolveApplication>();\n\n        if (app?.application == null) {\n            return;\n        }\n\n        renderer.EnqueuePass(new EvolveSimpleRenderPass(app.application));\n    }\n\n}\n\ninternal class EvolveSimpleRenderPass : ScriptableRenderPass {\n\n    private readonly UIApplication evolveApp;\n\n    public EvolveSimpleRenderPass(UIApplication evolveApp) {\n        this.evolveApp = evolveApp;\n    }\n\n    public override void Execute(ScriptableRenderContext context, ref RenderingData renderingData) {\n\n        Camera camera = renderingData.cameraData.camera;\n\n        if (camera != evolveApp.camera) {\n            return;\n        }\n\n        ProjectionSetup setup = evolveApp.GetOrthoProjectionSetup(renderingData.cameraData.IsCameraProjectionMatrixFlipped());\n        evolveApp.Render(setup, camera.targetTexture);\n        context.ExecuteCommandBuffer(evolveApp.GetCommandBuffer());\n    }\n\n}\n")))}u.isMDXComponent=!0}}]);