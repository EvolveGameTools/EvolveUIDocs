"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[43346],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var i=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=i.createContext({}),s=function(e){var t=i.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=s(e.components);return i.createElement(p.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},d=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=s(n),d=r,f=m["".concat(p,".").concat(d)]||m[d]||u[d]||a;return n?i.createElement(f,o(o({ref:t},c),{},{components:n})):i.createElement(f,o({ref:t},c))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,o=new Array(a);o[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[m]="string"==typeof e?e:r,o[1]=l;for(var s=2;s<a;s++)o[s]=n[s];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}d.displayName="MDXCreateElement"},98792:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>m,frontMatter:()=>a,metadata:()=>l,toc:()=>s});var i=n(87462),r=(n(67294),n(3905));const a={},o=void 0,l={unversionedId:"templates/animation_docs",id:"templates/animation_docs",title:"animation_docs",description:"Animation via code",source:"@site/docs/templates/animation_docs.mdx",sourceDirName:"templates",slug:"/templates/animation_docs",permalink:"/EvolveUIDocs/docs/templates/animation_docs",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"conceptual",previous:{title:"UIElement API",permalink:"/EvolveUIDocs/docs/templates/UIElement"},next:{title:"expression_syntax",permalink:"/EvolveUIDocs/docs/templates/expression_syntax"}},p={},s=[],c={toc:s};function m(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,i.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"#Animations"),(0,r.kt)("p",null,"Animation via code"),(0,r.kt)("p",null,"Animation is built on top of a generic interpolator system. The idea is that you give the system a struct of type"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"InterpolatorSpec<T> where T : unmanaged")," "),(0,r.kt)("p",null,"or "),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"InterpolationSpec<T, TStorage> where T : unmanaged where TStorage : unmanaged")),(0,r.kt)("p",null,"the interpolation spec object includes some fields for customizing the animation"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"    Interpolator<T> interpolator -- a managed class that executes the animation\n    AnimationSettings settings; \n        int delayMS;                        time in milliseconds the animation should run \n        int iterationCount;                 number of times to run the animation\n        AnimationFillMode fillMode;         when the animation starts and stops applying its properties to the element\n                                            this is a flags field so you can combine multiple values here to mix and match behavior\n                                            \n                                            Default - equal to UntilCompleted\n                                            BeforeStart - apply properties while animation is the start delay phase\n                                            AfterCompleted - apply properties even after the animation finishes\n                                            WhilePlaying - apply properties while animation is running but not delayed\n                                            WhileDelaying - apply properties while animation is delaying \n                                            UntilCompleted = BeforeStart | WhileDelaying | WhilePlaying,\n                                            Always = UntilCompleted | AfterCompleted\n                                            \n        AnimationDirection direction;\n")),(0,r.kt)("p",null,"We ship with four preconfigured variations of animation. This covers 99% of the things people want to do with animations"),(0,r.kt)("p",null,"Curve -- executes an animation along a Unity AnimationCurve asset\nTween  -- Standard tweening / easing implementation that accepts either a Bezier or an EasingFunction value\nSpring -- spring physics based animation\nKeyframe -- explicit keyframe interpolation"),(0,r.kt)("p",null,"Custom"))}m.isMDXComponent=!0}}]);