"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6424],{3905:(e,t,r)=>{r.d(t,{Zo:()=>i,kt:()=>f});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),s=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},i=function(e){var t=s(e.components);return n.createElement(c.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,i=p(e,["components","mdxType","originalType","parentName"]),m=s(r),d=a,f=m["".concat(c,".").concat(d)]||m[d]||u[d]||o;return r?n.createElement(f,l(l({ref:t},i),{},{components:r})):n.createElement(f,l({ref:t},i))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,l=new Array(o);l[0]=d;var p={};for(var c in t)hasOwnProperty.call(t,c)&&(p[c]=t[c]);p.originalType=e,p[m]="string"==typeof e?e:a,l[1]=p;for(var s=2;s<o;s++)l[s]=r[s];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},26771:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>m,frontMatter:()=>o,metadata:()=>p,toc:()=>s});var n=r(87462),a=(r(67294),r(3905));const o={},l="Template",p={unversionedId:"templates/top_level_declarations/template",id:"templates/top_level_declarations/template",title:"Template",description:"Template is the workhorse of Evolve and by far the most common top level declaration that will be used.",source:"@site/docs/templates/top_level_declarations/template.md",sourceDirName:"templates/top_level_declarations",slug:"/templates/top_level_declarations/template",permalink:"/EvolveUIDocs/docs/templates/top_level_declarations/template",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"conceptual",previous:{title:"Import",permalink:"/EvolveUIDocs/docs/templates/top_level_declarations/import"},next:{title:"Typography",permalink:"/EvolveUIDocs/docs/templates/top_level_declarations/typography"}},c={},s=[],i={toc:s};function m(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},i,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"template"},"Template"),(0,a.kt)("p",null,"Template is the workhorse of Evolve and by far the most common top level declaration that will be used. "),(0,a.kt)("p",null,"A template declares the inputs, outputs, contents, and behavior of a UI element in Evolve."),(0,a.kt)("p",null,"A template is usually declared using a class-like structured syntax, but for the case where very few or no\nmembers are needed, a shorthand exists that looks more like a function declaration. "),(0,a.kt)("p",null,"Sometimes you simply want to give a formal name to a container element"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},"// using the shorthand we accept a list of declarations that are comma separated followed by a\n// 'render' block where all of the template contents will go. \ntemplate ThingUsingShorthand(required string name) render {\n    Text(name);\n}\n \n")))}m.isMDXComponent=!0}}]);