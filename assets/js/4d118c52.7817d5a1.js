"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[67099],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=s(n),f=o,d=u["".concat(c,".").concat(f)]||u[f]||m[f]||a;return n?r.createElement(d,l(l({ref:t},p),{},{components:n})):r.createElement(d,l({ref:t},p))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,l=new Array(a);l[0]=f;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[u]="string"==typeof e?e:o,l[1]=i;for(var s=2;s<a;s++)l[s]=n[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},31870:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>s});var r=n(87462),o=(n(67294),n(3905));const a={},l="Template",i={unversionedId:"Topics/TopLevelDeclarations/Entities/template",id:"Topics/TopLevelDeclarations/Entities/template",title:"Template",description:"Template is the workhorse of Evolve and by far the most common top level declaration that will be used.",source:"@site/docs/Topics/TopLevelDeclarations/Entities/template.md",sourceDirName:"Topics/TopLevelDeclarations/Entities",slug:"/Topics/TopLevelDeclarations/Entities/template",permalink:"/EvolveUIDocs/docs/Topics/TopLevelDeclarations/Entities/template",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"conceptual",previous:{title:"Function",permalink:"/EvolveUIDocs/docs/Topics/TopLevelDeclarations/Entities/function"},next:{title:"Typography",permalink:"/EvolveUIDocs/docs/Topics/TopLevelDeclarations/Entities/typography"}},c={},s=[],p={toc:s};function u(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"template"},"Template"),(0,o.kt)("p",null,"Template is the workhorse of Evolve and by far the most common top level declaration that will be used. "),(0,o.kt)("p",null,"A template declares the inputs, outputs, contents, and behavior of a UI element in Evolve."),(0,o.kt)("p",null,"A template is usually declared using a class-like structured syntax, but for the case where very few or no\nmembers are needed, a shorthand exists that looks more like a function declaration. "),(0,o.kt)("p",null,"Sometimes you simply want to give a formal name to a container element"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp"},"// using the shorthand we accept a list of declarations that are comma separated followed by a\n// 'render' block where all of the template contents will go. \ntemplate ThingUsingShorthand(required string name) render {\n    Text(name);\n}\n \n")))}u.isMDXComponent=!0}}]);