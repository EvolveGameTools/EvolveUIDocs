"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[994],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return u}});var a=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},h={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=p(n),u=i,g=d["".concat(s,".").concat(u)]||d[u]||h[u]||r;return n?a.createElement(g,o(o({ref:t},c),{},{components:n})):a.createElement(g,o({ref:t},c))}));function u(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var p=2;p<r;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},41198:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return s},default:function(){return u},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return h}});var a=n(87462),i=n(63366),r=(n(67294),n(3905)),o=["components"],l={},s="Create the Main Screen",p={unversionedId:"Tutorials/QuestLog/defineRootTemplate",id:"Tutorials/QuestLog/defineRootTemplate",title:"Create the Main Screen",description:"Open the AppRoot.ui file that you created earlier and add the following code:",source:"@site/docs/Tutorials/QuestLog/defineRootTemplate.mdx",sourceDirName:"Tutorials/QuestLog",slug:"/Tutorials/QuestLog/defineRootTemplate",permalink:"/EvolveUIDocs/docs/Tutorials/QuestLog/defineRootTemplate",tags:[],version:"current",frontMatter:{},sidebar:"tutorials",previous:{title:"Set the Base Styles",permalink:"/EvolveUIDocs/docs/Tutorials/QuestLog/createRootStylesheet"},next:{title:"Create and Animate the Quest Filter",permalink:"/EvolveUIDocs/docs/Tutorials/QuestLog/createNavigation"}},c={},h=[{value:"Fixing the Gradient",id:"fixing-the-gradient",level:3},{value:"Fixing the font spacing",id:"fixing-the-font-spacing",level:3}],d={toc:h};function u(e){var t=e.components,l=(0,i.Z)(e,o);return(0,r.kt)("wrapper",(0,a.Z)({},d,l,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"create-the-main-screen"},"Create the Main Screen"),(0,r.kt)("p",null,"Open the ",(0,r.kt)("inlineCode",{parentName:"p"},"AppRoot.ui")," file that you created earlier and add the following code:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'//#1\ntemplate AppRoot : AppRoot() {\n   //#2\n   Div(style = [@header-row]) {\n      Div(style = [@gradient-line]);\n      Text_H1("Quests");\n      Div(style = [@gradient-line]);\n   }\n}\n')),(0,r.kt)("p",null,"AppRoot.ui will be the entry point for the entire quest log user interface. The code above is doing two things - defining the template file structure and drawing the first bits of UI. More specifically:"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Section #1")," is the definition of the file, which must follow the format of ",(0,r.kt)("strong",{parentName:"p"},"template FileName : BackingClassName"),". Every template requires a ",(0,r.kt)("strong",{parentName:"p"},"backing C#")," class that must extend ",(0,r.kt)("inlineCode",{parentName:"p"},"UIElement"),". In this example, the backing class came with the starter project and can be found at ",(0,r.kt)("strong",{parentName:"p"},"Assets/Evolve/Scripts/AppRoot.cs"),"."),(0,r.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"You do not need to create a new backing class for each template. Instead, you can reuse the same backing class across multiple templates. This is useful if you have shared pieces of logic or data that you want to display. There are three ways that you can provide a backing class - read more HERE."))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Section #2")," is creating the top header of the Quest Log, which starts with a main ",(0,r.kt)("strong",{parentName:"p"},"Div")," container that is set to the ",(0,r.kt)("strong",{parentName:"p"},"header-row")," style. That div contains three children:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Children 1 and 3")," are the same - a div that uses the ",(0,r.kt)("strong",{parentName:"li"},"gradient-line")," style you defined in QuestLogModule to draw a gradient that goes from transparent to light blue."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Child 2")," is the Text_H1 typography element that you just created. It has one parameter, which is the string of text that it should display on the UI.")),(0,r.kt)("p",null,"Now that you\u2019ve got everything setup, you are ready to push play in Unity and see what you\u2019ve created. You should now see a screen with a header that looks like this:"),(0,r.kt)("p",null,(0,r.kt)("img",{loading:"lazy",alt:"incorrect gradient",src:n(68698).Z,width:"1461",height:"155"})),(0,r.kt)("p",null,"This looks close, but not quite correct! Two things need to be fixed; the first gradient needs to be the opposite direction and the title text would look better if it had some extra spacing."),(0,r.kt)("h3",{id:"fixing-the-gradient"},"Fixing the Gradient"),(0,r.kt)("p",null,"The first child of header-row that references gradient-line is the only one that needs to be changed, since the last one is facing the correct direction. Fortunately, Evolve has two really handy features to solve this - the ability to nest styles and to query based on the child index."),(0,r.kt)("p",null,"Update the ",(0,r.kt)("strong",{parentName:"p"},"gradient-line")," style with the following code:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-css"},'\nstyle gradient-line {\n    MarginTop = 12px;\n    BackgroundImage = linear-gradient("quest_gradient");\n    PreferredSize = 300px 4px;\n\n/* highlight-start */\n    [when:first-child] {\n        BackgroundImageRotation = 180deg;\n    }\n/* highlight-end */\n}\n')),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"[when:first-child]")," is a query that tells Evolve to only apply the defined style properties if the element is, well, the first child. ",(0,r.kt)("strong",{parentName:"p"},"BackgroundImageRotation")," is a handy style property that lets you ",(0,r.kt)("strong",{parentName:"p"},"rotate the background image by a defined amount"),", which in this case is flipped 180 degrees."),(0,r.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"There are a lot of different ways that you can query to determine when a style should be applied. For example, you can apply a style to only the second child with ",(0,r.kt)("inlineCode",{parentName:"p"},"when:child-count(== 2)]")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"[hover]")," for when the user is over the element. See {TOPIC NAME} to read more."))),(0,r.kt)("p",null,"Go back to Unity and either ",(0,r.kt)("strong",{parentName:"p"},"press play")," or if it\u2019s still running, push ",(0,r.kt)("strong",{parentName:"p"},"control + G")," to refresh the UI. You should now see the first gradient facing the opposite direction."),(0,r.kt)("p",null,(0,r.kt)("img",{loading:"lazy",alt:"incorrect gradient",src:n(26664).Z,width:"1462",height:"150"})),(0,r.kt)("h3",{id:"fixing-the-font-spacing"},"Fixing the font spacing"),(0,r.kt)("p",null,"It\u2019s fairly common to define a base style that you want to alter only in certain circumstances. For this tutorial, the ",(0,r.kt)("inlineCode",{parentName:"p"},"Text_H1")," style will be built with the flexibility to apply it with or without lettering spacing using a style ",(0,r.kt)("strong",{parentName:"p"},"attribute"),". An ",(0,r.kt)("strong",{parentName:"p"},"attribute")," is a way to ",(0,r.kt)("strong",{parentName:"p"},"define a custom key that can be used by the query engine to determine if styling should occur"),"."),(0,r.kt)("p",null,"Update the ",(0,r.kt)("inlineCode",{parentName:"p"},"Text_H1")," style with the following code:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-css"},"style <Title_H1> {\n    TextColor = white;\n    TextFontSize = 48px;\n    TextTransform = UpperCase;\n    TextFontAsset = @H1_Font;\n\n/* highlight-start */\n    [attr:characterSpacing] {\n        TextCharacterSpacing = 0.2em;\n    }\n/* highlight-end */\n}\n")),(0,r.kt)("p",null,"Attribute definition is formatted as ",(0,r.kt)("inlineCode",{parentName:"p"},"[attr:yourCustomName] { //styles }"),". The custom name is what you will reference when defining the element to tell Evolve to apply the style. This means that you will need to update the ",(0,r.kt)("inlineCode",{parentName:"p"},"Text_H1")," element in ",(0,r.kt)("strong",{parentName:"p"},"AppRoot")," to reference the attribute. Head over to the file and replace ",(0,r.kt)("inlineCode",{parentName:"p"},"Text_H1")," with the highlighted code below:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'template AppRoot : AppRoot() {\n   Div(style = [@header-row]) {\n      Div(style = [@gradient-line]);\n  // highlight-start\n      Text_H1("Quests", attr:characterSpacing);\n// highlight-end\n      Div(style = [@gradient-line]);\n   }\n}\n')),(0,r.kt)("p",null,"Go back to Unity and either ",(0,r.kt)("strong",{parentName:"p"},"press play")," or if it\u2019s still running, push ",(0,r.kt)("strong",{parentName:"p"},"control + G")," to refresh the UI. You should now see the first gradient facing the opposite direction."))}u.isMDXComponent=!0},26664:function(e,t,n){t.Z=n.p+"assets/images/gradient_correct-eb3f84c282beda4bd13daf708034414d.png"},68698:function(e,t,n){t.Z=n.p+"assets/images/gradient_incorrect-958d740f6a6e9609447f2a1618d94416.png"}}]);