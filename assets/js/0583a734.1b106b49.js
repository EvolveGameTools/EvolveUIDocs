"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[14033],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=p(n),d=a,f=m["".concat(s,".").concat(d)]||m[d]||u[d]||l;return n?r.createElement(f,o(o({ref:t},c),{},{components:n})):r.createElement(f,o({ref:t},c))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,o=new Array(l);o[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[m]="string"==typeof e?e:a,o[1]=i;for(var p=2;p<l;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},87946:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>m,frontMatter:()=>l,metadata:()=>i,toc:()=>p});var r=n(87462),a=(n(67294),n(3905));const l={},o="On Change",i={unversionedId:"templates/top_level_declarations/members/on_change",id:"templates/top_level_declarations/members/on_change",title:"On Change",description:"This is a handler that watches for parameter changes and emits an event when",source:"@site/docs/templates/top_level_declarations/members/on_change.md",sourceDirName:"templates/top_level_declarations/members",slug:"/templates/top_level_declarations/members/on_change",permalink:"/EvolveUIDocs/docs/templates/top_level_declarations/members/on_change",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"conceptual",previous:{title:"Methods",permalink:"/EvolveUIDocs/docs/templates/top_level_declarations/members/methods"},next:{title:"Parameters",permalink:"/EvolveUIDocs/docs/templates/top_level_declarations/members/parameters"}},s={},p=[],c={toc:p};function m(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"on-change"},"On Change"),(0,a.kt)("p",null,"This is a handler that watches for parameter changes and emits an event when\nthe value of a parameter changes. There are two implicit variables that become\navailable:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"$newValue "),(0,a.kt)("li",{parentName:"ul"},"$oldValue")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-Csharp"},"template Abc {\n    required int value; \n    onChange:value => Debug.Log($newValue); \n}\n")),(0,a.kt)("p",null,"The comparison will use ",(0,a.kt)("inlineCode",{parentName:"p"},".Equals")," if ",(0,a.kt)("inlineCode",{parentName:"p"},"IEquatable<T>")," is implemented, otherwise\nit will use ",(0,a.kt)("inlineCode",{parentName:"p"},"==")," for primitives and classes, and will not work for structs without\nand ",(0,a.kt)("inlineCode",{parentName:"p"},"IEquatable<T>")," implementation. "),(0,a.kt)("p",null,"The event will fire after parameters were set but before the ",(0,a.kt)("inlineCode",{parentName:"p"},"render")," block runs. "),(0,a.kt)("p",null,"You can also use ",(0,a.kt)("inlineCode",{parentName:"p"},"onChange")," as a template argument, it works slightly differently in that\ncase but the concept is the same. "),(0,a.kt)("p",null,"There are two differences:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"it fires after the template finished its execution for the frame"),(0,a.kt)("li",{parentName:"ul"},"it can observe public state fields and parameters. ")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},'template Something {\n    \n    render {\n         SomeTemplate(onChange:someValue => Debug.Log($newValue + " " + $oldValue)\n    }\n    \n}\n')))}m.isMDXComponent=!0}}]);