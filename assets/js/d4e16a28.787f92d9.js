"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[27933],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>y});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function p(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function a(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),s=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):p(p({},t),e)),r},l=function(e){var t=s(e.components);return n.createElement(c.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,l=a(e,["components","mdxType","originalType","parentName"]),u=s(r),d=o,y=u["".concat(c,".").concat(d)]||u[d]||m[d]||i;return r?n.createElement(y,p(p({ref:t},l),{},{components:r})):n.createElement(y,p({ref:t},l))}));function y(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,p=new Array(i);p[0]=d;var a={};for(var c in t)hasOwnProperty.call(t,c)&&(a[c]=t[c]);a.originalType=e,a[u]="string"==typeof e?e:o,p[1]=a;for(var s=2;s<i;s++)p[s]=r[s];return n.createElement.apply(null,p)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},90611:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>p,default:()=>u,frontMatter:()=>i,metadata:()=>a,toc:()=>s});var n=r(87462),o=(r(67294),r(3905));const i={},p="Computed Properties",a={unversionedId:"Topics/TopLevelDeclarations/Entities/Members/computed_properties",id:"Topics/TopLevelDeclarations/Entities/Members/computed_properties",title:"Computed Properties",description:"A computed property is a read only method which can be extruded like a value. You can think of it like a C# get-only",source:"@site/docs/Topics/TopLevelDeclarations/Entities/Members/computed_properties.md",sourceDirName:"Topics/TopLevelDeclarations/Entities/Members",slug:"/Topics/TopLevelDeclarations/Entities/Members/computed_properties",permalink:"/EvolveUIDocs/docs/Topics/TopLevelDeclarations/Entities/Members/computed_properties",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"conceptual",previous:{title:"Attributes",permalink:"/EvolveUIDocs/docs/Topics/TopLevelDeclarations/Entities/Members/attributes"},next:{title:"Input Handlers",permalink:"/EvolveUIDocs/docs/Topics/TopLevelDeclarations/Entities/Members/input_handlers"}},c={},s=[],l={toc:s};function u(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"computed-properties"},"Computed Properties"),(0,o.kt)("p",null,"A computed property is a read only method which can be extruded like a value. You can think of it like a C# get-only\nproperty. "),(0,o.kt)("p",null,"Computed properties are public by default but can be annotated with ",(0,o.kt)("inlineCode",{parentName:"p"},":private")," to make them only visible inside the defining template. They\ncannot be used with a ",(0,o.kt)("inlineCode",{parentName:"p"},"from")," mapping but do have access to any top level field declaration."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp"},'template ComputedPropertyExample {\n    \n    state int x;\n    state int y;\n    \n    computed int sum => x + y;\n    \n    // only visible inside this template\'s definition\n    computed:private int product => x + y;\n    \n}\n\ntemplate UsingAComputedProperty render {\n    \n    // a computed property can be extruded with the [] operator\n    ComputedPropertyExample() [sum]\n    \n    Text($"x + y is {sum}");\n    \n}\n\n')))}u.isMDXComponent=!0}}]);