"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[47505],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return h}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,s=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=u(n),h=a,m=d["".concat(l,".").concat(h)]||d[h]||c[h]||s;return n?r.createElement(m,o(o({ref:t},p),{},{components:n})):r.createElement(m,o({ref:t},p))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=n.length,o=new Array(s);o[0]=d;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var u=2;u<s;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},31806:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return l},default:function(){return h},frontMatter:function(){return i},metadata:function(){return u},toc:function(){return c}});var r=n(87462),a=n(63366),s=(n(67294),n(3905)),o=["components"],i={},l="Show the Quest Details",u={unversionedId:"Tutorials/QuestLog/showQuestDetails",id:"Tutorials/QuestLog/showQuestDetails",title:"Show the Quest Details",description:"The last piece of this tutorial is to show the player the details of the quest that they've selected. Fortinately, this is fairly easy to setup and by the end, you'll have a layout that looks like this:",source:"@site/docs/Tutorials/QuestLog/showQuestDetails.mdx",sourceDirName:"Tutorials/QuestLog",slug:"/Tutorials/QuestLog/showQuestDetails",permalink:"/EvolveUIDocs/docs/Tutorials/QuestLog/showQuestDetails",tags:[],version:"current",frontMatter:{},sidebar:"tutorials",previous:{title:"Populate the Quest List",permalink:"/EvolveUIDocs/docs/Tutorials/QuestLog/populateQuestList"}},p={},c=[{value:"Configure the References",id:"configure-the-references",level:2},{value:"Refactor AppRoot",id:"refactor-approot",level:2},{value:"Create the QuestDetails template",id:"create-the-questdetails-template",level:2},{value:"Refactor QuestList",id:"refactor-questlist",level:2}],d={toc:c};function h(e){var t=e.components,n=(0,a.Z)(e,o);return(0,s.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"show-the-quest-details"},"Show the Quest Details"),(0,s.kt)("p",null,"The last piece of this tutorial is to show the player the details of the quest that they've selected. Fortinately, this is fairly easy to setup and by the end, you'll have a layout that looks like this:"),(0,s.kt)("p",null,(0,s.kt)("img",{parentName:"p",src:"https://picsum.photos/id/1025/400",alt:"Example banner"})),(0,s.kt)("h2",{id:"configure-the-references"},"Configure the References"),(0,s.kt)("p",null,"There are five textures that will be used in this section. Open ",(0,s.kt)("strong",{parentName:"p"},"QuestLogModule")," and add the following:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"Asset_Id")," & ",(0,s.kt)("strong",{parentName:"li"},"Texture"),": quest_reward_frame"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"Asset_Id")," & ",(0,s.kt)("strong",{parentName:"li"},"Texture"),": bullets"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"Asset_Id")," & ",(0,s.kt)("strong",{parentName:"li"},"Texture"),": aim"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"Asset_Id")," & ",(0,s.kt)("strong",{parentName:"li"},"Texture"),": energy "),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"Asset_Id")," & ",(0,s.kt)("strong",{parentName:"li"},"Texture"),": heal ")),(0,s.kt)("h2",{id:"refactor-approot"},"Refactor AppRoot"),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},"SelectionManager")," will be used to determine whether the quest details should be shown. Open ",(0,s.kt)("inlineCode",{parentName:"p"},"AppRoot.ui")," and add a new if statement to the last div:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-csharp"},"template AppRoot : AppRoot() {\n    //Original code above\n\n   Div(style = [@master-detail-container])\n   {\n        QuestList(selectionManager, questList = allQuests);\n        \n        //highlight-start\n        if(selectionManager.selectedQuest != null) {\n            QuestDetails(selectionManager.selectedQuest);\n        }\n        //highlight-end\n   }\n}\n")),(0,s.kt)("h2",{id:"create-the-questdetails-template"},"Create the QuestDetails template"),(0,s.kt)("p",null,"There's one final template to create! Right click on the ",(0,s.kt)("strong",{parentName:"p"},"UserInterface")," folder and select ",(0,s.kt)("strong",{parentName:"p"},"Create")," > ",(0,s.kt)("strong",{parentName:"p"},"Evolve")," > ",(0,s.kt)("strong",{parentName:"p"},"UI File"),". Name it ",(0,s.kt)("strong",{parentName:"p"},"QuestDetails")," and check ",(0,s.kt)("strong",{parentName:"p"},"Create Style")," and ",(0,s.kt)("strong",{parentName:"p"},"Create Files in Directory"),". Open the template and add the following code:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-csharp"},'using QuestLog;\n\nelement QuestDetails {\n    implicit Quest quest;\n}\n\ntemplate QuestDetails : element QuestDetails() {\n\n     run {\n        if (quest.Objectives != null) { \n            System.Array.Sort(quest.Objectives); \n        }\n     }\n     \n    Text(quest.Title, style = [@quest-detail-title]);\n    Text(quest.Description, style = [@quest-detail-description]);\n    \n    Group(style = [@quest-rewards-objectives-container]) {\n        \n        Group(style = [@quest-objectives]) {\n            \n            Text_H3("Objective Log");\n                         \n            foreach(objective in quest.Objectives) {\n                \n                Group(style = [@quest-objective-line]) {\n                    \n                    var string questText = $"<color #25FFC4>{objective.DestroyedObjects}/{objective.DestroyRequirement}<color white> Objects Destroyed";\n\n                    Checkbox(attr:checked = objective.Completed, attr:colorized);\n                    Text(questText, style = [@quest-objective-text]);\n                }\n            }\n        }\n        \n        Group() {\n            Text_H3("Rewards");\n             \n            Group(style = [@reward-list]) {\n\n               foreach(reward in quest.Rewards) {\n                    Div(style = [@reward-frame]) {\n                        Image(src = reward.Asset, style = [@reward-image]);                                       \n                    }\n               } \n            }\n        }\n    }\n}\n')),(0,s.kt)("p",null,"The ",(0,s.kt)("inlineCode",{parentName:"p"},"Run")," block is sorting all of the ",(0,s.kt)("inlineCode",{parentName:"p"},"quest.Objectives")," be completed state. The rest of the code is creating text and container elements that are organizing the quest data into relevant blocks for proper formatting. "),(0,s.kt)("p",null,"The last thing to do is add the missing styles. Open ",(0,s.kt)("inlineCode",{parentName:"p"},"QuestDetails.style")," and add the following code:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-css"},'style <QuestDetails> {\n    PreferredSize = 1s;\n    PaddingTop = 48px;\n}\n\nstyle quest-objective-line {\n    LayoutType = Horizontal;\n    SpaceBetweenHorizontal = 10px;\n    PaddingTop = 1s;\n    PaddingBottom = 1s;\n}\n\nstyle quest-detail-title {\n    TextColor = @PrimaryAccentColor;\n    TextFontAsset = @H1_Font;\n    TextFontSize = 60px;\n    MarginBottom = 20px;\n}\n\nstyle quest-rewards-objectives-container {\n    PreferredWidth = 1s;\n    Padding = 100px 25px;\n    LayoutType = Horizontal;\n}\n\nstyle quest-detail-description {\n    PreferredWidth = 1s;\n    TextColor = @SecondaryAccentColor;\n    TextFontAsset = @Normal_Font;\n    TextFontSize = 24px;\n}\n\nstyle quest-objectives {\n    PreferredSize = 1s;\n    SpaceBetweenVertical = 20px;\n}\n\nstyle reward-list {\n    LayoutType = Horizontal;\n    SpaceBetweenHorizontal = 8px;\n    AlignmentOffsetX = -4px;\n}\n\nstyle reward-frame {\n    PreferredSize = 1bw 1bh;\n    BackgroundImage = "quest_reward_frame";\n    Padding = 1s;\n}\n\nstyle reward-image {\n    PreferredSize = 1bw 1bh;\n}\n')),(0,s.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,s.kt)("div",{parentName:"div",className:"admonition-heading"},(0,s.kt)("h5",{parentName:"div"},(0,s.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,s.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,s.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,s.kt)("div",{parentName:"div",className:"admonition-content"},(0,s.kt)("p",{parentName:"div"},"See ","[INSERT DOC]"," if you would like to dig into any of the style properties."))),(0,s.kt)("p",null,"Run or reload the project and select any of the quests to see the details."),(0,s.kt)("p",null,(0,s.kt)("img",{parentName:"p",src:"https://picsum.photos/id/1025/400",alt:"Example banner"})),(0,s.kt)("h2",{id:"refactor-questlist"},"Refactor QuestList"),(0,s.kt)("p",null,"There's one final issue to fix. QuestDetails element is being redrawn every frame since ",(0,s.kt)("inlineCode",{parentName:"p"},"SelectionManager")," always has a quest listed as selected. This adds unncessary overhead but is easy to fix with just one line of code in the ",(0,s.kt)("inlineCode",{parentName:"p"},"QuestFilter_OnClick")," action located in ",(0,s.kt)("inlineCode",{parentName:"p"},"QuestList.UI"),":"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-csharp"},"    state Action<UIElement, QuestStatus> QuestFilter_OnClick = (el, newStatus) => {\n        //Original code above\n       \n       //highlight-start\n        selectionManager.Deselect();\n       //highlight-end\n    };\n")))}h.isMDXComponent=!0}}]);