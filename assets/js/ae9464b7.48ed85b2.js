"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[68665],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>d});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=r.createContext({}),s=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(i.Provider,{value:t},e.children)},y="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),y=s(n),u=a,d=y["".concat(i,".").concat(u)]||y[u]||m[u]||o;return n?r.createElement(d,l(l({ref:t},c),{},{components:n})):r.createElement(d,l({ref:t},c))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=u;var p={};for(var i in t)hasOwnProperty.call(t,i)&&(p[i]=t[i]);p.originalType=e,p[y]="string"==typeof e?e:a,l[1]=p;for(var s=2;s<o;s++)l[s]=n[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},63031:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>l,default:()=>y,frontMatter:()=>o,metadata:()=>p,toc:()=>s});var r=n(87462),a=(n(67294),n(3905));const o={},l="Typography",p={unversionedId:"templates/top_level_declarations/typography",id:"templates/top_level_declarations/typography",title:"Typography",description:"Typography is almost the same as a template except it deals exclusively with text elements. It has an extra implicit parameter called text",source:"@site/docs/templates/top_level_declarations/typography.md",sourceDirName:"templates/top_level_declarations",slug:"/templates/top_level_declarations/typography",permalink:"/EvolveUIDocs/docs/templates/top_level_declarations/typography",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"conceptual",previous:{title:"Template",permalink:"/EvolveUIDocs/docs/templates/top_level_declarations/template"},next:{title:"Using Statements",permalink:"/EvolveUIDocs/docs/templates/top_level_declarations/using"}},i={},s=[],c={toc:s};function y(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"typography"},"Typography"),(0,a.kt)("p",null,"Typography is almost the same as a ",(0,a.kt)("inlineCode",{parentName:"p"},"template")," except it deals exclusively with text elements. It has an extra implicit parameter called ",(0,a.kt)("inlineCode",{parentName:"p"},"text"),"\nwhich is the string of text it represents and makes the ",(0,a.kt)("inlineCode",{parentName:"p"},"$text")," built in available. Unlike a ",(0,a.kt)("inlineCode",{parentName:"p"},"template"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"typography")," cannot declare a ",(0,a.kt)("inlineCode",{parentName:"p"},"render")," block or\nslots."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},'\n// This is a trival typography with no extra behavior or style\n// Declaring typography like this is useful to define a consistent \n// set of text based elements for your game.\ntypography Label; \n\n// a more complex typography declaration can include parameters, state, behavior etc.\ntypography ComplexLabel : CompanionType {\n    \n    required bool isBold; \n    \n    state int clickCount;\n    \n    style = [@some-style];\n    attr:bold = isBold;\n    \n    mouse:click => clickCount++;\n    \n    // $text provides an interface for getting/setting/manipulating the underlying text string \n    before:update => $text.SetText($"Clicked {clickCount} times");\n    \n}\n\n// typography can also accept generics \ntypography GenericLabel<T> {\n    \n    required T value;\n    \n    before:update => $text.SetText(value.ToString());\n    \n}\n\n')))}y.isMDXComponent=!0}}]);