"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[73787],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=c(n),m=a,f=d["".concat(s,".").concat(m)]||d[m]||u[m]||o;return n?r.createElement(f,i(i({ref:t},p),{},{components:n})):r.createElement(f,i({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},86508:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return u}});var r=n(87462),a=n(63366),o=(n(67294),n(3905)),i=["components"],l={},s="Grid Layout",c={unversionedId:"templates/grid_layout_docs",id:"templates/grid_layout_docs",title:"Grid Layout",description:"A grid is a 2d layout box that works by taking a template definition on the row and column axis",source:"@site/docs/templates/grid_layout_docs.mdx",sourceDirName:"templates",slug:"/templates/grid_layout_docs",permalink:"/EvolveUIDocs/docs/templates/grid_layout_docs",tags:[],version:"current",frontMatter:{},sidebar:"conceptual",previous:{title:"Expression Syntax",permalink:"/EvolveUIDocs/docs/templates/expression_syntax"},next:{title:"SRP Setup",permalink:"/EvolveUIDocs/docs/templates/srp_setup"}},p={},u=[],d={toc:u};function m(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"#Grid Layout"),(0,o.kt)("p",null,"A grid is a 2d layout box that works by taking a template definition on the row and column axis\nItems can be placed explicitly in numbered grid cells or placed implicitly using one of two placement\nalgorithms(explained later)           "),(0,o.kt)("p",null,"Grids are fixed in the main axis direction: their cell count will not grow. In the cross axis direction we can place\noverflow the grid as much as we want and it will adapt to fit. "),(0,o.kt)("p",null,"Items can placed either explicitly by using the GridItem style (syntax = uint span unit, ",(0,o.kt)("inlineCode",{parentName:"p"},"GridItemX = 1 span 3"),"\nwould mean: Place this in column 1 and span 3 rows (or the opposite if LayoutType = GridVertical) "),(0,o.kt)("p",null,"Grid gap can be achieved via 'HorizontalSpaceBetween' and 'Vertical Space Between'"),(0,o.kt)("p",null,"grid templates can take up to 24 values\neach value is made up of a unit, a 16bit float value, and a ushort stretch value"),(0,o.kt)("p",null,"parser syntax: 100px_1s 300px"),(0,o.kt)("p",null,"HorizontalWrap"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"First layout the main axis, if elements do not fit we add a new line box and\ncontinue adding elements until that line is full or we are done. repeat\n\nBecause we need to solve the main axis first, we can't resolve aspect locks \nthat are locked to the cross axis size. \n\nSpaceBetween on the cross axis works to like grid gap: we don't put space between\nthe elements but rather between the layout lines. This means collapsing on the \ncross axis also collapses space not between the elements but between the element\nand the spacer size on the cross axis.\n")))}m.isMDXComponent=!0}}]);