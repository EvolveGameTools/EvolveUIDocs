"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[86992],{3905:(t,e,a)=>{a.d(e,{Zo:()=>m,kt:()=>N});var n=a(67294);function r(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function l(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function i(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?l(Object(a),!0).forEach((function(e){r(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function o(t,e){if(null==t)return{};var a,n,r=function(t,e){if(null==t)return{};var a,n,r={},l=Object.keys(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||(r[a]=t[a]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(r[a]=t[a])}return r}var p=n.createContext({}),d=function(t){var e=n.useContext(p),a=e;return t&&(a="function"==typeof t?t(e):i(i({},e),t)),a},m=function(t){var e=d(t.components);return n.createElement(p.Provider,{value:e},t.children)},s="mdxType",k={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},h=n.forwardRef((function(t,e){var a=t.components,r=t.mdxType,l=t.originalType,p=t.parentName,m=o(t,["components","mdxType","originalType","parentName"]),s=d(a),h=r,N=s["".concat(p,".").concat(h)]||s[h]||k[h]||l;return a?n.createElement(N,i(i({ref:e},m),{},{components:a})):n.createElement(N,i({ref:e},m))}));function N(t,e){var a=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var l=a.length,i=new Array(l);i[0]=h;var o={};for(var p in e)hasOwnProperty.call(e,p)&&(o[p]=e[p]);o.originalType=t,o[s]="string"==typeof t?t:r,i[1]=o;for(var d=2;d<l;d++)i[d]=a[d];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}h.displayName="MDXCreateElement"},9633:(t,e,a)=>{a.d(e,{ZP:()=>i});var n=a(87462),r=(a(67294),a(3905));const l={toc:[]};function i(t){let{components:e,...a}=t;return(0,r.kt)("wrapper",(0,n.Z)({},l,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Unit"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Shorthand"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Width"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"w")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The width of the element")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Height"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"h")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The height of the element")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"ContentHeight"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"cnth")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The content height of the element")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"ContentWidth"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"cntw")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The content width of the element")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Em"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"em")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The em size resolved for this element")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"ParentWidth"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"pw")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The post layout width of the parent element or the view size if parent is null")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"ParentHeight"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"ph")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The post layout height of the parent element or the view size if parent is null")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"ParentContentAreaWidth"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"pcaw")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The parent's width (or viewport width if parent is null) minus any border and padding on the horizontal axis")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"ParentContentAreaHeight"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"pcah")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The parent's height (or viewport height if parent is null) minus any border and padding on the vertical axis")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"ContentAreaWidth"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"caw")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The post layout width of the element minus any padding and border on the horizontal axis")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"ContentAreaHeight"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"cah")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The post layout height of the element minus any padding and border on the vertical axis")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Percent"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"%")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A percentage based value, the value that this is relative to changes based on the property usage. See individual properties to see what the % relative value is")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Pixel"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"px")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A fixed pixel value that accounts for any dpi scaling")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"ScreenWidth"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"sw")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The total screen width in dpi scaled pixels")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"ScreenHeight"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"sh")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The total screen height in dpi scaled pixels")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"ViewportWidth"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"vw")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The width of the view that an element belongs to in dpi scaled pixels")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"ViewportHeight"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"vh")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The height of the view that an element belongs to in dpi scaled pixels")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"BackgroundImageWidth"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"bw")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The width of the currently assigned background texture in unscaled texels")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"BackgroundImageHeight"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"bh")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The height of the currently assigned background texture in unscaled texels")))))}i.isMDXComponent=!0},85723:(t,e,a)=>{a.d(e,{ZP:()=>i});var n=a(87462),r=(a(67294),a(3905));const l={toc:[]};function i(t){let{components:e,...a}=t;return(0,r.kt)("wrapper",(0,n.Z)({},l,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Unit"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Shorthand"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Width"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"w")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The width of the element")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Height"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"h")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The height of the element")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Percent"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"%")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A percentage based value, the value that this is relative to changes based on the property usage. See individual properties to see what the % relative value is")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Pixel"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"px")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A fixed pixel value that accounts for any dpi scaling")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"BackgroundImageWidth"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"bw")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The width of the currently assigned background texture in unscaled texels")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"BackgroundImageHeight"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"bh")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The height of the currently assigned background texture in unscaled texels")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"MinWidthHeight"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"mnwh")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The minimum of the target's width or height")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"MaxWidthHeight"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"mxwh")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The maximum of the target's width or height")))))}i.isMDXComponent=!0},72960:(t,e,a)=>{a.d(e,{ZP:()=>i});var n=a(87462),r=(a(67294),a(3905));const l={toc:[]};function i(t){let{components:e,...a}=t;return(0,r.kt)("wrapper",(0,n.Z)({},l,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Unit"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Shorthand"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Percent"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"%")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A percentage based value, the value that this is relative to changes based on the property usage. See individual properties to see what the % relative value is")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Pixel"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"px")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A fixed pixel value that accounts for any dpi scaling")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"ImageWidth"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"bw")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The width of the currently assigned background texture in unscaled texels")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"ImageHeight"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"bh")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The height of the currently assigned background texture in unscaled texels")))))}i.isMDXComponent=!0},37759:(t,e,a)=>{a.d(e,{ZP:()=>i});var n=a(87462),r=(a(67294),a(3905));const l={toc:[]};function i(t){let{components:e,...a}=t;return(0,r.kt)("wrapper",(0,n.Z)({},l,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Unit"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Shorthand"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Em"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"em")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The em size resolved for this element")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Rem"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"rem")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The root em size resolved for this element")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Point"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"pt")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A size specified in units defined by the currently assigned font file or the default font if none is assigned")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Pixel"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"px")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A fixed pixel value that accounts for any dpi scaling")))))}i.isMDXComponent=!0},49732:(t,e,a)=>{a.d(e,{ZP:()=>i});var n=a(87462),r=(a(67294),a(3905));const l={toc:[]};function i(t){let{components:e,...a}=t;return(0,r.kt)("wrapper",(0,n.Z)({},l,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Unit"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Shorthand"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Content"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"cnt")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The content size of the element")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Em"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"em")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The em size resolved for this element")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"LineHeight"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"lh")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The line height of the element computed from the current font size")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"ParentSize"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"psz")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The size of the parent. Note that if there exists a paradox where the parent sizes itself based on content size and some child sizes itself based on the parent size. In this case the child will set its size to zero. This paradox is only applicable for layout")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Percent"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"%")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A percentage based value, the value that this is relative to changes based on the property usage. See individual properties to see what the % relative value is")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Pixel"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"px")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A fixed pixel value that accounts for any dpi scaling")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"ViewportWidth"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"vw")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The width of the view that an element belongs to in dpi scaled pixels")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"ViewportHeight"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"vh")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The height of the view that an element belongs to in dpi scaled pixels")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"BackgroundImageWidth"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"bw")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The width of the currently assigned background texture in unscaled texels")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"BackgroundImageHeight"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"bh")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The height of the currently assigned background texture in unscaled texels")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Stretch"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"s")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A portion of 'remaining space' that should be attributed to this element.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"ApplicationWidth"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"aw")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The total width of the root view in dpi scaled pixels")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"ApplicationHeight"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"ah")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The total width of the root view in dpi scaled pixels")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"MaxChild"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"mx")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The size of the largest child")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"MinChild"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"mn")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The size of the smallest child")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"StretchContent"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"strcnt")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A unit that reserves at least 1x the content size and then adds n stretch pieces")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"FitContent"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"fc")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Not Supported")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"FillRemaining"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"fr")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A fixed percentage of the remaining space in a layout before stretch values are distributed")))))}i.isMDXComponent=!0},79314:(t,e,a)=>{a.d(e,{ZP:()=>i});var n=a(87462),r=(a(67294),a(3905));const l={toc:[]};function i(t){let{components:e,...a}=t;return(0,r.kt)("wrapper",(0,n.Z)({},l,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Unit"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Shorthand"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Content"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"cnt")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The content size of the element")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Em"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"em")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The em size resolved for this element")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"LineHeight"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"lh")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The line height of the element computed from the current font size")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"ParentSize"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"psz")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The size of the parent. Note that if there exists a paradox where the parent sizes itself based on content size and some child sizes itself based on the parent size. In this case the child will set its size to zero. This paradox is only applicable for layout")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Percent"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"%")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A percentage based value, the value that this is relative to changes based on the property usage. See individual properties to see what the % relative value is")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Pixel"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"px")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A fixed pixel value that accounts for any dpi scaling")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"ViewportWidth"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"vw")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The width of the view that an element belongs to in dpi scaled pixels")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"ViewportHeight"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"vh")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The height of the view that an element belongs to in dpi scaled pixels")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"BackgroundImageWidth"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"bw")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The width of the currently assigned background texture in unscaled texels")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"BackgroundImageHeight"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"bh")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The height of the currently assigned background texture in unscaled texels")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"ApplicationWidth"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"aw")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The total width of the root view in dpi scaled pixels")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"ApplicationHeight"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"ah")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The total width of the root view in dpi scaled pixels")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"MaxChild"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"mx")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The size of the largest child")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"MinChild"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"mn")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The size of the smallest child")))))}i.isMDXComponent=!0},11916:(t,e,a)=>{a.d(e,{ZP:()=>i});var n=a(87462),r=(a(67294),a(3905));const l={toc:[]};function i(t){let{components:e,...a}=t;return(0,r.kt)("wrapper",(0,n.Z)({},l,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Unit"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Shorthand"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Em"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"em")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The em size resolved for this element")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Pixel"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"px")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A fixed pixel value that accounts for any dpi scaling")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"ViewportWidth"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"vw")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The width of the view that an element belongs to in dpi scaled pixels")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"ViewportHeight"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"vh")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The height of the view that an element belongs to in dpi scaled pixels")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Stretch"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"s")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A portion of 'remaining space' that should be attributed to this element.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"ApplicationWidth"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"aw")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The total width of the root view in dpi scaled pixels")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"ApplicationHeight"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"ah")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The total width of the root view in dpi scaled pixels")))))}i.isMDXComponent=!0},14433:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>jt,contentTitle:()=>Et,default:()=>qt,frontMatter:()=>Ht,metadata:()=>Ft,toc:()=>Gt});var n=a(87462),r=(a(67294),a(3905));const l={toc:[]};function i(t){let{components:e,...a}=t;return(0,r.kt)("wrapper",(0,n.Z)({},l,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"A value that is used to constrain the result of aligning an element."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Value"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"None"),(0,r.kt)("td",{parentName:"tr",align:null},"The element has no boundary and no clamping will occur")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Screen"),(0,r.kt)("td",{parentName:"tr",align:null},"The element's position is clamped to the screen. This ensures the element remains on screen")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Parent"),(0,r.kt)("td",{parentName:"tr",align:null},"The element's position is clamped inside the bounds of it's parent")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ParentContentArea"),(0,r.kt)("td",{parentName:"tr",align:null},"The element's position is clamped to the it's parent size minus any padding or border the parent has on the relaveant axis")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Clipper"),(0,r.kt)("td",{parentName:"tr",align:null},"The element's position is clamped to the it's clipper's bounds")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"View"),(0,r.kt)("td",{parentName:"tr",align:null},"The element's position is clamped to the it's view's bounds")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"UnconstrainedParent"),(0,r.kt)("td",{parentName:"tr",align:null},"The element's position is clamped to the it's parent's bounds but ignores the element's size, effectively ensuring the alignment point remains inside the parent but the rest of the element is unconstrained")))))}i.isMDXComponent=!0;const o={toc:[]};function p(t){let{components:e,...a}=t;return(0,r.kt)("wrapper",(0,n.Z)({},o,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Determines the direction that alignment will occur."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Value"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Start"),(0,r.kt)("td",{parentName:"tr",align:null},"The element aligns from the left side of the parent")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"End"),(0,r.kt)("td",{parentName:"tr",align:null},"The element aligns from the right side of the parent")))))}p.isMDXComponent=!0;var d=a(9633);const m={toc:[]};function s(t){let{components:e,...a}=t;return(0,r.kt)("wrapper",(0,n.Z)({},m,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Offsets the point from which alignment occurs"),(0,r.kt)(d.ZP,{mdxType:"UnitTable"}))}s.isMDXComponent=!0;const k={toc:[]};function h(t){let{components:e,...a}=t;return(0,r.kt)("wrapper",(0,n.Z)({},k,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Determines the point against which an element applies alignments."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Value"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"LayoutBox"),(0,r.kt)("td",{parentName:"tr",align:null},"The element aligns relative to it's own layout position and size")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Clipper"),(0,r.kt)("td",{parentName:"tr",align:null},"The element aligns relative to it's clippers position and size or it's view if there is no clipper")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Parent"),(0,r.kt)("td",{parentName:"tr",align:null},"The element aligns relative to it's parent position and size")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ParentContentArea"),(0,r.kt)("td",{parentName:"tr",align:null},"The element aligns relative to it's parent position and size inset by any padding and border the parent has on the relavant axis")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"View"),(0,r.kt)("td",{parentName:"tr",align:null},"The element aligns relative to it's view")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Screen"),(0,r.kt)("td",{parentName:"tr",align:null},"The element aligns relative to the screen")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Mouse"),(0,r.kt)("td",{parentName:"tr",align:null},"The element aligns relative to the mouse position. This is an easy way to make things follow the mouse")))))}h.isMDXComponent=!0;const N={toc:[]};function u(t){let{components:e,...a}=t;return(0,r.kt)("wrapper",(0,n.Z)({},N,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Constrains the element's size based on a provided aspect ratio. "),(0,r.kt)("p",null,"There are two valid values ",(0,r.kt)("inlineCode",{parentName:"p"},"WidthControlsHeight")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"HeightControlsWidth")),(0,r.kt)("p",null,"These modes in conjuction with a ratio define the size constraints for this element during layout. "),(0,r.kt)("p",null,"There are some layout types that cannot support this in some cases, most notably ",(0,r.kt)("inlineCode",{parentName:"p"},"HorizontalWrap")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"VerticalWrap"),"\ncannot support element's aspect ratio constraints on the main axis. "),(0,r.kt)("p",null,"Style syntax examples: "),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"height-ctrl-width 1:1"),"\n",(0,r.kt)("inlineCode",{parentName:"p"},"width-ctrl-height 3:2"),"\n",(0,r.kt)("inlineCode",{parentName:"p"},"height-ctrl-width 5:1")))}u.isMDXComponent=!0;const g={toc:[]};function c(t){let{components:e,...a}=t;return(0,r.kt)("wrapper",(0,n.Z)({},g,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Determines how an element's background texture will scale with the element's rendered size."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Value"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"ScaleToFit"),(0,r.kt)("td",{parentName:"tr",align:null},"The image will scale up or down with element size but will retain it's native aspect ratio")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"ScaleToFitAndOverflow"),(0,r.kt)("td",{parentName:"tr",align:null},"The image will scale up or down with element size but will retain it's native aspect ratio, allows the texture to overflow the element size")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Fill"),(0,r.kt)("td",{parentName:"tr",align:null},"The image will always fill the entire element and will not retain its native aspect ratio")))))}c.isMDXComponent=!0;const f={toc:[]};function y(t){let{components:e,...a}=t;return(0,r.kt)("wrapper",(0,n.Z)({},f,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Currently Unused"))}y.isMDXComponent=!0;const b={toc:[]};function x(t){let{components:e,...a}=t;return(0,r.kt)("wrapper",(0,n.Z)({},b,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Determines what kind of rectangles can clip this element."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Value"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Normal"),(0,r.kt)("td",{parentName:"tr",align:null},"The element is clipped against the next highest element in it's ancestry with an ",(0,r.kt)("inlineCode",{parentName:"td"},"OverflowX")," or ",(0,r.kt)("inlineCode",{parentName:"td"},"OverflowY")," property defined")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Never"),(0,r.kt)("td",{parentName:"tr",align:null},"The element will never be clipped")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"View"),(0,r.kt)("td",{parentName:"tr",align:null},"The element will clip only against it's view")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Screen"),(0,r.kt)("td",{parentName:"tr",align:null},"The element will clip only against the screen")))))}x.isMDXComponent=!0;const v={toc:[]};function w(t){let{components:e,...a}=t;return(0,r.kt)("wrapper",(0,n.Z)({},v,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Determines the rectangle considered for clipping children when ",(0,r.kt)("inlineCode",{parentName:"p"},"OverflowX")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"OverflowY")," are set for an element"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Value"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"BorderBox"),(0,r.kt)("td",{parentName:"tr",align:null},"The clipping size is determined based on the full size of the element")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"ContentBox"),(0,r.kt)("td",{parentName:"tr",align:null},"The clipping size is determined based on the full size of the element and inset by any padding or border on the clipping element")))))}w.isMDXComponent=!0;const T={toc:[]};function C(t){let{components:e,...a}=t;return(0,r.kt)("wrapper",(0,n.Z)({},T,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"A reference to a cursor asset"))}C.isMDXComponent=!0;var D=a(85723);const M={toc:[]};function z(t){let{components:e,...a}=t;return(0,r.kt)("wrapper",(0,n.Z)({},M,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"A size that is relative to an element's post layout size."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"%")," is relative to the element's height or width depending on which axis this property is applied to."),(0,r.kt)(D.ZP,{mdxType:"UnitTable"}))}z.isMDXComponent=!0;const X={toc:[]};function A(t){let{components:e,...a}=t;return(0,r.kt)("wrapper",(0,n.Z)({},X,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"A reference to a Font asset"))}A.isMDXComponent=!0;const S={toc:[]};function L(t){let{components:e,...a}=t;return(0,r.kt)("wrapper",(0,n.Z)({},S,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Not yet implemented"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Value"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Normal"),(0,r.kt)("td",{parentName:"tr",align:null},"The text will render normally without decoration")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Bold"),(0,r.kt)("td",{parentName:"tr",align:null},"The text will render with a bold font if available or a pseudo bold if no bold font is provided")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Italic"),(0,r.kt)("td",{parentName:"tr",align:null},"The text will render with an italic font if available or a pseudo italic if no italic font is provided")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Underline"),(0,r.kt)("td",{parentName:"tr",align:null},"The text will render with an underline")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"StrikeThrough"),(0,r.kt)("td",{parentName:"tr",align:null},"The text will render with a strike though")))),(0,r.kt)("p",null,"Multiple values can applied with an ",(0,r.kt)("inlineCode",{parentName:"p"},"|")," operator. For example to render both bold and italic: ",(0,r.kt)("inlineCode",{parentName:"p"},"Bold | Italic")))}L.isMDXComponent=!0;const I={toc:[]};function P(t){let{components:e,...a}=t;return(0,r.kt)("wrapper",(0,n.Z)({},I,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Defines how an element is placed inside of a grid layout. Only applies if the element's layout parent is a grid"),(0,r.kt)("p",null,"This is made of two parts, a ",(0,r.kt)("inlineCode",{parentName:"p"},"place")," and a ",(0,r.kt)("inlineCode",{parentName:"p"},"span"),". ",(0,r.kt)("inlineCode",{parentName:"p"},"place")," refers to the coordinate on the relevant axis that the\nelement should placed on. If ",(0,r.kt)("inlineCode",{parentName:"p"},"place < 0")," the grid will automatically place the element in the next available cell(s)."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"span")," tells the grid how wide or tall the element should be inside the grid. If ",(0,r.kt)("inlineCode",{parentName:"p"},"span <= 0")," it will default to ",(0,r.kt)("inlineCode",{parentName:"p"},"1")))}P.isMDXComponent=!0;const Z={toc:[]};function R(t){let{components:e,...a}=t;return(0,r.kt)("wrapper",(0,n.Z)({},Z,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Grids can either be ",(0,r.kt)("inlineCode",{parentName:"p"},"Dense")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"Sparse"),". When a grid places element inside of itself, ",(0,r.kt)("inlineCode",{parentName:"p"},"Dense")," will always try to place new elements\nstarting at the first cell where ",(0,r.kt)("inlineCode",{parentName:"p"},"Sparse")," will remember the last place it successfully placed and element and will continue placement\nfrom that point. ",(0,r.kt)("inlineCode",{parentName:"p"},"Sparse")," is faster since the search range is reduced."))}R.isMDXComponent=!0;const O={toc:[]};function U(t){let{components:e,...a}=t;return(0,r.kt)("wrapper",(0,n.Z)({},O,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Grids define a template of cells that determine how elements are sized and placed within it."),(0,r.kt)("p",null,"A grid can define a maximum of 24 cells on each axis"))}U.isMDXComponent=!0;const V={toc:[]};function W(t){let{components:e,...a}=t;return(0,r.kt)("wrapper",(0,n.Z)({},V,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Not yet implemented"))}W.isMDXComponent=!0;const B={toc:[]};function H(t){let{components:e,...a}=t;return(0,r.kt)("wrapper",(0,n.Z)({},B,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"An element can either participate in it's parent's layout phase (",(0,r.kt)("inlineCode",{parentName:"p"},"Normal"),") or not (",(0,r.kt)("inlineCode",{parentName:"p"},"Ignored"),"). An element with ",(0,r.kt)("inlineCode",{parentName:"p"},"LayoutBehavior = Ignored"),"\nwill be totally ignored by it's parent and will not contribute to it's parent size at all. ",(0,r.kt)("inlineCode",{parentName:"p"},"Ignored")," elements are always laid out at their\nparent's top left position. ",(0,r.kt)("inlineCode",{parentName:"p"},"Ignored")," elements can reference sizes relative to their parent and excute their layout after the parent has\ncompleted it's main layout pass."))}H.isMDXComponent=!0;const E={toc:[]};function F(t){let{components:e,...a}=t;return(0,r.kt)("wrapper",(0,n.Z)({},E,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Layout direction determines if an element lays out it's children starting with the first child and ending with the last child (",(0,r.kt)("inlineCode",{parentName:"p"},"Forward"),")\nor starting with the last child and ending with the first (",(0,r.kt)("inlineCode",{parentName:"p"},"Reverse"),")"))}F.isMDXComponent=!0;const j={toc:[]};function G(t){let{components:e,...a}=t;return(0,r.kt)("wrapper",(0,n.Z)({},j,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Determines the layout algorithm used by an element to layout it's children that are do not have ",(0,r.kt)("inlineCode",{parentName:"p"},"LayoutBehavior = Ignored")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Value"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Vertical"),(0,r.kt)("td",{parentName:"tr",align:null},"A one dimensional vertical column")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Horizontal"),(0,r.kt)("td",{parentName:"tr",align:null},"A one dimensional horizontal colum")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"GridHorizontal"),(0,r.kt)("td",{parentName:"tr",align:null},"A two dimensional grid that places children first horizontally then wraps to another row when overflowing")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"GridVertical"),(0,r.kt)("td",{parentName:"tr",align:null},"A two dimensional grid that places children first vertically then wraps to another column when overflowing")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"HorizontalWrap"),(0,r.kt)("td",{parentName:"tr",align:null},"Similar to ",(0,r.kt)("inlineCode",{parentName:"td"},"Horizontal")," except that children that overflow will wrap to a new row instead of simply overflowing")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"VerticalWrap"),(0,r.kt)("td",{parentName:"tr",align:null},"Similar to ",(0,r.kt)("inlineCode",{parentName:"td"},"Vertical")," except that children that overflow will wrap to a new column instead of simply overflowing")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Stack"),(0,r.kt)("td",{parentName:"tr",align:null},"All children are laid out on top of each other on the ",(0,r.kt)("inlineCode",{parentName:"td"},"z")," axis")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Radial"),(0,r.kt)("td",{parentName:"tr",align:null},"Not yet implemented")))))}G.isMDXComponent=!0;const _={toc:[]};function q(t){let{components:e,...a}=t;return(0,r.kt)("wrapper",(0,n.Z)({},_,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Determines if any descendants that overflow are ",(0,r.kt)("inlineCode",{parentName:"p"},"Visible")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"Hidden"),". Note that this only applies to screen aligned bounding boxes and is not the\nsame as per-pixel masking."))}q.isMDXComponent=!0;const Y={toc:[]};function J(t){let{components:e,...a}=t;return(0,r.kt)("wrapper",(0,n.Z)({},Y,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Determine if input should be handled by an element or completely ignored"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Value"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Normal"),(0,r.kt)("td",{parentName:"tr",align:null},"Input is handled as normal")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"None"),(0,r.kt)("td",{parentName:"tr",align:null},"Input is totally ignored")))))}J.isMDXComponent=!0;const K={toc:[]};function Q(t){let{components:e,...a}=t;return(0,r.kt)("wrapper",(0,n.Z)({},K,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Applies a series of matrix transformations to an element in world space. Supports up to 7 transformations."))}Q.isMDXComponent=!0;const $={toc:[]};function tt(t){let{components:e,...a}=t;return(0,r.kt)("wrapper",(0,n.Z)({},$,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"The direction in which a reveal effect runs, either ",(0,r.kt)("inlineCode",{parentName:"p"},"Clockwise")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"CounterClockWise")))}tt.isMDXComponent=!0;const et={toc:[]};function at(t){let{components:e,...a}=t;return(0,r.kt)("wrapper",(0,n.Z)({},et,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Value"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"None"),(0,r.kt)("td",{parentName:"tr",align:null},"No reveal effect")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Manual"),(0,r.kt)("td",{parentName:"tr",align:null},"User completely controls the effect with the corresponding style properties")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"HorizontalSweepLeft"),(0,r.kt)("td",{parentName:"tr",align:null},"Reveal the element from right to left")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"HorizontalSweepRight"),(0,r.kt)("td",{parentName:"tr",align:null},"Reveal the element from left to right")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"VerticalSweepUp"),(0,r.kt)("td",{parentName:"tr",align:null},"Reveal the element from bottom to top")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"VerticalSweepDown"),(0,r.kt)("td",{parentName:"tr",align:null},"Reveal the element from top to bottom")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"RadialSweep"),(0,r.kt)("td",{parentName:"tr",align:null},"Reveal the element from the center point in a sweep direction set by ",(0,r.kt)("inlineCode",{parentName:"td"},"RevealDirection"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"CenterExpand"),(0,r.kt)("td",{parentName:"tr",align:null},"Reveal the element from the center in an ever growing circle, size is set by ",(0,r.kt)("inlineCode",{parentName:"td"},"RevealAmount"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"OffsetExpand"),(0,r.kt)("td",{parentName:"tr",align:null},"Reveal the element from the ",(0,r.kt)("inlineCode",{parentName:"td"},"RevealOffsetX")," and ",(0,r.kt)("inlineCode",{parentName:"td"},"RevealOffsetY")," positions in an ever growing circle, size is set by ",(0,r.kt)("inlineCode",{parentName:"td"},"RevealAmount"))))))}at.isMDXComponent=!0;const nt={toc:[]};function rt(t){let{components:e,...a}=t;return(0,r.kt)("wrapper",(0,n.Z)({},nt,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Determines the interaction of padding and margin between elements in a layout. "),(0,r.kt)("p",null,"Multiple values can be set with the ",(0,r.kt)("inlineCode",{parentName:"p"},"|")," operator"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Value"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"None"),(0,r.kt)("td",{parentName:"tr",align:null},"No changes occur, both parent and siblings all keep their defined paddings and margins")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"RemoveInner"),(0,r.kt)("td",{parentName:"tr",align:null},"Removes all marigins from children except left margin on the first child and right margin on the last")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"RemoveOuter"),(0,r.kt)("td",{parentName:"tr",align:null},"Removes margin left from the first child and margin right from the last child")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"CollapseOuter"),(0,r.kt)("td",{parentName:"tr",align:null},"Looks at the parent's padding left and the first child's margin left and takes the larger of the two. Does the opposite for the last child")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"CollapseInner"),(0,r.kt)("td",{parentName:"tr",align:null},"Looks at the margins between each child and takes the largest of the two")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Collapse"),(0,r.kt)("td",{parentName:"tr",align:null},"Applies both ",(0,r.kt)("inlineCode",{parentName:"td"},"CollapseInner")," and ",(0,r.kt)("inlineCode",{parentName:"td"},"CollapseOuter"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Remove"),(0,r.kt)("td",{parentName:"tr",align:null},"Applies both ",(0,r.kt)("inlineCode",{parentName:"td"},"RemoveInner")," and ",(0,r.kt)("inlineCode",{parentName:"td"},"RemoveOuter"))))))}rt.isMDXComponent=!0;const lt={toc:[]};function it(t){let{components:e,...a}=t;return(0,r.kt)("wrapper",(0,n.Z)({},lt,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Aligns the text within its own layout box. Does not impact text position if text is content sized because in that case there is no space to align into."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Value"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Left"),(0,r.kt)("td",{parentName:"tr",align:null},"Push text to the left")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Right"),(0,r.kt)("td",{parentName:"tr",align:null},"Push text to the right")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Center"),(0,r.kt)("td",{parentName:"tr",align:null},"Center the text")))))}it.isMDXComponent=!0;const ot={toc:[]};function pt(t){let{components:e,...a}=t;return(0,r.kt)("wrapper",(0,n.Z)({},ot,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Aligns the text vertically within its own layout box. Does not impact text position if text is content sized because in that case there is no space to align into."),(0,r.kt)("p",null,"Not currently working"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Value"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Baseline"),(0,r.kt)("td",{parentName:"tr",align:null},"Aligns text to the elements baseline")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Top"),(0,r.kt)("td",{parentName:"tr",align:null},"Aligns text to geometric top of the text quads")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Bottom"),(0,r.kt)("td",{parentName:"tr",align:null},"Aligns text to geometric bottom of the text quads")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Center"),(0,r.kt)("td",{parentName:"tr",align:null},"Aligns text to geometric center of the text quads")))))}pt.isMDXComponent=!0;const dt={toc:[]};function mt(t){let{components:e,...a}=t;return(0,r.kt)("wrapper",(0,n.Z)({},dt,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Determine how text is displayed that overflows its own bounds"),(0,r.kt)("p",null,"Not currently working"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Value"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"None"),(0,r.kt)("td",{parentName:"tr",align:null},"Do nothing and allow the overflow")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Truncate"),(0,r.kt)("td",{parentName:"tr",align:null},"Shorten the rendered text so there is no overflow")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Ellipsis"),(0,r.kt)("td",{parentName:"tr",align:null},"Shorten the rendered text so there is no overflow and append ",(0,r.kt)("inlineCode",{parentName:"td"},"..."))))))}mt.isMDXComponent=!0;const st={toc:[]};function kt(t){let{components:e,...a}=t;return(0,r.kt)("wrapper",(0,n.Z)({},st,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Performs a case transform on text"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Value"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"None"),(0,r.kt)("td",{parentName:"tr",align:null},"Input is unchanged")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"UpperCase"),(0,r.kt)("td",{parentName:"tr",align:null},"All characters in the text will be uppercased")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"LowerCase"),(0,r.kt)("td",{parentName:"tr",align:null},"All characters in the text will be lowercased")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"SmallCaps"),(0,r.kt)("td",{parentName:"tr",align:null},"All characters in the text will be uppercased but rendered smaller. Not currently working")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"TitleCase"),(0,r.kt)("td",{parentName:"tr",align:null},"The first character of each word in the text will be upper cased. Not currently working")))))}kt.isMDXComponent=!0;const ht={toc:[]};function Nt(t){let{components:e,...a}=t;return(0,r.kt)("wrapper",(0,n.Z)({},ht,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"A reference to a texture, gradient, or mask. Includes a ",(0,r.kt)("inlineCode",{parentName:"p"},"SampleMode")," that defines how the texture will be used"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Value"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Default"),(0,r.kt)("td",{parentName:"tr",align:null},"Just renders the texture as is")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"NineSlice"),(0,r.kt)("td",{parentName:"tr",align:null},"Applies 9-slice borders based on the element's ",(0,r.kt)("inlineCode",{parentName:"td"},"Border")," sizes and the texture asset's ",(0,r.kt)("inlineCode",{parentName:"td"},"Border")," size")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"LinearGradient"),(0,r.kt)("td",{parentName:"tr",align:null},"Samples the texture a linear gradient. Underlying texture data should be a gradient or this will look very strange")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"RadialGradient"),(0,r.kt)("td",{parentName:"tr",align:null},"Samples the texture a radial gradient. Underlying texture data should be a gradient or this will look very strange")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"EllipticalGradient"),(0,r.kt)("td",{parentName:"tr",align:null},"Samples the texture an elliptical gradient gradient. Underlying texture data should be a gradient or this will look very strange")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"ConicGradient"),(0,r.kt)("td",{parentName:"tr",align:null},"Samples the texture a conic gradient. Underlying texture data should be a gradient or this will look very strange")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"SoftMask"),(0,r.kt)("td",{parentName:"tr",align:null},"Samples the texture as a soft mask, applying its alpha value along with a threshold to determine which parts of the main texture are visible")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"SoftMaskInverse"),(0,r.kt)("td",{parentName:"tr",align:null},"Same as ",(0,r.kt)("inlineCode",{parentName:"td"},"SoftMask")," but inverts the mask region")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"HardMaskInverse"),(0,r.kt)("td",{parentName:"tr",align:null},"Same as ",(0,r.kt)("inlineCode",{parentName:"td"},"HardMask")," but inverts the mask region")))))}Nt.isMDXComponent=!0;var ut=a(72960);const gt={toc:[]};function ct(t){let{components:e,...a}=t;return(0,r.kt)("wrapper",(0,n.Z)({},gt,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"A size that is relative to a given texture's size."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"%")," is relative to the texture's height or width depending on which axis this property is applied to."),(0,r.kt)(ut.ZP,{mdxType:"UnitTable"}))}ct.isMDXComponent=!0;const ft={toc:[]};function yt(t){let{components:e,...a}=t;return(0,r.kt)("wrapper",(0,n.Z)({},ft,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Unit"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Shorthand"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Percent"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"%")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A percentage based value, the value that this is relative to changes based on the property usage. See individual properties to see what the % relative value is")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Degrees"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"deg")),(0,r.kt)("td",{parentName:"tr",align:"left"},"An angular value in degrees")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Radians"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"rad")),(0,r.kt)("td",{parentName:"tr",align:"left"},"An angular value in radians")))))}yt.isMDXComponent=!0;const bt={toc:[]};function xt(t){let{components:e,...a}=t;return(0,r.kt)("wrapper",(0,n.Z)({},bt,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"An angular measurement"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"%")," is relative to a rotation of 360 degrees. ",(0,r.kt)("inlineCode",{parentName:"p"},"25% == 90 degrees"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"50% == 180 degrees"),", etc  "),(0,r.kt)(yt,{mdxType:"UnitTable"}))}xt.isMDXComponent=!0;var vt=a(37759);const wt={toc:[]};function Tt(t){let{components:e,...a}=t;return(0,r.kt)("wrapper",(0,n.Z)({},wt,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)(vt.ZP,{mdxType:"UnitTable"}))}Tt.isMDXComponent=!0;var Ct=a(49732);const Dt={toc:[]};function Mt(t){let{components:e,...a}=t;return(0,r.kt)("wrapper",(0,n.Z)({},Dt,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"A size used for measuring elements for layout. "),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"%")," is relative to the parent's layout size."),(0,r.kt)("p",null,"There is a paradox that is possible where a parent has a size relative to its content and\na child size's relative to its parent. In such cases the child will have a 0 size."),(0,r.kt)(Ct.ZP,{mdxType:"UnitTable"}))}Mt.isMDXComponent=!0;const zt={toc:[]};function Xt(t){let{components:e,...a}=t;return(0,r.kt)("wrapper",(0,n.Z)({},zt,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"A range between 0 and 1 also expressable and a percentage"))}Xt.isMDXComponent=!0;var At=a(79314);const St={toc:[]};function Lt(t){let{components:e,...a}=t;return(0,r.kt)("wrapper",(0,n.Z)({},St,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"A size that is used to constrain the min and max size of an element for layout."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"%")," is relative to the parent's layout size."),(0,r.kt)(At.ZP,{mdxType:"UnitTable"}))}Lt.isMDXComponent=!0;var It=a(11916);const Pt={toc:[]};function Zt(t){let{components:e,...a}=t;return(0,r.kt)("wrapper",(0,n.Z)({},Pt,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"A size that is used to determine spacings around and between elements."),(0,r.kt)(It.ZP,{mdxType:"UnitTable"}))}Zt.isMDXComponent=!0;const Rt={toc:[]};function Ot(t){let{components:e,...a}=t;return(0,r.kt)("wrapper",(0,n.Z)({},Rt,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Tells the graphics system how the uvs of a texture should be handled if they overflow."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Value"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Default"),(0,r.kt)("td",{parentName:"tr",align:null},"Behavior is determined based on the type of texture being sampled")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Wrap"),(0,r.kt)("td",{parentName:"tr",align:null},"Constrain the uvs to the texture box and wrap them around if they overflow")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Clamp"),(0,r.kt)("td",{parentName:"tr",align:null},"Never exceed the extreme edges of the uv box")))))}Ot.isMDXComponent=!0;const Ut={toc:[]};function Vt(t){let{components:e,...a}=t;return(0,r.kt)("wrapper",(0,n.Z)({},Ut,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Determines the rendering visibility of an element. Does not impact layout or input handling or clipping. "),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Value"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Visible"),(0,r.kt)("td",{parentName:"tr",align:null},"The element is always rendered according to clipping rules as normal")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Hidden"),(0,r.kt)("td",{parentName:"tr",align:null},"The element is not rendered")))))}Vt.isMDXComponent=!0;const Wt={toc:[]};function Bt(t){let{components:e,...a}=t;return(0,r.kt)("wrapper",(0,n.Z)({},Wt,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Tells the text system how whitespace should be handled for a given piece of text. "),(0,r.kt)("p",null,"Multiple values can be combined using the ",(0,r.kt)("inlineCode",{parentName:"p"},"|")," operator"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Value"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"None"),(0,r.kt)("td",{parentName:"tr",align:null},"No special processing")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"CollapseWhitespace"),(0,r.kt)("td",{parentName:"tr",align:null},"Subsequent whitespace characters are collapsed to be at most 1 character")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"PreserveNewLines"),(0,r.kt)("td",{parentName:"tr",align:null},"If there are new line characters in the source, do not collapse them")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"TrimStart"),(0,r.kt)("td",{parentName:"tr",align:null},"If there is whitespace between text start and the first visible character, remove it")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"TrimEnd"),(0,r.kt)("td",{parentName:"tr",align:null},"If there is whitespace between text end and the last visible character, remove it")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"TrimLineStart"),(0,r.kt)("td",{parentName:"tr",align:null},"On each line remove any leading whitespace")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"TrimLineEnd"),(0,r.kt)("td",{parentName:"tr",align:null},"On each line remove any trailing whitespace")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"NoWrap"),(0,r.kt)("td",{parentName:"tr",align:null},"Disable the auto wrapping feature")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"CollapseMultipleNewLines"),(0,r.kt)("td",{parentName:"tr",align:null},"Subsequent new lines get collapsed into a single new line")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"TrimLine"),(0,r.kt)("td",{parentName:"tr",align:null},"Applies ",(0,r.kt)("inlineCode",{parentName:"td"},"TrimLineStart")," and ",(0,r.kt)("inlineCode",{parentName:"td"},"TrimLineEnd"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Trim"),(0,r.kt)("td",{parentName:"tr",align:null},"Applies ",(0,r.kt)("inlineCode",{parentName:"td"},"TrimStart")," and ",(0,r.kt)("inlineCode",{parentName:"td"},"TrimEnd"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"CollapseWhitespaceAndTrim"),(0,r.kt)("td",{parentName:"tr",align:null},"Applies ",(0,r.kt)("inlineCode",{parentName:"td"},"Trim")," and ",(0,r.kt)("inlineCode",{parentName:"td"},"CollapseWhitespace"))))))}Bt.isMDXComponent=!0;const Ht={},Et="Property Types",Ft={unversionedId:"styles/style_types_generated",id:"styles/style_types_generated",title:"Property Types",description:"",source:"@site/docs/styles/style_types_generated.mdx",sourceDirName:"styles",slug:"/styles/style_types_generated",permalink:"/EvolveUIDocs/docs/styles/style_types_generated",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"conceptual",previous:{title:"Style Properties",permalink:"/EvolveUIDocs/docs/styles/style_properties_generated"},next:{title:"UIElement API",permalink:"/EvolveUIDocs/docs/templates/UIElement"}},jt={},Gt=[{value:"AlignmentBoundary",id:"alignmentboundary",level:3},{value:"syntax",id:"syntax",level:4},{value:"AlignmentDirection",id:"alignmentdirection",level:3},{value:"syntax",id:"syntax-1",level:4},{value:"AlignmentOffset",id:"alignmentoffset",level:3},{value:"syntax",id:"syntax-2",level:4},{value:"AlignmentTarget",id:"alignmenttarget",level:3},{value:"syntax",id:"syntax-3",level:4},{value:"AspectRatio",id:"aspectratio",level:3},{value:"syntax",id:"syntax-4",level:4},{value:"BackgroundFit",id:"backgroundfit",level:3},{value:"syntax",id:"syntax-5",level:4},{value:"BorderMode",id:"bordermode",level:3},{value:"syntax",id:"syntax-6",level:4},{value:"ClipBehavior",id:"clipbehavior",level:3},{value:"syntax",id:"syntax-7",level:4},{value:"ClipBounds",id:"clipbounds",level:3},{value:"syntax",id:"syntax-8",level:4},{value:"CursorInfo",id:"cursorinfo",level:3},{value:"syntax",id:"syntax-9",level:4},{value:"ElementRelativeSize",id:"elementrelativesize",level:3},{value:"syntax",id:"syntax-10",level:4},{value:"FontAssetId",id:"fontassetid",level:3},{value:"syntax",id:"syntax-11",level:4},{value:"FontStyle",id:"fontstyle",level:3},{value:"syntax",id:"syntax-12",level:4},{value:"GridItemPlacement",id:"griditemplacement",level:3},{value:"syntax",id:"syntax-13",level:4},{value:"GridLayoutDensity",id:"gridlayoutdensity",level:3},{value:"syntax",id:"syntax-14",level:4},{value:"GridTemplate",id:"gridtemplate",level:3},{value:"syntax",id:"syntax-15",level:4},{value:"ImageRenderMode",id:"imagerendermode",level:3},{value:"syntax",id:"syntax-16",level:4},{value:"LayoutBehavior",id:"layoutbehavior",level:3},{value:"syntax",id:"syntax-17",level:4},{value:"LayoutDirection",id:"layoutdirection",level:3},{value:"syntax",id:"syntax-18",level:4},{value:"LayoutType",id:"layouttype",level:3},{value:"syntax",id:"syntax-19",level:4},{value:"Overflow",id:"overflow",level:3},{value:"syntax",id:"syntax-20",level:4},{value:"PointerEvents",id:"pointerevents",level:3},{value:"syntax",id:"syntax-21",level:4},{value:"RenderTransform",id:"rendertransform",level:3},{value:"syntax",id:"syntax-22",level:4},{value:"RevealDirection",id:"revealdirection",level:3},{value:"syntax",id:"syntax-23",level:4},{value:"RevealMode",id:"revealmode",level:3},{value:"syntax",id:"syntax-24",level:4},{value:"SpaceCollapse",id:"spacecollapse",level:3},{value:"syntax",id:"syntax-25",level:4},{value:"TextAlignment",id:"textalignment",level:3},{value:"syntax",id:"syntax-26",level:4},{value:"TextAlignmentVertical",id:"textalignmentvertical",level:3},{value:"syntax",id:"syntax-27",level:4},{value:"TextOverflow",id:"textoverflow",level:3},{value:"syntax",id:"syntax-28",level:4},{value:"TextTransform",id:"texttransform",level:3},{value:"syntax",id:"syntax-29",level:4},{value:"TextureInfo",id:"textureinfo",level:3},{value:"syntax",id:"syntax-30",level:4},{value:"TextureRelativeSize",id:"texturerelativesize",level:3},{value:"syntax",id:"syntax-31",level:4},{value:"UIAngle",id:"uiangle",level:3},{value:"syntax",id:"syntax-32",level:4},{value:"UIFontSize",id:"uifontsize",level:3},{value:"syntax",id:"syntax-33",level:4},{value:"UIMeasurement",id:"uimeasurement",level:3},{value:"syntax",id:"syntax-34",level:4},{value:"UIRange01",id:"uirange01",level:3},{value:"syntax",id:"syntax-35",level:4},{value:"UISizeConstraint",id:"uisizeconstraint",level:3},{value:"syntax",id:"syntax-36",level:4},{value:"UISpaceSize",id:"uispacesize",level:3},{value:"syntax",id:"syntax-37",level:4},{value:"UVWrapMode",id:"uvwrapmode",level:3},{value:"syntax",id:"syntax-38",level:4},{value:"Visibility",id:"visibility",level:3},{value:"syntax",id:"syntax-39",level:4},{value:"WhitespaceMode",id:"whitespacemode",level:3},{value:"syntax",id:"syntax-40",level:4}],_t={toc:Gt};function qt(t){let{components:e,...a}=t;return(0,r.kt)("wrapper",(0,n.Z)({},_t,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"property-types"},"Property Types"),(0,r.kt)("h3",{id:"alignmentboundary"},"AlignmentBoundary"),(0,r.kt)(i,{mdxType:"AlignmentBoundaryDocs"}),(0,r.kt)("h4",{id:"syntax"},"syntax"),(0,r.kt)("h3",{id:"alignmentdirection"},"AlignmentDirection"),(0,r.kt)(p,{mdxType:"AlignmentDirectionDocs"}),(0,r.kt)("h4",{id:"syntax-1"},"syntax"),(0,r.kt)("h3",{id:"alignmentoffset"},"AlignmentOffset"),(0,r.kt)(s,{mdxType:"AlignmentOffsetDocs"}),(0,r.kt)("h4",{id:"syntax-2"},"syntax"),(0,r.kt)("h3",{id:"alignmenttarget"},"AlignmentTarget"),(0,r.kt)(h,{mdxType:"AlignmentTargetDocs"}),(0,r.kt)("h4",{id:"syntax-3"},"syntax"),(0,r.kt)("h3",{id:"aspectratio"},"AspectRatio"),(0,r.kt)(u,{mdxType:"AspectRatioDocs"}),(0,r.kt)("h4",{id:"syntax-4"},"syntax"),(0,r.kt)("h3",{id:"backgroundfit"},"BackgroundFit"),(0,r.kt)(c,{mdxType:"BackgroundFitDocs"}),(0,r.kt)("h4",{id:"syntax-5"},"syntax"),(0,r.kt)("h3",{id:"bordermode"},"BorderMode"),(0,r.kt)(y,{mdxType:"BorderModeDocs"}),(0,r.kt)("h4",{id:"syntax-6"},"syntax"),(0,r.kt)("h3",{id:"clipbehavior"},"ClipBehavior"),(0,r.kt)(x,{mdxType:"ClipBehaviorDocs"}),(0,r.kt)("h4",{id:"syntax-7"},"syntax"),(0,r.kt)("h3",{id:"clipbounds"},"ClipBounds"),(0,r.kt)(w,{mdxType:"ClipBoundsDocs"}),(0,r.kt)("h4",{id:"syntax-8"},"syntax"),(0,r.kt)("h3",{id:"cursorinfo"},"CursorInfo"),(0,r.kt)(C,{mdxType:"CursorInfoDocs"}),(0,r.kt)("h4",{id:"syntax-9"},"syntax"),(0,r.kt)("h3",{id:"elementrelativesize"},"ElementRelativeSize"),(0,r.kt)(z,{mdxType:"ElementRelativeSizeDocs"}),(0,r.kt)("h4",{id:"syntax-10"},"syntax"),(0,r.kt)("h3",{id:"fontassetid"},"FontAssetId"),(0,r.kt)(A,{mdxType:"FontAssetIdDocs"}),(0,r.kt)("h4",{id:"syntax-11"},"syntax"),(0,r.kt)("h3",{id:"fontstyle"},"FontStyle"),(0,r.kt)(L,{mdxType:"FontStyleDocs"}),(0,r.kt)("h4",{id:"syntax-12"},"syntax"),(0,r.kt)("h3",{id:"griditemplacement"},"GridItemPlacement"),(0,r.kt)(P,{mdxType:"GridItemPlacementDocs"}),(0,r.kt)("h4",{id:"syntax-13"},"syntax"),(0,r.kt)("h3",{id:"gridlayoutdensity"},"GridLayoutDensity"),(0,r.kt)(R,{mdxType:"GridLayoutDensityDocs"}),(0,r.kt)("h4",{id:"syntax-14"},"syntax"),(0,r.kt)("h3",{id:"gridtemplate"},"GridTemplate"),(0,r.kt)(U,{mdxType:"GridTemplateDocs"}),(0,r.kt)("h4",{id:"syntax-15"},"syntax"),(0,r.kt)("h3",{id:"imagerendermode"},"ImageRenderMode"),(0,r.kt)(W,{mdxType:"ImageRenderModeDocs"}),(0,r.kt)("h4",{id:"syntax-16"},"syntax"),(0,r.kt)("h3",{id:"layoutbehavior"},"LayoutBehavior"),(0,r.kt)(H,{mdxType:"LayoutBehaviorDocs"}),(0,r.kt)("h4",{id:"syntax-17"},"syntax"),(0,r.kt)("h3",{id:"layoutdirection"},"LayoutDirection"),(0,r.kt)(F,{mdxType:"LayoutDirectionDocs"}),(0,r.kt)("h4",{id:"syntax-18"},"syntax"),(0,r.kt)("h3",{id:"layouttype"},"LayoutType"),(0,r.kt)(G,{mdxType:"LayoutTypeDocs"}),(0,r.kt)("h4",{id:"syntax-19"},"syntax"),(0,r.kt)("h3",{id:"overflow"},"Overflow"),(0,r.kt)(q,{mdxType:"OverflowDocs"}),(0,r.kt)("h4",{id:"syntax-20"},"syntax"),(0,r.kt)("h3",{id:"pointerevents"},"PointerEvents"),(0,r.kt)(J,{mdxType:"PointerEventsDocs"}),(0,r.kt)("h4",{id:"syntax-21"},"syntax"),(0,r.kt)("h3",{id:"rendertransform"},"RenderTransform"),(0,r.kt)(Q,{mdxType:"RenderTransformDocs"}),(0,r.kt)("h4",{id:"syntax-22"},"syntax"),(0,r.kt)("h3",{id:"revealdirection"},"RevealDirection"),(0,r.kt)(tt,{mdxType:"RevealDirectionDocs"}),(0,r.kt)("h4",{id:"syntax-23"},"syntax"),(0,r.kt)("h3",{id:"revealmode"},"RevealMode"),(0,r.kt)(at,{mdxType:"RevealModeDocs"}),(0,r.kt)("h4",{id:"syntax-24"},"syntax"),(0,r.kt)("h3",{id:"spacecollapse"},"SpaceCollapse"),(0,r.kt)(rt,{mdxType:"SpaceCollapseDocs"}),(0,r.kt)("h4",{id:"syntax-25"},"syntax"),(0,r.kt)("h3",{id:"textalignment"},"TextAlignment"),(0,r.kt)(it,{mdxType:"TextAlignmentDocs"}),(0,r.kt)("h4",{id:"syntax-26"},"syntax"),(0,r.kt)("h3",{id:"textalignmentvertical"},"TextAlignmentVertical"),(0,r.kt)(pt,{mdxType:"TextAlignmentVerticalDocs"}),(0,r.kt)("h4",{id:"syntax-27"},"syntax"),(0,r.kt)("h3",{id:"textoverflow"},"TextOverflow"),(0,r.kt)(mt,{mdxType:"TextOverflowDocs"}),(0,r.kt)("h4",{id:"syntax-28"},"syntax"),(0,r.kt)("h3",{id:"texttransform"},"TextTransform"),(0,r.kt)(kt,{mdxType:"TextTransformDocs"}),(0,r.kt)("h4",{id:"syntax-29"},"syntax"),(0,r.kt)("h3",{id:"textureinfo"},"TextureInfo"),(0,r.kt)(Nt,{mdxType:"TextureInfoDocs"}),(0,r.kt)("h4",{id:"syntax-30"},"syntax"),(0,r.kt)("h3",{id:"texturerelativesize"},"TextureRelativeSize"),(0,r.kt)(ct,{mdxType:"TextureRelativeSizeDocs"}),(0,r.kt)("h4",{id:"syntax-31"},"syntax"),(0,r.kt)("h3",{id:"uiangle"},"UIAngle"),(0,r.kt)(xt,{mdxType:"UIAngleDocs"}),(0,r.kt)("h4",{id:"syntax-32"},"syntax"),(0,r.kt)("h3",{id:"uifontsize"},"UIFontSize"),(0,r.kt)(Tt,{mdxType:"UIFontSizeDocs"}),(0,r.kt)("h4",{id:"syntax-33"},"syntax"),(0,r.kt)("h3",{id:"uimeasurement"},"UIMeasurement"),(0,r.kt)(Mt,{mdxType:"UIMeasurementDocs"}),(0,r.kt)("h4",{id:"syntax-34"},"syntax"),(0,r.kt)("h3",{id:"uirange01"},"UIRange01"),(0,r.kt)(Xt,{mdxType:"UIRange01Docs"}),(0,r.kt)("h4",{id:"syntax-35"},"syntax"),(0,r.kt)("h3",{id:"uisizeconstraint"},"UISizeConstraint"),(0,r.kt)(Lt,{mdxType:"UISizeConstraintDocs"}),(0,r.kt)("h4",{id:"syntax-36"},"syntax"),(0,r.kt)("h3",{id:"uispacesize"},"UISpaceSize"),(0,r.kt)(Zt,{mdxType:"UISpaceSizeDocs"}),(0,r.kt)("h4",{id:"syntax-37"},"syntax"),(0,r.kt)("h3",{id:"uvwrapmode"},"UVWrapMode"),(0,r.kt)(Ot,{mdxType:"UVWrapModeDocs"}),(0,r.kt)("h4",{id:"syntax-38"},"syntax"),(0,r.kt)("h3",{id:"visibility"},"Visibility"),(0,r.kt)(Vt,{mdxType:"VisibilityDocs"}),(0,r.kt)("h4",{id:"syntax-39"},"syntax"),(0,r.kt)("h3",{id:"whitespacemode"},"WhitespaceMode"),(0,r.kt)(Bt,{mdxType:"WhitespaceModeDocs"}),(0,r.kt)("h4",{id:"syntax-40"},"syntax"))}qt.isMDXComponent=!0}}]);