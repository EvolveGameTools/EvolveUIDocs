[{"title":"AnimationValueMode","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/Animation_generated/AnimationValueMode","content":"AnimationValueMode enum in EvolveUI When the animation starts and stops applying its properties to the elementthis is a flags field so you can combine multiple values here to mix and match behavior Default BeforeStart AfterCompleted WhilePlaying WhileDelaying UntilCompleted Always\t","keywords":""},{"title":"AlignmentBoundary","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/Style Property_generated/AlignmentBoundary","content":"AlignmentBoundary enum in EvolveUI None Screen Parent ParentContentArea Clipper View UnconstrainedParent\t","keywords":""},{"title":"AnimationDirection","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/Animation_generated/AnimationDirection","content":"AnimationDirection enum in EvolveUI.Style Forward Reverse\t","keywords":""},{"title":"AnimationDatabaseId","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/Animation_generated/AnimationDatabaseId","content":"AnimationDatabaseId struct in EvolveUI","keywords":""},{"title":"AnimationHandle","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/Animation_generated/AnimationHandle","content":"AnimationHandle struct in EvolveUI Methods GetElapsedTime\tDescription goes here IsActive\tDescription goes here IsPlaying\tDescription goes here Play\tDescription goes here Loop\tDescription goes here Pause\tDescription goes here Reset\tDescription goes here Destroy\tDescription goes here","keywords":""},{"title":"AlignmentDirection","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/Style Property_generated/AlignmentDirection","content":"AlignmentDirection enum in EvolveUI Start End\t","keywords":""},{"title":"AlignmentTarget","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/Style Property_generated/AlignmentTarget","content":"AlignmentTarget enum in EvolveUI LayoutBox Clipper Parent ParentContentArea View Screen Mouse\t","keywords":""},{"title":"AlignmentOffsetUnit","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/Style Property_generated/AlignmentOffsetUnit","content":"AlignmentOffsetUnit enum in EvolveUI Unset Width Height ContentHeight ContentWidth Em ParentWidth ParentHeight ParentContentAreaWidth ParentContentAreaHeight ContentAreaWidth ContentAreaHeight Percent Pixel ScreenWidth ScreenHeight ViewportWidth ViewportHeight BackgroundImageWidth BackgroundImageHeight\t","keywords":""},{"title":"AnimationKeyFrameType","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/Animation_generated/AnimationKeyFrameType","content":"AnimationKeyFrameType enum in EvolveUI Value Intrinsic VariableDefaultValue VariableDefaultCurrent\t","keywords":""},{"title":"AnimCurveType","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/Animation_generated/AnimCurveType","content":"AnimCurveType enum in EvolveUI.Style Easing Step Bezier\t","keywords":""},{"title":"AnimationCommandType","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/Animation_generated/AnimationCommandType","content":"AnimationCommandType enum in EvolveUI Play Loop Pause Stop Reset\t","keywords":""},{"title":"AnimationIntrinsic","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/Animation_generated/AnimationIntrinsic","content":"AnimationIntrinsic struct in EvolveUI","keywords":""},{"title":"AnimationHandleGroup","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/Animation_generated/AnimationHandleGroup","content":"AnimationHandleGroup struct in EvolveUI Fields size\tDescription goes here# MethodsIsActive\tDescription goes here","keywords":""},{"title":"AnimationGroup","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/Animation_generated/AnimationGroup","content":"AnimationGroup class in EvolveUI Methods Clear\tDescription goes here Apply\tDescription goes here AnimateAlignmentBoundaryX\tDescription goes here AnimateAlignmentBoundaryY\tDescription goes here AnimateAlignmentDirectionX\tDescription goes here AnimateAlignmentDirectionY\tDescription goes here AnimateAlignmentOffsetX\tDescription goes here AnimateAlignmentOffsetY\tDescription goes here AnimateAlignmentOriginX\tDescription goes here AnimateAlignmentOriginY\tDescription goes here AnimateAlignmentTargetX\tDescription goes here AnimateAlignmentTargetY\tDescription goes here AnimateAspectRatio\tDescription goes here AnimateBackgroundColor\tDescription goes here AnimateBackgroundFit\tDescription goes here AnimateBackgroundImage\tDescription goes here AnimateBackgroundImageOffsetX\tDescription goes here AnimateBackgroundImageOffsetY\tDescription goes here AnimateBackgroundImageRotation\tDescription goes here AnimateBackgroundImageScaleX\tDescription goes here AnimateBackgroundImageScaleY\tDescription goes here AnimateBackgroundImageUVMirror\tDescription goes here AnimateBackgroundImageUVWrap\tDescription goes here AnimateBackgroundMode\tDescription goes here AnimateBackgroundRectMaxX\tDescription goes here AnimateBackgroundRectMaxY\tDescription goes here AnimateBackgroundRectMinX\tDescription goes here AnimateBackgroundRectMinY\tDescription goes here AnimateBackgroundTint\tDescription goes here AnimateBorderBottom\tDescription goes here AnimateBorderColor\tDescription goes here AnimateBorderLeft\tDescription goes here AnimateBorderMode\tDescription goes here AnimateBorderRight\tDescription goes here AnimateBorderTop\tDescription goes here AnimateClipBehavior\tDescription goes here AnimateClipBounds\tDescription goes here AnimateCollapseSpaceHorizontal\tDescription goes here AnimateCollapseSpaceVertical\tDescription goes here AnimateCornerBevelBottomLeft\tDescription goes here AnimateCornerBevelBottomRight\tDescription goes here AnimateCornerBevelTopLeft\tDescription goes here AnimateCornerBevelTopRight\tDescription goes here AnimateCornerRadiusBottomLeft\tDescription goes here AnimateCornerRadiusBottomRight\tDescription goes here AnimateCornerRadiusTopLeft\tDescription goes here AnimateCornerRadiusTopRight\tDescription goes here AnimateCursor\tDescription goes here AnimateDilate\tDescription goes here AnimateFeather\tDescription goes here AnimateGridItemX\tDescription goes here AnimateGridItemY\tDescription goes here AnimateGridLayoutColGap\tDescription goes here AnimateGridLayoutDensity\tDescription goes here AnimateGridLayoutRowGap\tDescription goes here AnimateGridMainAxisTemplate\tDescription goes here AnimateGridOverflowAxisTemplate\tDescription goes here AnimateLayer\tDescription goes here AnimateLayoutBehavior\tDescription goes here AnimateLayoutDirection\tDescription goes here AnimateLayoutFillOriginHorizontal\tDescription goes here AnimateLayoutFillOriginVertical\tDescription goes here AnimateLayoutPriority\tDescription goes here AnimateLayoutType\tDescription goes here AnimateMarginBottom\tDescription goes here AnimateMarginLeft\tDescription goes here AnimateMarginRight\tDescription goes here AnimateMarginTop\tDescription goes here AnimateMask\tDescription goes here AnimateMaskOffsetX\tDescription goes here AnimateMaskOffsetY\tDescription goes here AnimateMaskRotation\tDescription goes here AnimateMaskScaleX\tDescription goes here AnimateMaskScaleY\tDescription goes here AnimateMaskThreshold\tDescription goes here AnimateMaxHeight\tDescription goes here AnimateMaxWidth\tDescription goes here AnimateMinHeight\tDescription goes here AnimateMinWidth\tDescription goes here AnimateOpacity\tDescription goes here AnimateOutlineColor\tDescription goes here AnimateOutlineWidth\tDescription goes here AnimateOverflowX\tDescription goes here AnimateOverflowY\tDescription goes here AnimatePaddingBottom\tDescription goes here AnimatePaddingLeft\tDescription goes here AnimatePaddingRight\tDescription goes here AnimatePaddingTop\tDescription goes here AnimatePointerEvents\tDescription goes here AnimatePreferredHeight\tDescription goes here AnimatePreferredWidth\tDescription goes here AnimateRenderTransform\tDescription goes here AnimateRevealAmount\tDescription goes here AnimateRevealDirection\tDescription goes here AnimateRevealMode\tDescription goes here AnimateRevealOffsetX\tDescription goes here AnimateRevealOffsetY\tDescription goes here AnimateRevealRadius\tDescription goes here AnimateRevealRotation\tDescription goes here AnimateShadowBlur\tDescription goes here AnimateShadowColor\tDescription goes here AnimateShadowOffsetX\tDescription goes here AnimateShadowOffsetY\tDescription goes here AnimateShadowSpread\tDescription goes here AnimateSpaceBetweenHorizontal\tDescription goes here AnimateSpaceBetweenVertical\tDescription goes here AnimateTextAlignment\tDescription goes here AnimateTextCharacterSpacing\tDescription goes here AnimateTextColor\tDescription goes here AnimateTextFaceDilate\tDescription goes here AnimateTextFontAsset\tDescription goes here AnimateTextFontSize\tDescription goes here AnimateTextFontStyle\tDescription goes here AnimateTextLineHeight\tDescription goes here AnimateTextMaxLineCount\tDescription goes here AnimateTextOutlineColor\tDescription goes here AnimateTextOutlineSoftness\tDescription goes here AnimateTextOutlineWidth\tDescription goes here AnimateTextOverflow\tDescription goes here AnimateTextSelectionCaretColor\tDescription goes here AnimateTextSelectionColor\tDescription goes here AnimateTextSelectionHighlightColor\tDescription goes here AnimateTextTransform\tDescription goes here AnimateTextUnderlayColor\tDescription goes here AnimateTextUnderlayDilate\tDescription goes here AnimateTextUnderlaySoftness\tDescription goes here AnimateTextUnderlayX\tDescription goes here AnimateTextUnderlayY\tDescription goes here AnimateTextVerticalAlignment\tDescription goes here AnimateTextWhitespaceMode\tDescription goes here AnimateTextWordSpacing\tDescription goes here AnimateTransformPivotX\tDescription goes here AnimateTransformPivotY\tDescription goes here AnimateVisibility\tDescription goes here AnimateZIndex\tDescription goes here","keywords":""},{"title":"AnimationInstanceId","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/Animation_generated/AnimationInstanceId","content":"AnimationInstanceId struct in EvolveUI Methods Equals\tDescription goes here GetHashCode\tDescription goes here","keywords":""},{"title":"AlignmentOffset","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/Style Property_generated/AlignmentOffset","content":"AlignmentOffset struct in EvolveUI Fields value\tDescription goes here unit\tDescription goes here# MethodsEquals\tDescription goes here GetHashCode\tDescription goes here ToString\tDescription goes here ToStyleString\tDescription goes here","keywords":""},{"title":"AlignmentType","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/AlignmentType","content":"AlignmentType enum in EvolveUI.Slug Center Left Right\t","keywords":""},{"title":"AnimationLoopType","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/AnimationLoopType","content":"AnimationLoopType enum in EvolveUI Constant PingPong\t","keywords":""},{"title":"Allocation","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/Allocation","content":"Allocation struct in EvolveUI Fields ptr\tDescription goes here totalBytes\tDescription goes here storage\tDescription goes here","keywords":""},{"title":"AlternateFlags","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/AlternateFlags","content":"AlternateFlags enum in EvolveUI.Slug Stylistic Historical LowerSmallCaps UpperSmallCaps TitlingCaps Unicase CaseForms SlashedZero HyphenMinus Fractions LiningFigures OldStyleFigures TabularFigures ProportionalFigures Subscript Superscript Inferiors Ordinals\t","keywords":""},{"title":"AllocationType","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/AllocationType","content":"AllocationType enum in EvolveUI Layout Geometry TextInfo\t","keywords":""},{"title":"AlbumHeader","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/AlbumHeader","content":"AlbumHeader struct in EvolveUI Fields albumFlags\tDescription goes here iconCount\tDescription goes here iconDataOffset\tDescription goes here pictureCount\tDescription goes here pictureDataOffset\tDescription goes here meshVertexOffset\tDescription goes here meshTriangleOffset\tDescription goes here reserved\tDescription goes here curveTextureSize\tDescription goes here curveCompressionType\tDescription goes here curveCompressedDataSize\tDescription goes here curveTextureOffset\tDescription goes here bandTextureSize\tDescription goes here bandCompressionType\tDescription goes here bandCompressedDataSize\tDescription goes here bandTextureOffset\tDescription goes here","keywords":""},{"title":"AlbumFlags","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/AlbumFlags","content":"AlbumFlags enum in EvolveUI.Slug CurveTextureFloat32\t","keywords":""},{"title":"AnimationPlayState","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/AnimationPlayState","content":"AnimationPlayState enum in EvolveUI Default Playing Looping Paused\t","keywords":""},{"title":"AnimationOptions","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/AnimationOptions","content":"AnimationOptions struct in EvolveUI.Style Fields iterations\tDescription goes here duration\tDescription goes here startDelay\tDescription goes here forwardStartDelay\tDescription goes here reverseStartDelay\tDescription goes here direction\tDescription goes here loopType\tDescription goes here assignProperties\tDescription goes here easingFunction\tDescription goes here bezier\tDescription goes here# MethodsApplyOverrides\tDescription goes here","keywords":""},{"title":"AnimationOptionOverride","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/AnimationOptionOverride","content":"AnimationOptionOverride struct in EvolveUI.Style Fields iterations\tDescription goes here duration\tDescription goes here startDelay\tDescription goes here forwardStartDelay\tDescription goes here reverseStartDelay\tDescription goes here direction\tDescription goes here loopType\tDescription goes here assignProperties\tDescription goes here easingFunction\tDescription goes here bezier\tDescription goes here","keywords":""},{"title":"AnimationSettings","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/AnimationSettings","content":"AnimationSettings struct in EvolveUI Fields delayMS\tDescription goes here iterationCount\tDescription goes here valueMode\tDescription goes here direction\tDescription goes here loopType\tDescription goes here","keywords":""},{"title":"AssertSize","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/AssertSize","content":"AssertSize class in EvolveUI Fields assertedSize\tDescription goes here","keywords":""},{"title":"AnimationReference","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/AnimationReference","content":"AnimationReference struct in EvolveUI.Style Fields animationDatabaseId\tDescription goes here optionId\tDescription goes here# MethodsEquals\tDescription goes here GetHashCode\tDescription goes here","keywords":""},{"title":"AnimationSettingsOverride","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/AnimationSettingsOverride","content":"AnimationSettingsOverride struct in EvolveUI Fields delayMS\tDescription goes here iterationCount\tDescription goes here valueMode\tDescription goes here direction\tDescription goes here loopType\tDescription goes here","keywords":""},{"title":"AspectRatio","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/AspectRatio","content":"AspectRatio struct in EvolveUI Fields mode\tDescription goes here width\tDescription goes here height\tDescription goes here# MethodsEquals\tDescription goes here GetHashCode\tDescription goes here ToStyleString\tDescription goes here","keywords":""},{"title":"AnimationState","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/AnimationState","content":"AnimationState enum in EvolveUI.Style Uninitialized Pending Restarting Running Pausable Completed Failed Cancelled ReRunnable Paused Stoppable\t","keywords":""},{"title":"AspectRatioMode","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/AspectRatioMode","content":"AspectRatioMode enum in EvolveUI.Layout None WidthControlsHeight HeightControlsWidth ImageAspect\t","keywords":""},{"title":"AssetLookup","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/AssetLookup","content":"AssetLookup struct in EvolveUI.Slug Fields module\tDescription goes here name\tDescription goes here# MethodsEquals\tDescription goes here GetHashCode\tDescription goes here","keywords":""},{"title":"AttributeOperator","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/AttributeOperator","content":"AttributeOperator enum in EvolveUI.Style Equal Exists Contains StartsWith EndsWith\t","keywords":""},{"title":"AtlasLocation","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/AtlasLocation","content":"AtlasLocation struct in EvolveUI Fields glyphIndex\tDescription goes here glyphAtlasEntry\tDescription goes here","keywords":""},{"title":"ApplicationType","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/ApplicationType","content":"ApplicationType enum in EvolveUI Game Editor Test\t","keywords":""},{"title":"ArrayUtil","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/ArrayUtil","content":"ArrayUtil class in EvolveUI.Util","keywords":""},{"title":"BorderMode","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/BorderMode","content":"BorderMode enum in EvolveUI Outset Inset Overlay\t","keywords":""},{"title":"BitSet32","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/BitSet32","content":"BitSet32 struct in EvolveUI.Util Fields value\tDescription goes here# MethodsSet\tDescription goes here Unset\tDescription goes here Get\tDescription goes here Equals\tDescription goes here GetHashCode\tDescription goes here PopCount\tDescription goes here ContainsAll\tDescription goes here ContainsAny\tDescription goes here set_Item\tDescription goes here DebugDisplayList\tDescription goes here DebugDisplay\tDescription goes here","keywords":""},{"title":"BackgroundFit","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/BackgroundFit","content":"BackgroundFit enum in EvolveUI None ScaleToFit ScaleToFitAndOverflow Fill Cover\t","keywords":""},{"title":"AxisAlignedBounds2D","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/AxisAlignedBounds2D","content":"AxisAlignedBounds2D struct in EvolveUI.Layout Fields xMin\tDescription goes here yMin\tDescription goes here xMax\tDescription goes here yMax\tDescription goes here# MethodsOverlapOrContain\tDescription goes here Expand\tDescription goes here","keywords":""},{"title":"BumpAllocator","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/BumpAllocator","content":"BumpAllocator struct in EvolveUI.Util.Unsafe Methods Allocate\tDescription goes here Clear\tDescription goes here ClearAndConsolidate\tDescription goes here Dispose\tDescription goes here","keywords":""},{"title":"Bezier","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/Bezier","content":"Bezier struct in EvolveUI Ported from https://github.com/gre/bezier-easing/blob/master/src/index.js (MIT License) Fields x0\tDescription goes here x1\tDescription goes here y0\tDescription goes here y1\tDescription goes here# MethodsEvaluate\tDescription goes here","keywords":""},{"title":"BitSet64","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/BitSet64","content":"BitSet64 struct in EvolveUI.Util Fields value\tDescription goes here# MethodsSet\tDescription goes here Get\tDescription goes here Equals\tDescription goes here GetHashCode\tDescription goes here PopCount\tDescription goes here ContainsAll\tDescription goes here ContainsAny\tDescription goes here set_Item\tDescription goes here DebugDisplayList\tDescription goes here DebugDisplay\tDescription goes here ToString\tDescription goes here","keywords":""},{"title":"BatchableMaterial","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/BatchableMaterial","content":"BatchableMaterial struct in EvolveUI Fields shader\tDescription goes here renderState\tDescription goes here texture0\tDescription goes here texture1\tDescription goes here texture2\tDescription goes here texture3\tDescription goes here buffer0\tDescription goes here buffer1\tDescription goes here buffer2\tDescription goes here buffer3\tDescription goes here","keywords":""},{"title":"BytePage","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/BytePage","content":"BytePage struct in EvolveUI.Util.Unsafe Fields size\tDescription goes here capacity\tDescription goes here array\tDescription goes here","keywords":""},{"title":"BurstAssert","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/BurstAssert","content":"BurstAssert class in EvolveUI","keywords":""},{"title":"BitUtil","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/BitUtil","content":"BitUtil class in EvolveUI.Util","keywords":""},{"title":"BounceTextEffect","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/BounceTextEffect","content":"BounceTextEffect class in EvolveUI.Text Fields waveSize\tDescription goes here amplitude\tDescription goes here frequency\tDescription goes here animatorTime\tDescription goes here animatorDeltaTime\tDescription goes here effectIntensity\tDescription goes here# MethodsApplyDisplayEffect\tDescription goes here","keywords":""},{"title":"ClipBehavior","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/ClipBehavior","content":"ClipBehavior enum in EvolveUI Normal Never SkipOneLevel View Screen\t","keywords":""},{"title":"BindingEvent","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/BindingEvent","content":"BindingEvent enum in EvolveUI BeforeCreate AfterCreate BeforeEnable AfterEnable BeforeUpdate AfterUpdate BeforeEarlyInput AfterEarlyInput BeforeInput Default AfterInput BeforeLateInput AfterLateInput BeforeFinish AfterFinish BeforeDisable AfterDisable BeforeDestroy AfterDestroy MouseEnter MouseExit MouseUp MouseDown MouseHeldDown MouseMove MouseHover MouseUpdate MouseContext MouseScroll MouseClick KeyDown KeyUp KeyHeldDown FocusGain FocusLost DragCreate DragMove DragHover DragUpdate DragEnter DragExit DragDrop DragCancel TextInput Always\t","keywords":""},{"title":"ColorData","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/ColorData","content":"ColorData struct in EvolveUI.Slug Fields color0\tDescription goes here color1\tDescription goes here gradientFlag\tDescription goes here","keywords":""},{"title":"CharSpan","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/CharSpan","content":"CharSpan struct in EvolveUI.Util Fields rangeStart\tDescription goes here rangeEnd\tDescription goes here baseOffset\tDescription goes here# MethodsEqualsIgnoreCase\tDescription goes here Equals\tDescription goes here GetHashCode\tDescription goes here ToString\tDescription goes here ToLowerString\tDescription goes here ToLower\tDescription goes here Trim\tDescription goes here GetLineNumber\tDescription goes here GetEndLineNumber\tDescription goes here ToRefless\tDescription goes here IndexOf\tDescription goes here LastIndexOf\tDescription goes here GetContentRange\tDescription goes here TryParseColor\tDescription goes here GetLineInfo\tDescription goes here Contains\tDescription goes here StartsWith\tDescription goes here EndsWith\tDescription goes here Substring\tDescription goes here ContainsCharacter\tDescription goes here GetSubSpanTo\tDescription goes here GetSubSpanFrom\tDescription goes here","keywords":""},{"title":"ClipBounds","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/ClipBounds","content":"ClipBounds enum in EvolveUI BorderBox ContentBox\t","keywords":""},{"title":"ColorReference","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/ColorReference","content":"ColorReference struct in EvolveUI Fields name\tDescription goes here color\tDescription goes here","keywords":""},{"title":"Clipper","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/Clipper","content":"Clipper struct in EvolveUI.Layout Fields isCulled\tDescription goes here activeElementIndex\tDescription goes here aabb\tDescription goes here parentIndex\tDescription goes here elementId\tDescription goes here orientedBounds\tDescription goes here clipBounds\tDescription goes here overflowXHidden\tDescription goes here overflowYHidden\tDescription goes here","keywords":""},{"title":"CommentMode","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/CommentMode","content":"CommentMode enum in EvolveUI.Util None DoubleSlash XML\t","keywords":""},{"title":"CharStream","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/CharStream","content":"CharStream struct in EvolveUI.Util Fields baseOffset\tDescription goes here commentMode\tDescription goes here# MethodsEquals\tDescription goes here GetHashCode\tDescription goes here Advance\tDescription goes here AdvanceTo\tDescription goes here AdvanceSkipWhitespace\tDescription goes here TryMatchRangeNoAdvance\tDescription goes here TryMatchRangeWhitespaceTerminated\tDescription goes here TryMatchRange\tDescription goes here GetNextTraversedStream\tDescription goes here TryGetSubStream\tDescription goes here TryGetSafeSubStream\tDescription goes here RewindTo\tDescription goes here ConsumeWhiteSpaceAndComments\tDescription goes here ConsumeWhiteSpace\tDescription goes here ConsumeXMLComment\tDescription goes here TryGetSubstreamTo\tDescription goes here TryGetCharSpanTo\tDescription goes here GetCharSpanAfterLast\tDescription goes here GetCharSpanToDelimiterOrEnd\tDescription goes here TryGetDelimitedSubstream\tDescription goes here TryGetStreamUntil\tDescription goes here NextIndexOf\tDescription goes here Contains\tDescription goes here GetLineNumber\tDescription goes here GetStartLineNumber\tDescription goes here GetEndLineNumber\tDescription goes here TryParseMultiDottedIdentifier\tDescription goes here TryParseDottedIdentifier\tDescription goes here TryParseIdentifier\tDescription goes here TryParseByte\tDescription goes here TryParseUShort\tDescription goes here TryParseHalf\tDescription goes here TryParseRange01\tDescription goes here TryParseFloat\tDescription goes here TryParseUInt\tDescription goes here TryParseInt\tDescription goes here TryParseGridItemPlacement\tDescription goes here TryParseTextureSampleMode\tDescription goes here TryParseAspectRatio\tDescription goes here TryParseEnumBitSet\tDescription goes here TryParseEnum\tDescription goes here TryParseCharacter\tDescription goes here TryParseColor\tDescription goes here TryParsePercentage\tDescription goes here TryParseColorProperty\tDescription goes here ToString\tDescription goes here TryParseXMLClose\tDescription goes here TryParseXMLAttribute\tDescription goes here TryParseXMLOpenTagIdentifier\tDescription goes here TryMatchRangeIgnoreCase\tDescription goes here Rewind\tDescription goes here RemoveLast\tDescription goes here GetLineInfo\tDescription goes here TryParseAlignmentOffset\tDescription goes here TryParseGridCellSize\tDescription goes here TryParseElementRelativeSize\tDescription goes here TryParseTextureRelativeSize\tDescription goes here TryParseSpaceSize\tDescription goes here TryParseSizeConstraint\tDescription goes here TryParseFontSize\tDescription goes here TryParseTime\tDescription goes here TryParseMeasurement\tDescription goes here TryParseAngle\tDescription goes here TryParseAngleUnit\tDescription goes here TryParseSizeConstraintUnit\tDescription goes here TryParseFontSizeUnit\tDescription goes here TryParseTimeUnit\tDescription goes here TryParseMeasurementUnit\tDescription goes here TryParseAlignmentOffsetUnit\tDescription goes here TryParseSpaceSizeUnit\tDescription goes here TryParseUntypedUnit\tDescription goes here TryParseGridCellUnit\tDescription goes here TryParseFixedLengthUnit\tDescription goes here TryParseSingleQuotedString\tDescription goes here TryParseDoubleQuotedString\tDescription goes here TryParseAnyQuotedString\tDescription goes here ParseFloatAttr\tDescription goes here TryParseUnquotedFloatAttr\tDescription goes here TryParseFloatAttr\tDescription goes here TryParseUnquotedColorAttr\tDescription goes here TryParseColorAttr\tDescription goes here SetCommentMode\tDescription goes here ConsumeUntilFound\tDescription goes here TryMatchRangeFast\tDescription goes here TryGetBraceStream\tDescription goes here TryGetParenStream\tDescription goes here TryGetSquareBracketStream\tDescription goes here ToCheckedArray\tDescription goes here Trim\tDescription goes here CommaSplit\tDescription goes here WhitespaceSplit\tDescription goes here TrySplitOnLastIndexOf\tDescription goes here TryParseFloatArguments\tDescription goes here TryParseHexCharacter\tDescription goes here TryParseTypeExpression\tDescription goes here","keywords":""},{"title":"ClipInfo","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/ClipInfo","content":"ClipInfo struct in EvolveUI.Layout Fields isCulled\tDescription goes here aabb\tDescription goes here orientedBounds\tDescription goes here","keywords":""},{"title":"ColorUtil","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/ColorUtil","content":"ColorUtil class in EvolveUI.Util","keywords":""},{"title":"CompiledStringInfo","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/CompiledStringInfo","content":"CompiledStringInfo struct in EvolveUI.Slug Fields characterCount\tDescription goes here glyphCount\tDescription goes here layoutCount\tDescription goes here runCount\tDescription goes here","keywords":""},{"title":"CharStringBuilder","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/CharStringBuilder","content":"CharStringBuilder class in EvolveUI.Util Fields characters\tDescription goes here# Methodsset_size\tDescription goes here Clear\tDescription goes here Dispose\tDescription goes here Append\tDescription goes here ToString\tDescription goes here EqualsString\tDescription goes here","keywords":""},{"title":"ContactGesture","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/ContactGesture","content":"ContactGesture class in EvolveUI Fields isActive\tDescription goes here state\tDescription goes here initialPointerEvent\tDescription goes here requirements\tDescription goes here initialStateConstraints\tDescription goes here activeStateConstraints\tDescription goes here directions\tDescription goes here# MethodsRecognize\tDescription goes here GetMinMaxParameters\tDescription goes here","keywords":""},{"title":"CustomBoxShader","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/CustomBoxShader","content":"CustomBoxShader struct in EvolveUI.IMGUI Methods SetColor\tDescription goes here GetShaderGuid\tDescription goes here","keywords":""},{"title":"CountCompareOperator","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/CountCompareOperator","content":"CountCompareOperator enum in EvolveUI.Style EqualTo NotEqualTo GreaterThan LessThan GreaterThanEqualTo LessThanEqualTo\t","keywords":""},{"title":"CustomPainterAttribute","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/CustomPainterAttribute","content":"CustomPainterAttribute class in EvolveUI Fields name\tDescription goes here","keywords":""},{"title":"CompilationType","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/CompilationType","content":"CompilationType enum in EvolveUI Dynamic Compiled\t","keywords":""},{"title":"ContainerElementAttribute","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/ContainerElementAttribute","content":"ContainerElementAttribute class in EvolveUI.Attributes Fields filePath\tDescription goes here","keywords":""},{"title":"CustomPropertyType","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/CustomPropertyType","content":"CustomPropertyType enum in EvolveUI.Style Invalid Float Int Float2 Float3 Float4 Enum Half Byte Color Texture UShort\t","keywords":""},{"title":"Compilation","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/Compilation","content":"Compilation class in EvolveUI Fields compiledAppPath\tDescription goes here tagName\tDescription goes here rootModule\tDescription goes here ignoreStyleCache\tDescription goes here ignoreTemplateCache\tDescription goes here ignoreEmitCache\tDescription goes here defaultFont\tDescription goes here defaultCursor\tDescription goes here applicationName\tDescription goes here alwaysInclude\tDescription goes here","keywords":""},{"title":"CursorInfo","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/CursorInfo","content":"CursorInfo struct in EvolveUI Fields cursorId\tDescription goes here# MethodsEquals\tDescription goes here GetHashCode\tDescription goes here ToStyleString\tDescription goes here","keywords":""},{"title":"Contact","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/Contact","content":"Contact class in EvolveUI Fields isActive\tDescription goes here currentPointerEvent\tDescription goes here activePointerInputs\tDescription goes here# MethodsGetPrimaryPointerInput\tDescription goes here OnPointerMove\tDescription goes here OnPointerUp\tDescription goes here OnPointerCancel\tDescription goes here OnPointerLeave\tDescription goes here OnIdle\tDescription goes here CalculateCenterMovement\tDescription goes here","keywords":""},{"title":"CursorReference","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/CursorReference","content":"CursorReference class in EvolveUI.Rendering Fields name\tDescription goes here texture\tDescription goes here hotSpot\tDescription goes here# MethodsEquals\tDescription goes here GetHashCode\tDescription goes here","keywords":""},{"title":"CustomPropertyResolver","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/CustomPropertyResolver","content":"CustomPropertyResolver struct in EvolveUI","keywords":""},{"title":"DataListState","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/DataListState","content":"DataListState struct in EvolveUI.Util.Unsafe Fields size\tDescription goes here array\tDescription goes here# MethodsGetAllocator\tDescription goes here Add\tDescription goes here AddUnchecked\tDescription goes here AddRange\tDescription goes here EnsureCapacity\tDescription goes here EnsureAdditionalCapacity\tDescription goes here Get\tDescription goes here Set\tDescription goes here Dispose\tDescription goes here GetPointer\tDescription goes here SwapRemove\tDescription goes here GetLast\tDescription goes here Clear\tDescription goes here","keywords":""},{"title":"DecoratorSignature","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/DecoratorSignature","content":"DecoratorSignature class in EvolveUI Methods AddParameter\tDescription goes here AddParameterRequired\tDescription goes here AddExtrusion\tDescription goes here","keywords":""},{"title":"DecoratorAttribute","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/DecoratorAttribute","content":"DecoratorAttribute class in EvolveUI","keywords":""},{"title":"Decomposed4Type","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/Decomposed4Type","content":"Decomposed4Type struct in EvolveUI Fields scale\tDescription goes here skew\tDescription goes here rotation\tDescription goes here translation\tDescription goes here perspective\tDescription goes here","keywords":""},{"title":"Direction","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/Direction","content":"Direction enum in EvolveUI None Left Right Horizontal Up Down Vertical All\t","keywords":""},{"title":"DecomposedFloat4x4","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/DecomposedFloat4x4","content":"DecomposedFloat4x4 struct in EvolveUI Fields translation\tDescription goes here scale\tDescription goes here rotation\tDescription goes here# MethodsRecompose\tDescription goes here Equals\tDescription goes here GetHashCode\tDescription goes here","keywords":""},{"title":"DeviceInfo","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/DeviceInfo","content":"DeviceInfo struct in EvolveUI Fields dpiScale\tDescription goes here# MethodsGetScaledScreenWidth\tDescription goes here GetScaledScreenHeight\tDescription goes here","keywords":""},{"title":"DefaultGeometry2D","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/DefaultGeometry2D","content":"DefaultGeometry2D struct in EvolveUI Fields topology\tDescription goes here vertices\tDescription goes here indices\tDescription goes here","keywords":""},{"title":"DefaultVertex2D","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/DefaultVertex2D","content":"DefaultVertex2D struct in EvolveUI Fields position\tDescription goes here color\tDescription goes here texCoord0\tDescription goes here texCoord1\tDescription goes here","keywords":""},{"title":"DisplayConfiguration","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/DisplayConfiguration","content":"DisplayConfiguration struct in EvolveUI Fields dpi\tDescription goes here screenWidth\tDescription goes here screenHeight\tDescription goes here screenOrientation\tDescription goes here deviceOrientation\tDescription goes here","keywords":""},{"title":"DistanceChange","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/DistanceChange","content":"DistanceChange struct in EvolveUI Fields absolute\tDescription goes here relative\tDescription goes here","keywords":""},{"title":"DrawCommand2","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/DrawCommand2","content":"DrawCommand2 struct in EvolveUI","keywords":""},{"title":"DictionaryExtensions","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/DictionaryExtensions","content":"DictionaryExtensions class in EvolveUI.Extensions","keywords":""},{"title":"DragEvent","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/DragEvent","content":"DragEvent class in EvolveUI.UIInput Fields lockCursor\tDescription goes here cursor\tDescription goes here# MethodsDrop\tDescription goes here Cancel\tDescription goes here OnCreate\tDescription goes here OnUpdate\tDescription goes here OnComplete\tDescription goes here OnDrop\tDescription goes here OnCancel\tDescription goes here","keywords":""},{"title":"Easing","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/Easing","content":"Easing class in EvolveUI","keywords":""},{"title":"EasingFunction","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/EasingFunction","content":"EasingFunction enum in EvolveUI Linear QuadraticEaseIn QuadraticEaseOut QuadraticEaseInOut CubicEaseIn CubicEaseOut CubicEaseInOut QuarticEaseIn QuarticEaseOut QuarticEaseInOut QuinticEaseIn QuinticEaseOut QuinticEaseInOut SineEaseIn SineEaseOut SineEaseInOut CircularEaseIn CircularEaseOut CircularEaseInOut ExponentialEaseIn ExponentialEaseOut ExponentialEaseInOut ElasticEaseIn ElasticEaseOut ElasticEaseInOut BackEaseIn BackEaseOut BackEaseInOut BounceEaseIn BounceEaseOut BounceEaseInOut Bezier\t","keywords":""},{"title":"DrawCommand","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/DrawCommand","content":"DrawCommand struct in EvolveUI","keywords":""},{"title":"DrawCommandType","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/DrawCommandType","content":"DrawCommandType enum in EvolveUI DrawSDFPrimitive DrawMesh DrawElementBorder DrawElementBody PopRenderTarget PushRenderTarget BlitRenderTarget SetGlobalTexture ReleaseTempRT BatchDrawCall DrawText PushStencil\t","keywords":""},{"title":"ElementFrameInfo","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/ElementFrameInfo","content":"ElementFrameInfo struct in EvolveUI Fields elementId\tDescription goes here styleResult\tDescription goes here layoutResult\tDescription goes here childCount\tDescription goes here# MethodsEquals\tDescription goes here GetHashCode\tDescription goes here","keywords":""},{"title":"EffectType","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/EffectType","content":"EffectType enum in EvolveUI.Slug None Outline Shadow\t","keywords":""},{"title":"ElectricAllocator","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/ElectricAllocator","content":"ElectricAllocator class in EvolveUI","keywords":""},{"title":"EffectParameter","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/EffectParameter","content":"EffectParameter class in EvolveUI","keywords":""},{"title":"ElementReference","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/ElementReference","content":"ElementReference struct in EvolveUI Fields elementId\tDescription goes here# MethodsToString\tDescription goes here ToggleAttribute\tDescription goes here SetAttributeEnum\tDescription goes here SetAttribute\tDescription goes here TryGetAttribute\tDescription goes here GetAttribute\tDescription goes here HasAttribute\tDescription goes here GetCompanion\tDescription goes here GetLayoutSize\tDescription goes here GetLayoutBorders\tDescription goes here GetLayoutPaddings\tDescription goes here GetLayoutLocalPosition\tDescription goes here GetLayoutBounds\tDescription goes here GetLayoutLocalMatrix\tDescription goes here GetLayoutWorldMatrix\tDescription goes here GetAlignedScreenRect\tDescription goes here GetLocalPoint\tDescription goes here GetLayoutResult\tDescription goes here GetFullLayoutResult\tDescription goes here GetScreenPosition\tDescription goes here SetValueVariable\tDescription goes here SetColorVariable\tDescription goes here","keywords":""},{"title":"ElementId","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/ElementId","content":"ElementId struct in EvolveUI 1 based id. If you find an element id to be 0 it's not a real id, it's just a default value. Methods Equals\tDescription goes here GetHashCode\tDescription goes here CompareTo\tDescription goes here ToString\tDescription goes here ToStringBuffer\tDescription goes here GetDebugDisplayName\tDescription goes here","keywords":""},{"title":"ElementInfoList","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/ElementInfoList","content":"ElementInfoList struct in EvolveUI only valid for a single frame and only inside the paint phase","keywords":""},{"title":"ElementStyleResult","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/ElementStyleResult","content":"ElementStyleResult struct in EvolveUI Methods PropertyValueToString\tDescription goes here","keywords":""},{"title":"ElementLayoutResult","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/ElementLayoutResult","content":"ElementLayoutResult struct in EvolveUI","keywords":""},{"title":"EntryPoint","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/EntryPoint","content":"EntryPoint struct in EvolveUI Fields type\tDescription goes here moduleName\tDescription goes here templateName\tDescription goes here destroyFn\tDescription goes here update\tDescription goes here","keywords":""},{"title":"EasingInfo","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/EasingInfo","content":"EasingInfo struct in EvolveUI Fields bezier\tDescription goes here easingFunction\tDescription goes here# MethodsEvaluate\tDescription goes here","keywords":""},{"title":"EnumTypeValueName","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/EnumTypeValueName","content":"EnumTypeValueName struct in EvolveUI Fields name\tDescription goes here type\tDescription goes here value\tDescription goes here","keywords":""},{"title":"EvolveCursorAsset","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/EvolveCursorAsset","content":"EvolveCursorAsset class in EvolveUI Fields texture\tDescription goes here hotPoint\tDescription goes here","keywords":""},{"title":"ElementRelativeSizeUnit","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/ElementRelativeSizeUnit","content":"ElementRelativeSizeUnit enum in EvolveUI Width Height Percent Pixel BackgroundImageWidth BackgroundImageHeight MinWidthHeight MaxWidthHeight\t","keywords":""},{"title":"EnumTypeValueKey","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/EnumTypeValueKey","content":"EnumTypeValueKey struct in EvolveUI Fields type\tDescription goes here value\tDescription goes here# MethodsEquals\tDescription goes here GetHashCode\tDescription goes here","keywords":""},{"title":"ElementHandle","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/ElementHandle","content":"ElementHandle struct in EvolveUI.ExecutionGraph Methods AnimateAlignmentBoundaryX\tDescription goes here AnimateAlignmentBoundaryY\tDescription goes here AnimateAlignmentDirectionX\tDescription goes here AnimateAlignmentDirectionY\tDescription goes here AnimateAlignmentOffsetX\tDescription goes here AnimateAlignmentOffsetY\tDescription goes here AnimateAlignmentOriginX\tDescription goes here AnimateAlignmentOriginY\tDescription goes here AnimateAlignmentTargetX\tDescription goes here AnimateAlignmentTargetY\tDescription goes here AnimateAspectRatio\tDescription goes here AnimateBackgroundColor\tDescription goes here AnimateBackgroundFit\tDescription goes here AnimateBackgroundImage\tDescription goes here AnimateBackgroundImageOffsetX\tDescription goes here AnimateBackgroundImageOffsetY\tDescription goes here AnimateBackgroundImageRotation\tDescription goes here AnimateBackgroundImageScaleX\tDescription goes here AnimateBackgroundImageScaleY\tDescription goes here AnimateBackgroundImageUVMirror\tDescription goes here AnimateBackgroundImageUVWrap\tDescription goes here AnimateBackgroundMode\tDescription goes here AnimateBackgroundRectMaxX\tDescription goes here AnimateBackgroundRectMaxY\tDescription goes here AnimateBackgroundRectMinX\tDescription goes here AnimateBackgroundRectMinY\tDescription goes here AnimateBackgroundTint\tDescription goes here AnimateBorderBottom\tDescription goes here AnimateBorderColor\tDescription goes here AnimateBorderLeft\tDescription goes here AnimateBorderMode\tDescription goes here AnimateBorderRight\tDescription goes here AnimateBorderTop\tDescription goes here AnimateClipBehavior\tDescription goes here AnimateClipBounds\tDescription goes here AnimateCollapseSpaceHorizontal\tDescription goes here AnimateCollapseSpaceVertical\tDescription goes here AnimateCornerBevelBottomLeft\tDescription goes here AnimateCornerBevelBottomRight\tDescription goes here AnimateCornerBevelTopLeft\tDescription goes here AnimateCornerBevelTopRight\tDescription goes here AnimateCornerRadiusBottomLeft\tDescription goes here AnimateCornerRadiusBottomRight\tDescription goes here AnimateCornerRadiusTopLeft\tDescription goes here AnimateCornerRadiusTopRight\tDescription goes here AnimateCursor\tDescription goes here AnimateDilate\tDescription goes here AnimateFeather\tDescription goes here AnimateGridItemX\tDescription goes here AnimateGridItemY\tDescription goes here AnimateGridLayoutColGap\tDescription goes here AnimateGridLayoutDensity\tDescription goes here AnimateGridLayoutRowGap\tDescription goes here AnimateGridMainAxisTemplate\tDescription goes here AnimateGridOverflowAxisTemplate\tDescription goes here AnimateLayer\tDescription goes here AnimateLayoutBehavior\tDescription goes here AnimateLayoutDirection\tDescription goes here AnimateLayoutFillOriginHorizontal\tDescription goes here AnimateLayoutFillOriginVertical\tDescription goes here AnimateLayoutPriority\tDescription goes here AnimateLayoutType\tDescription goes here AnimateMarginBottom\tDescription goes here AnimateMarginLeft\tDescription goes here AnimateMarginRight\tDescription goes here AnimateMarginTop\tDescription goes here AnimateMask\tDescription goes here AnimateMaskOffsetX\tDescription goes here AnimateMaskOffsetY\tDescription goes here AnimateMaskRotation\tDescription goes here AnimateMaskScaleX\tDescription goes here AnimateMaskScaleY\tDescription goes here AnimateMaskThreshold\tDescription goes here AnimateMaxHeight\tDescription goes here AnimateMaxWidth\tDescription goes here AnimateMinHeight\tDescription goes here AnimateMinWidth\tDescription goes here AnimateOpacity\tDescription goes here AnimateOutlineColor\tDescription goes here AnimateOutlineWidth\tDescription goes here AnimateOverflowX\tDescription goes here AnimateOverflowY\tDescription goes here AnimatePaddingBottom\tDescription goes here AnimatePaddingLeft\tDescription goes here AnimatePaddingRight\tDescription goes here AnimatePaddingTop\tDescription goes here AnimatePointerEvents\tDescription goes here AnimatePreferredHeight\tDescription goes here AnimatePreferredWidth\tDescription goes here AnimateRenderTransform\tDescription goes here AnimateRevealAmount\tDescription goes here AnimateRevealDirection\tDescription goes here AnimateRevealMode\tDescription goes here AnimateRevealOffsetX\tDescription goes here AnimateRevealOffsetY\tDescription goes here AnimateRevealRadius\tDescription goes here AnimateRevealRotation\tDescription goes here AnimateShadowBlur\tDescription goes here AnimateShadowColor\tDescription goes here AnimateShadowOffsetX\tDescription goes here AnimateShadowOffsetY\tDescription goes here AnimateShadowSpread\tDescription goes here AnimateSpaceBetweenHorizontal\tDescription goes here AnimateSpaceBetweenVertical\tDescription goes here AnimateTextAlignment\tDescription goes here AnimateTextCharacterSpacing\tDescription goes here AnimateTextColor\tDescription goes here AnimateTextFaceDilate\tDescription goes here AnimateTextFontAsset\tDescription goes here AnimateTextFontSize\tDescription goes here AnimateTextFontStyle\tDescription goes here AnimateTextLineHeight\tDescription goes here AnimateTextMaxLineCount\tDescription goes here AnimateTextOutlineColor\tDescription goes here AnimateTextOutlineSoftness\tDescription goes here AnimateTextOutlineWidth\tDescription goes here AnimateTextOverflow\tDescription goes here AnimateTextSelectionCaretColor\tDescription goes here AnimateTextSelectionColor\tDescription goes here AnimateTextSelectionHighlightColor\tDescription goes here AnimateTextTransform\tDescription goes here AnimateTextUnderlayColor\tDescription goes here AnimateTextUnderlayDilate\tDescription goes here AnimateTextUnderlaySoftness\tDescription goes here AnimateTextUnderlayX\tDescription goes here AnimateTextUnderlayY\tDescription goes here AnimateTextVerticalAlignment\tDescription goes here AnimateTextWhitespaceMode\tDescription goes here AnimateTextWordSpacing\tDescription goes here AnimateTransformPivotX\tDescription goes here AnimateTransformPivotY\tDescription goes here AnimateVisibility\tDescription goes here AnimateZIndex\tDescription goes here SetAttribute\tDescription goes here Valid\tDescription goes here GetElement\tDescription goes here","keywords":""},{"title":"EntryPointFn","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/EntryPointFn","content":"EntryPointFn class in EvolveUI Methods Invoke\tDescription goes here BeginInvoke\tDescription goes here EndInvoke\tDescription goes here","keywords":""},{"title":"EvolveUIFontAsset","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/EvolveUIFontAsset","content":"EvolveUIFontAsset class in EvolveUI Fields gradientScale\tDescription goes here samplePointSize\tDescription goes here textureWidth\tDescription goes here textureHeight\tDescription goes here fontBytes\tDescription goes here fontMetrics\tDescription goes here glyphMetrics\tDescription goes here atlasLocations\tDescription goes here atlasTextureArray\tDescription goes here glyphIndexForMissingGlyphs\tDescription goes here","keywords":""},{"title":"ElementRelativeSize","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/ElementRelativeSize","content":"ElementRelativeSize struct in EvolveUI Fields value\tDescription goes here unit\tDescription goes here# MethodsEquals\tDescription goes here GetHashCode\tDescription goes here ToString\tDescription goes here ToStyleString\tDescription goes here","keywords":""},{"title":"EventUtil","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/EventUtil","content":"EventUtil class in EvolveUI.Compiler","keywords":""},{"title":"FixedBytes64","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/FixedBytes64","content":"FixedBytes64 struct in EvolveUI","keywords":""},{"title":"EvolveUIRuntime","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/EvolveUIRuntime","content":"EvolveUIRuntime class in EvolveUI This class is absolutely off-limits to users, calling its methods from outside the binding run can and probably will break your gameand crash Unity. It must be public because of C# Reasons. YOU HAVE BEEN WARNED!!!!! Fields stringMemoizer\tDescription goes here uiRuntime\tDescription goes here# MethodsParseUIRangeFromStringBuffer\tDescription goes here ParseUIRange01\tDescription goes here ParseFontSize\tDescription goes here ParseFontSizeFromString\tDescription goes here ParseFontSizeFromStringBuffer\tDescription goes here ParseMeasurementFromString\tDescription goes here ParseMeasurementFromStringBuffer\tDescription goes here ParseMeasurement\tDescription goes here ParseTextureRelativeSize\tDescription goes here ParseTextureRelativeSizeFromStringBuffer\tDescription goes here ParseElementRelativeSize\tDescription goes here ParseElementRelativeSizeFromStringBuffer\tDescription goes here ParseAspectRatio\tDescription goes here ParseAspectRatioFromStringBuffer\tDescription goes here ParseColor\tDescription goes here ParseColorFromStringBuffer\tDescription goes here ParseGridItemPlacement\tDescription goes here ParseGridItemPlacementFromStringBuffer\tDescription goes here ParseAlignmentOffset\tDescription goes here ParseAlignmentOffsetFromStringBuffer\tDescription goes here ParseUISpaceSize\tDescription goes here ParseUISpaceSizeFromStringBuffer\tDescription goes here ParseUISizeConstraint\tDescription goes here ParseUISizeConstraintFromStringBuffer\tDescription goes here ParseFontAssetId\tDescription goes here ParseFontAssetIdFromStringBuffer\tDescription goes here ParseTextureInfo\tDescription goes here ParseTextureInfoFromStringBuffer\tDescription goes here ParseEnum\tDescription goes here ParseEnumFromStringBuffer\tDescription goes here TryGetAnimationIdByName\tDescription goes here GetFontAsset\tDescription goes here GetCursorInfo\tDescription goes here GetTextureInfo\tDescription goes here EnumToString\tDescription goes here GetAttributes\tDescription goes here FlushAttributeAssignments\tDescription goes here EnqueueAttributeBool\tDescription goes here EnqueueAttribute\tDescription goes here EnqueueAttributeEnum\tDescription goes here SetAttributeBool\tDescription goes here SetAttributeEnum\tDescription goes here SetAttribute\tDescription goes here Dispose\tDescription goes here ThrowIfInvalidAccess\tDescription goes here SetupFrame\tDescription goes here EndFrame\tDescription goes here AddEntryPoint\tDescription goes here CreateElementReference\tDescription goes here CreateScope\tDescription goes here CreateTeleportScope\tDescription goes here CreatePortalScope\tDescription goes here CreateRenderMarkerScope\tDescription goes here CreateMarkerScope\tDescription goes here SetupDestructiveScope\tDescription goes here SetupScope\tDescription goes here CreateElement\tDescription goes here RegisterCompanion\tDescription goes here IsElementAlive\tDescription goes here MakeDragCreateMouseEvent\tDescription goes here BeginDrag\tDescription goes here CanCreateDragEvent\tDescription goes here IsMouseOverElement\tDescription goes here IsMouseOverElementOrDescendent\tDescription goes here MouseEnter\tDescription goes here MouseExit\tDescription goes here MouseEvent\tDescription goes here FocusGained\tDescription goes here FocusLost\tDescription goes here KeyFocusModifierCheck\tDescription goes here KeyEvent\tDescription goes here DragDrop\tDescription goes here DragCancel\tDescription goes here DragEnter\tDescription goes here DragExit\tDescription goes here DragEvent\tDescription goes here TextInputEvent\tDescription goes here RenderPortal\tDescription goes here Teleport\tDescription goes here CreateHierarchyMarker\tDescription goes here CreateDeferredHierarchyMarker\tDescription goes here RenderMarker\tDescription goes here UpdateKeyedRepeatList\tDescription goes here UpdateKeyedRepeatEnumerable\tDescription goes here UpdateRepeatEnumerableStruct\tDescription goes here UpdateRepeatEnumerableClass\tDescription goes here UpdateRepeatCollectionStruct\tDescription goes here UpdateRepeatCollectionClass\tDescription goes here UpdateRepeatCountStruct\tDescription goes here UpdateRepeatCountClass\tDescription goes here TryRenderDynamicSlot\tDescription goes here TryRenderParameterlessSlot\tDescription goes here TryRenderStaticSlot\tDescription goes here CreateDynamicSlotOverride\tDescription goes here CreateSlotOverrideDefinition\tDescription goes here GetStylePropertyList\tDescription goes here AppendStyleListFromLongs1\tDescription goes here AppendStyleListFromLongs2\tDescription goes here AppendStyleListFromLongs3\tDescription goes here AppendStyleListFromLongs4\tDescription goes here AppendStyleListFromLongs5\tDescription goes here AppendStyleListFromLongs6\tDescription goes here SetStyleListFromLongs1\tDescription goes here SetStyleListFromLongs2\tDescription goes here SetStyleListFromLongs3\tDescription goes here SetStyleListFromLongs4\tDescription goes here SetStyleListFromLongs5\tDescription goes here SetStyleListFromLongs6\tDescription goes here AddStyleId\tDescription goes here AddStyleAsLong\tDescription goes here AppendStyleBuffer\tDescription goes here ApplyStyleBuffer\tDescription goes here RegisterDestroyHandler\tDescription goes here RegisterDisableHandler\tDescription goes here GetText\tDescription goes here SetText\tDescription goes here CreateTextReference\tDescription goes here CreateTextElement\tDescription goes here GetCharBuffer\tDescription goes here MemoizeAndRelease\tDescription goes here ReleaseStringBuilder\tDescription goes here","keywords":""},{"title":"FloatSpringInfo","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/FloatSpringInfo","content":"FloatSpringInfo struct in EvolveUI Fields spring\tDescription goes here prev\tDescription goes here next\tDescription goes here position\tDescription goes here velocity\tDescription goes here","keywords":""},{"title":"FloatSpringInterpolator","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/FloatSpringInterpolator","content":"FloatSpringInterpolator class in EvolveUI","keywords":""},{"title":"Float4x4Extensions","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/Float4x4Extensions","content":"Float4x4Extensions class in EvolveUI","keywords":""},{"title":"FocusChangeEvent","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/FocusChangeEvent","content":"FocusChangeEvent struct in EvolveUI Fields elementId\tDescription goes here","keywords":""},{"title":"FontAssetReference","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/FontAssetReference","content":"FontAssetReference struct in EvolveUI Fields assetId\tDescription goes here font\tDescription goes here# MethodsEquals\tDescription goes here GetHashCode\tDescription goes here","keywords":""},{"title":"FontCreationFlags","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/FontCreationFlags","content":"FontCreationFlags enum in EvolveUI.Slug BoundingPolygons KernData MarkData SequenceData AlternateData LayerData OutlineEffect Underline Strikethrough Default\t","keywords":""},{"title":"FontAssetId","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/FontAssetId","content":"FontAssetId struct in EvolveUI Methods Equals\tDescription goes here GetHashCode\tDescription goes here ToStyleString\tDescription goes here","keywords":""},{"title":"FontFamily","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/FontFamily","content":"FontFamily class in EvolveUI.Slug Fields familyName\tDescription goes here# MethodsAddMember\tDescription goes here AddFallbackFamily\tDescription goes here AddDefaultFallback\tDescription goes here","keywords":""},{"title":"FontId","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/FontId","content":"FontId struct in EvolveUI","keywords":""},{"title":"FontScriptData","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/FontScriptData","content":"FontScriptData struct in EvolveUI.Slug Fields scriptScale\tDescription goes here scriptOffset\tDescription goes here","keywords":""},{"title":"FontPolygonData","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/FontPolygonData","content":"FontPolygonData struct in EvolveUI.Slug Fields polygonVertexCount\tDescription goes here polygonEdgeFactor\tDescription goes here","keywords":""},{"title":"FontDecorationData","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/FontDecorationData","content":"FontDecorationData struct in EvolveUI.Slug Fields decorationSize\tDescription goes here decorationPosition\tDescription goes here","keywords":""},{"title":"FontSettings","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/FontSettings","content":"FontSettings struct in EvolveUI.Slug Fields featureFlags\tDescription goes here subscriptData\tDescription goes here superscriptData\tDescription goes here underlineData\tDescription goes here strikethroughData\tDescription goes here polygonData\tDescription goes here outlineData\tDescription goes here maxBandCount\tDescription goes here fontIndex\tDescription goes here","keywords":""},{"title":"FontMetrics","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/FontMetrics","content":"FontMetrics struct in EvolveUI.Text Fields ascent\tDescription goes here descent\tDescription goes here lineGap\tDescription goes here unitsPerEm\tDescription goes here capHeight\tDescription goes here xHeight\tDescription goes here advanceSpaceWidth\tDescription goes here italic_angle\tDescription goes here underline_position\tDescription goes here underline_thickness\tDescription goes here xAvgCharWidth\tDescription goes here usWeightClass\tDescription goes here usWidthClass\tDescription goes here fsType\tDescription goes here ySubscriptXSize\tDescription goes here ySubscriptYSize\tDescription goes here ySubscriptXOffset\tDescription goes here ySubscriptYOffset\tDescription goes here ySuperscriptXSize\tDescription goes here ySuperscriptYSize\tDescription goes here ySuperscriptXOffset\tDescription goes here ySuperscriptYOffset\tDescription goes here yStrikeoutSize\tDescription goes here yStrikeoutPosition\tDescription goes here# MethodsToString\tDescription goes here","keywords":""},{"title":"FontEntry","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/FontEntry","content":"FontEntry class in EvolveUI.Slug Fields fontName\tDescription goes here scaleAdjustment\tDescription goes here yAdjustment\tDescription goes here slugFile\tDescription goes here weight\tDescription goes here slant\tDescription goes here","keywords":""},{"title":"FontOutlineData","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/FontOutlineData","content":"FontOutlineData struct in EvolveUI.Slug Fields outlineEffectSize\tDescription goes here outlineMiterLimit\tDescription goes here outlineJoinType\tDescription goes here","keywords":""},{"title":"FontSettingsInternal","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/FontSettingsInternal","content":"FontSettingsInternal struct in EvolveUI.Slug Fields featureFlags\tDescription goes here subscriptData\tDescription goes here superscriptData\tDescription goes here underlineData\tDescription goes here strikethroughData\tDescription goes here polygonData\tDescription goes here outlineData\tDescription goes here maxBandCount\tDescription goes here fontIndex\tDescription goes here","keywords":""},{"title":"FontSlant","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/FontSlant","content":"FontSlant enum in EvolveUI.Slug Upright Italic\t","keywords":""},{"title":"FontStyle","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/FontStyle","content":"FontStyle enum in EvolveUI Normal Bold Italic Underline StrikeThrough\t","keywords":""},{"title":"FontUsage","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/FontUsage","content":"FontUsage struct in EvolveUI Fields fontIndex\tDescription goes here maxVertexCount\tDescription goes here maxTriangleCount\tDescription goes here vertexCount\tDescription goes here elementCount\tDescription goes here startIndex\tDescription goes here","keywords":""},{"title":"GameObjectAssetReference","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/GameObjectAssetReference","content":"GameObjectAssetReference struct in EvolveUI Fields name\tDescription goes here gameObject\tDescription goes here","keywords":""},{"title":"GestureInputEvent","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/GestureInputEvent","content":"GestureInputEvent enum in EvolveUI Start Move End Cancel\t","keywords":""},{"title":"FormatFlags","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/FormatFlags","content":"FormatFlags enum in EvolveUI.Slug Font Size Stretch Tracking Skew Scale Offset Color Gradient Alignment Leading Paragraph Tab Kern Mark Sequence Alternate Layer Decoration Script Grid\t","keywords":""},{"title":"GestureConstraints","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/GestureConstraints","content":"GestureConstraints struct in EvolveUI Fields pointerCount\tDescription goes here duration\tDescription goes here distance\tDescription goes here currentSpeed\tDescription goes here averageSpeed\tDescription goes here finalSpeed\tDescription goes here centerMovement\tDescription goes here","keywords":""},{"title":"GeometryType","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/GeometryType","content":"GeometryType enum in EvolveUI.Slug Polygons Quads Rectangles\t","keywords":""},{"title":"FontWeight","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/FontWeight","content":"FontWeight enum in EvolveUI.Slug FW100 Thin HairLine ExtraLight FW200 Light FW300 Regular Normal FW400 FW500 Medium FW600 SemiBold FW700 Bold FW800 ExtraBold FW900 Heavy Black FW950 ExtraBlack\t","keywords":""},{"title":"GestureEventData","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/GestureEventData","content":"GestureEventData struct in EvolveUI Fields contact\tDescription goes here gesture\tDescription goes here","keywords":""},{"title":"Frag","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/Frag","content":"Frag struct in EvolveUI.Rendering Fields outlineColor\tDescription goes here backgroundTint_textUnderlayColor\tDescription goes here opacity\tDescription goes here outlineWidth\tDescription goes here shapeData\tDescription goes here revealInfo\tDescription goes here textureBorderSizes\tDescription goes here mainTexX\tDescription goes here mainTexY\tDescription goes here mainTexWidth\tDescription goes here mainTexHeight\tDescription goes here maskTexX\tDescription goes here maskTexY\tDescription goes here maskTexWidth\tDescription goes here maskTexHeight\tDescription goes here mainTexSlice\tDescription goes here mainTexChannelMask\tDescription goes here maskTexSlice\tDescription goes here maskTexChannelMask\tDescription goes here bgTransform\tDescription goes here maskTransform\tDescription goes here mainTexUvWrapMode\tDescription goes here mainTexSampleMode\tDescription goes here maskTexUvWrapMode\tDescription goes here maskThreshold\tDescription goes here textureBounds\tDescription goes here maskBounds\tDescription goes here","keywords":""},{"title":"FontUtil","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/FontUtil","content":"FontUtil class in EvolveUI.Text","keywords":""},{"title":"FullLayoutResult","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/FullLayoutResult","content":"FullLayoutResult struct in EvolveUI Fields border\tDescription goes here padding\tDescription goes here localPosition\tDescription goes here size\tDescription goes here bounds\tDescription goes here localMatrix\tDescription goes here worldMatrix\tDescription goes here","keywords":""},{"title":"Gesture2","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/Gesture2","content":"Gesture2 class in EvolveUI Fields region\tDescription goes here eventName\tDescription goes here isActive\tDescription goes here blocked\tDescription goes here# MethodsValidateBegin\tDescription goes here ValidateUpdate\tDescription goes here Recognize\tDescription goes here","keywords":""},{"title":"GesturePointerType","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/GesturePointerType","content":"GesturePointerType enum in EvolveUI Touch\t","keywords":""},{"title":"GesturePointer","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/GesturePointer","content":"GesturePointer struct in EvolveUI Fields point\tDescription goes here","keywords":""},{"title":"GestureRegion","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/GestureRegion","content":"GestureRegion class in EvolveUI Fields multiPointTrend\tDescription goes here multiPointOverall\tDescription goes here# MethodsUpdate\tDescription goes here GetPointer\tDescription goes here GetPrimaryPointer\tDescription goes here Emit\tDescription goes here","keywords":""},{"title":"GestureRequirements","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/GestureRequirements","content":"GestureRequirements struct in EvolveUI Fields requiresPointerUp\tDescription goes here requireActivePointer\tDescription goes here requirePointerMove\tDescription goes here","keywords":""},{"title":"GetFontHeader","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/GetFontHeader","content":"GetFontHeader class in EvolveUI.Slug Methods Invoke\tDescription goes here BeginInvoke\tDescription goes here EndInvoke\tDescription goes here","keywords":""},{"title":"GesturePtrEvent","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/GesturePtrEvent","content":"GesturePtrEvent struct in EvolveUI Fields timeStamp\tDescription goes here point\tDescription goes here pointerId\tDescription goes here phase\tDescription goes here","keywords":""},{"title":"GlyphState","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/GlyphState","content":"GlyphState struct in EvolveUI.Text Fields time\tDescription goes here revealMap\tDescription goes here","keywords":""},{"title":"GestureThing","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/GestureThing","content":"GestureThing class in EvolveUI Methods InputHandler\tDescription goes here","keywords":""},{"title":"GlyphInfo","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/GlyphInfo","content":"GlyphInfo struct in EvolveUI.Text matches GlyphInfo in cpp Fields glyphIndex\tDescription goes here cluster\tDescription goes here","keywords":""},{"title":"GpuGlyphInfo","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/GpuGlyphInfo","content":"GpuGlyphInfo struct in EvolveUI.Text Fields glyphWidth\tDescription goes here glyphHeight\tDescription goes here leftBearing\tDescription goes here topBearing\tDescription goes here atlasLeft\tDescription goes here atlasRight\tDescription goes here atlasTop\tDescription goes here atlasBottom\tDescription goes here slice\tDescription goes here channel\tDescription goes here invSdfSampleSize\tDescription goes here gradientScale\tDescription goes here","keywords":""},{"title":"GradientInfo","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/GradientInfo","content":"GradientInfo struct in EvolveUI Fields mode\tDescription goes here colorKey0\tDescription goes here colorKey1\tDescription goes here colorKey2\tDescription goes here colorKey3\tDescription goes here colorKey4\tDescription goes here colorKey5\tDescription goes here colorKey6\tDescription goes here colorKey7\tDescription goes here alphaKey0\tDescription goes here alphaKey1\tDescription goes here alphaKey2\tDescription goes here alphaKey3\tDescription goes here alphaKey4\tDescription goes here alphaKey5\tDescription goes here alphaKey6\tDescription goes here alphaKey7\tDescription goes here width\tDescription goes here height\tDescription goes here","keywords":""},{"title":"GlyphAtlasEntry","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/GlyphAtlasEntry","content":"GlyphAtlasEntry struct in EvolveUI Fields left\tDescription goes here right\tDescription goes here top\tDescription goes here bottom\tDescription goes here glyphWidth\tDescription goes here glyphHeight\tDescription goes here leftBearing\tDescription goes here topBearing\tDescription goes here slice\tDescription goes here","keywords":""},{"title":"GradientAssetReference","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/GradientAssetReference","content":"GradientAssetReference class in EvolveUI Fields assetId\tDescription goes here gradient\tDescription goes here isReflected\tDescription goes here resolution\tDescription goes here","keywords":""},{"title":"Gfx","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/Gfx","content":"Gfx class in EvolveUI Methods GetTempMaterialBlock\tDescription goes here SetMatrix\tDescription goes here ResetElementData\tDescription goes here SetMainTexture\tDescription goes here SetMaskTexture\tDescription goes here SetTexTransform\tDescription goes here SetOpacity\tDescription goes here SetBackgroundColor\tDescription goes here SetTintColor\tDescription goes here SetCornerBevel\tDescription goes here SetCornerRadii\tDescription goes here SetOutline\tDescription goes here DrawStyledElement\tDescription goes here DrawElement\tDescription goes here DrawWithShader\tDescription goes here DrawMesh\tDescription goes here PushRenderTarget\tDescription goes here PopRenderTarget\tDescription goes here Callback\tDescription goes here GetViewMatrixTopLeft\tDescription goes here SetStyleFromElementBody\tDescription goes here","keywords":""},{"title":"GestureSession","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/GestureSession","content":"GestureSession class in EvolveUI Fields prevInput\tDescription goes here firstInput\tDescription goes here firstMultiple\tDescription goes here offsetDelta\tDescription goes here prevDelta\tDescription goes here lastInterval\tDescription goes here","keywords":""},{"title":"GlyphDisplayFlags","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/GlyphDisplayFlags","content":"GlyphDisplayFlags enum in EvolveUI.Text FakeBold FakeItalic InvertHorizontalUV InvertVerticalUV InvertUVs Hidden __QuadFlagOverlap__ NoHorizontalPadding\t","keywords":""},{"title":"GradientType","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/GradientType","content":"GradientType enum in EvolveUI.Slug Linear Radial\t","keywords":""},{"title":"Graph","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/Graph","content":"Graph class in EvolveUI.ExecutionGraph","keywords":""},{"title":"GradientAssetReferenceJsonType","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/GradientAssetReferenceJsonType","content":"GradientAssetReferenceJsonType class in EvolveUI Fields assetId\tDescription goes here colorKeys\tDescription goes here alphaKeys\tDescription goes here gradientMode\tDescription goes here isReflected\tDescription goes here resolution\tDescription goes here","keywords":""},{"title":"GridCellDefinition","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/GridCellDefinition","content":"GridCellDefinition struct in EvolveUI Fields value\tDescription goes here stretch\tDescription goes here unit\tDescription goes here# MethodsEquals\tDescription goes here GetHashCode\tDescription goes here ToStyleString\tDescription goes here","keywords":""},{"title":"GraphicsBufferIdentifier","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/GraphicsBufferIdentifier","content":"GraphicsBufferIdentifier struct in EvolveUI","keywords":""},{"title":"GridCellSize","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/GridCellSize","content":"GridCellSize struct in EvolveUI.Systems Fields value\tDescription goes here unit\tDescription goes here","keywords":""},{"title":"GraphNode","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/GraphNode","content":"GraphNode class in EvolveUI.ExecutionGraph Methods Update\tDescription goes here AddNode\tDescription goes here Release\tDescription goes here","keywords":""},{"title":"GridLayoutDensity","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/GridLayoutDensity","content":"GridLayoutDensity enum in EvolveUI Sparse Dense\t","keywords":""},{"title":"GraphInstance","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/GraphInstance","content":"GraphInstance class in EvolveUI.ExecutionGraph Methods EmitEvent\tDescription goes here HasEvent\tDescription goes here Reset\tDescription goes here Execute\tDescription goes here","keywords":""},{"title":"GridItemPlacement","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/GridItemPlacement","content":"GridItemPlacement struct in EvolveUI Methods Equals\tDescription goes here GetHashCode\tDescription goes here ToStyleString\tDescription goes here","keywords":""},{"title":"GridTemplate","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/GridTemplate","content":"GridTemplate struct in EvolveUI Methods AddCell\tDescription goes here Equals\tDescription goes here GetHashCode\tDescription goes here ToStyleString\tDescription goes here","keywords":""},{"title":"HalfColor","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/HalfColor","content":"HalfColor struct in EvolveUI Fields r\tDescription goes here g\tDescription goes here b\tDescription goes here a\tDescription goes here# MethodsEquals\tDescription goes here GetHashCode\tDescription goes here ToString\tDescription goes here","keywords":""},{"title":"HarfbuzzLanguageIdByte","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/HarfbuzzLanguageIdByte","content":"HarfbuzzLanguageIdByte enum in EvolveUI.Text","keywords":""},{"title":"ICommandBufferCallbackHandler","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/ICommandBufferCallbackHandler","content":"ICommandBufferCallbackHandler class in EvolveUI Methods Run\tDescription goes here","keywords":""},{"title":"HarfbuzzScriptIdByte","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/HarfbuzzScriptIdByte","content":"HarfbuzzScriptIdByte enum in EvolveUI.Text Common Inherited Unknown Arabic Armenian Bengali Cyrillic Devanagari Georgian Greek Gujarati Gurmukhi Hangul Han Hebrew Hiragana Kannada Katakana Lao Latin Malayalam Oriya Tamil Telugu Thai Tibetan Bopomofo Braille Canadian_syllabics Cherokee Ethiopic Khmer Mongolian Myanmar Ogham Runic Sinhala Syriac Thaana Yi Deseret Gothic Old_italic Buhid Hanunoo Tagalog Tagbanwa Cypriot Limbu Linear_b Osmanya Shavian Tai_le Ugaritic Buginese Coptic Glagolitic Kharoshthi New_tai_lue Old_persian Syloti_nagri Tifinagh Balinese Cuneiform Nko Phags_pa Phoenician Carian Cham Kayah_li Lepcha Lycian Lydian Ol_chiki Rejang Saurashtra Sundanese Vai Avestan Bamum EgyptianHieroglyphs ImperialAramaic InscriptionalPahlavi InscriptionalParthian Javanese Kaithi Lisu MeeteiMayek OldSouthArabian OldTurkic Samaritan TaiTham TaiViet Batak Brahmi Mandaic Chakma MeroiticCursive MeroiticHieroglyphs Miao Sharada SoraSompeng Takri BassaVah CaucasianAlbanian Duployan Elbasan Grantha Khojki Khudawadi Linear_a Mahajani Manichaean Mende_kikakui Modi Mro Nabataean Old_north_arabian Old_permic Pahawh_hmong Palmyrene Pau_cin_hau Psalter_pahlavi Siddham Tirhuta Warang_citi Ahom Anatolian_hieroglyphs Hatran Multani Old_hungarian Signwriting Adlam Bhaiksuki Marchen Osage Tangut Newa Masaram_gondi Nushu Soyombo Zanabazar_square Dogra Gunjala_gondi Hanifi_rohingya Makasar Medefaidrin Old_sogdian Sogdian Elymaic Nandinagari Nyiakeng_puachue_hmong Wancho Chorasmian Dives_akuru Khitan_small_script Yezidi\t","keywords":""},{"title":"IEvolveApplication","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/IEvolveApplication","content":"IEvolveApplication class in EvolveUI Methods Reload\tDescription goes here","keywords":""},{"title":"IJobParallelForDeferBatch","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/IJobParallelForDeferBatch","content":"IJobParallelForDeferBatch class in Unity.Jobs Methods ExecuteDefer\tDescription goes here","keywords":""},{"title":"IByteBufferSerializable","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/IByteBufferSerializable","content":"IByteBufferSerializable class in EvolveUI.Util Methods Serialize\tDescription goes here Deserialize\tDescription goes here","keywords":""},{"title":"IdentifierExtensions","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/IdentifierExtensions","content":"IdentifierExtensions class in EvolveUI.Util","keywords":""},{"title":"IJobParallelForDeferExtensions_Evolve","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/IJobParallelForDeferExtensions_Evolve","content":"IJobParallelForDeferExtensions_Evolve class in Unity.Jobs","keywords":""},{"title":"ImageRenderMode","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/ImageRenderMode","content":"ImageRenderMode enum in EvolveUI Default FullImage Sliced SlicedWithoutCenter SlicedOnlyCenter\t","keywords":""},{"title":"IKeyboardAdapter","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/IKeyboardAdapter","content":"IKeyboardAdapter class in EvolveUI Methods ClearEvents\tDescription goes here GetModifiers\tDescription goes here HasKeyCodeEvent\tDescription goes here HasCharacterEvent\tDescription goes here Update\tDescription goes here","keywords":""},{"title":"ICompiledApplication","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/ICompiledApplication","content":"ICompiledApplication class in EvolveUI Methods GetEntryPoints\tDescription goes here","keywords":""},{"title":"ImageSource","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/ImageSource","content":"ImageSource struct in EvolveUI Fields texture\tDescription goes here textureSampleMode\tDescription goes here textureInfo\tDescription goes here address\tDescription goes here# MethodsEquals\tDescription goes here GetHashCode\tDescription goes here","keywords":""},{"title":"HierarchyMarker","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/HierarchyMarker","content":"HierarchyMarker struct in EvolveUI Methods Show\tDescription goes here","keywords":""},{"title":"GridTemplateUnit","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/GridTemplateUnit","content":"GridTemplateUnit enum in EvolveUI Em MaxContent MinContent Percent Pixel ViewportWidth ViewportHeight Stretch ApplicationWidth ApplicationHeight\t","keywords":""},{"title":"IMGUIContext","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/IMGUIContext","content":"IMGUIContext struct in EvolveUI.IMGUI Methods DrawText\tDescription goes here","keywords":""},{"title":"ImageCompanion","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/ImageCompanion","content":"ImageCompanion struct in EvolveUI Fields element\tDescription goes here runtime\tDescription goes here src\tDescription goes here width\tDescription goes here height\tDescription goes here# MethodsOnBeforeUpdate\tDescription goes here","keywords":""},{"title":"IMGUIRenderer","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/IMGUIRenderer","content":"IMGUIRenderer class in EvolveUI.IMGUI Methods EmitCommands\tDescription goes here","keywords":""},{"title":"IndirectArg","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/IndirectArg","content":"IndirectArg struct in EvolveUI Fields indexCountPerInstance\tDescription goes here instanceCount\tDescription goes here startIndexLocation\tDescription goes here baseVertexLocation\tDescription goes here startInstanceLocation\tDescription goes here","keywords":""},{"title":"ImplicitTemplateArgumentAttribute","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/ImplicitTemplateArgumentAttribute","content":"ImplicitTemplateArgumentAttribute class in EvolveUI","keywords":""},{"title":"IndentedStringBuilder","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/IndentedStringBuilder","content":"IndentedStringBuilder class in EvolveUI.Util Fields enableColors\tDescription goes here# MethodsIndent\tDescription goes here Outdent\tDescription goes here Append\tDescription goes here Clear\tDescription goes here ToString\tDescription goes here PushColor\tDescription goes here PopColor\tDescription goes here AppendInline\tDescription goes here NewLine\tDescription goes here","keywords":""},{"title":"InjectElementReference","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/InjectElementReference","content":"InjectElementReference class in EvolveUI","keywords":""},{"title":"IMGUITest","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/IMGUITest","content":"IMGUITest class in EvolveUI.IMGUI Methods Render\tDescription goes here","keywords":""},{"title":"IntBoolMap512","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/IntBoolMap512","content":"IntBoolMap512 struct in EvolveUI.Util Methods set_Item\tDescription goes here","keywords":""},{"title":"InputEvent","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/InputEvent","content":"InputEvent class in EvolveUI.UIInput Fields type\tDescription goes here","keywords":""},{"title":"InputManager","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/InputManager","content":"InputManager class in EvolveUI Fields session\tDescription goes here# MethodsEmit\tDescription goes here Recognize\tDescription goes here","keywords":""},{"title":"InputData","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/InputData","content":"InputData class in EvolveUI Fields pointers\tDescription goes here changedPointers\tDescription goes here gesturePointerType\tDescription goes here isFirst\tDescription goes here isFinal\tDescription goes here srcEvt\tDescription goes here eventType\tDescription goes here center\tDescription goes here timeStamp\tDescription goes here deltaTime\tDescription goes here angle\tDescription goes here distance\tDescription goes here delta\tDescription goes here offsetDirection\tDescription goes here overallVelocityX\tDescription goes here overallVelocityY\tDescription goes here overallVelocity\tDescription goes here scale\tDescription goes here rotation\tDescription goes here maxPointers\tDescription goes here velocity\tDescription goes here velocityX\tDescription goes here velocityY\tDescription goes here direction\tDescription goes here","keywords":""},{"title":"InputVector","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/InputVector","content":"InputVector struct in EvolveUI Fields startPoint\tDescription goes here endPoint\tDescription goes here direction\tDescription goes here delta\tDescription goes here point\tDescription goes here vectorLength\tDescription goes here","keywords":""},{"title":"InjectTextReference","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/InjectTextReference","content":"InjectTextReference class in EvolveUI","keywords":""},{"title":"InterpolatorBase","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/InterpolatorBase","content":"InterpolatorBase class in EvolveUI Methods OnAnimationFrameSetup\tDescription goes here OnAnimationFrameTeardown\tDescription goes here","keywords":""},{"title":"IntBoolMap128","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/IntBoolMap128","content":"IntBoolMap128 struct in EvolveUI.Util Methods set_Item\tDescription goes here TrySetIndex\tDescription goes here","keywords":""},{"title":"IParallelForBatch","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/IParallelForBatch","content":"IParallelForBatch class in Methods set_parallel\tDescription goes here","keywords":""},{"title":"InterpolationInput","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/InterpolationInput","content":"InterpolationInput struct in EvolveUI Fields elapsedMS\tDescription goes here iterationCount\tDescription goes here elementId\tDescription goes here state\tDescription goes here instanceId\tDescription goes here direction\tDescription goes here isLooping\tDescription goes here isPaused\tDescription goes here","keywords":""},{"title":"IPainter","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/IPainter","content":"IPainter class in EvolveUI Methods OnPaint\tDescription goes here","keywords":""},{"title":"InputUtil","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/InputUtil","content":"InputUtil class in EvolveUI.BasicElements","keywords":""},{"title":"IParallelForDefer","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/IParallelForDefer","content":"IParallelForDefer class in Methods set_deferred\tDescription goes here","keywords":""},{"title":"IParallelFor","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/IParallelFor","content":"IParallelFor class in","keywords":""},{"title":"InputEventType","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/InputEventType","content":"InputEventType enum in EvolveUI None MouseEnter MouseExit MouseUp MouseDown MouseHeldDown MouseMove MouseHover MouseUpdate MouseContext MouseScroll MouseClick MOUSE_EVENT KeyDown KeyUp KeyHeldDown KEY_EVENT FocusGain FocusLost FOCUS_EVENT DragCreate DragMove DragHover DragUpdate DragEnter DragExit DragDrop DragCancel DRAG_EVENT TextInput\t","keywords":""},{"title":"InjectUIRuntime","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/InjectUIRuntime","content":"InjectUIRuntime class in EvolveUI","keywords":""},{"title":"IService","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/IService","content":"IService class in EvolveUI Methods set_application\tDescription goes here OnInitialize\tDescription goes here","keywords":""},{"title":"JobHandleExtension","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/JobHandleExtension","content":"JobHandleExtension class in EvolveUI","keywords":""},{"title":"IUIShader","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/IUIShader","content":"IUIShader class in EvolveUI.IMGUI Methods GetShaderGuid\tDescription goes here","keywords":""},{"title":"IToStringBuffer","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/IToStringBuffer","content":"IToStringBuffer class in EvolveUI Methods ToStringBuffer\tDescription goes here","keywords":""},{"title":"JobSystem","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/JobSystem","content":"JobSystem class in EvolveUI.IMGUI Fields running\tDescription goes here workerCount\tDescription goes here# MethodsCreateJob\tDescription goes here CreateChildJob\tDescription goes here AllocateJob\tDescription goes here GetWorker\tDescription goes here","keywords":""},{"title":"JoinType","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/JoinType","content":"JoinType enum in EvolveUI.Slug Bevel Round\t","keywords":""},{"title":"JobSystem2","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/JobSystem2","content":"JobSystem2 struct in EvolveUI.IMGUI Fields jobQueue\tDescription goes here# MethodsWait\tDescription goes here","keywords":""},{"title":"JobData","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/JobData","content":"JobData struct in EvolveUI.IMGUI","keywords":""},{"title":"JobThread","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/JobThread","content":"JobThread class in EvolveUI.IMGUI Fields jobSystem\tDescription goes here threadId\tDescription goes here queue\tDescription goes here# MethodsExecute\tDescription goes here","keywords":""},{"title":"IntBoolMap","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/IntBoolMap","content":"IntBoolMap struct in EvolveUI.Util Fields map\tDescription goes here size\tDescription goes here# Methodsset_Item\tDescription goes here TrySetIndex\tDescription goes here Clear\tDescription goes here Add\tDescription goes here Remove\tDescription goes here SetIndex\tDescription goes here UnsetIndex\tDescription goes here","keywords":""},{"title":"KeyboardInputEvent","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/KeyboardInputEvent","content":"KeyboardInputEvent struct in EvolveUI Fields isFocused\tDescription goes here eventType\tDescription goes here modifiers\tDescription goes here keyboardAdapter\tDescription goes here originElementId\tDescription goes here# MethodsConsume\tDescription goes here StopPropagation\tDescription goes here GetKeys\tDescription goes here Contains\tDescription goes here","keywords":""},{"title":"KeyboardInputState","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/KeyboardInputState","content":"KeyboardInputState class in EvolveUI.UIInput Fields modifiersThisFrame\tDescription goes here# MethodsGetKeyCodeStates\tDescription goes here GetKeyState\tDescription goes here SetKeyState\tDescription goes here CleanupForThisFrame\tDescription goes here IsKeyDown\tDescription goes here IsKeyDownThisFrame\tDescription goes here IsKeyUp\tDescription goes here IsKeyUpThisFrame\tDescription goes here","keywords":""},{"title":"KeyEventContainer","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/KeyEventContainer","content":"KeyEventContainer class in EvolveUI Methods Contains\tDescription goes here Add\tDescription goes here GetKeys\tDescription goes here","keywords":""},{"title":"KeyboardModifiers","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/KeyboardModifiers","content":"KeyboardModifiers enum in EvolveUI None Alt Shift Control Command Windows NumLock CapsLock\t","keywords":""},{"title":"IParallelDeferBatchable","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/IParallelDeferBatchable","content":"IParallelDeferBatchable class in Methods set_defer\tDescription goes here","keywords":""},{"title":"KeyPressState","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/KeyPressState","content":"KeyPressState struct in EvolveUI Fields keyCode\tDescription goes here character\tDescription goes here","keywords":""},{"title":"LayoutDirection","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/LayoutDirection","content":"LayoutDirection enum in EvolveUI Forward Reverse\t","keywords":""},{"title":"KeyEventPhase","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/KeyEventPhase","content":"KeyEventPhase enum in EvolveUI.UIInput Early Late\t","keywords":""},{"title":"KeyCodeUtil","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/KeyCodeUtil","content":"KeyCodeUtil class in EvolveUI.Util","keywords":""},{"title":"LayoutBehavior","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/LayoutBehavior","content":"LayoutBehavior enum in EvolveUI Normal Ignored\t","keywords":""},{"title":"KeyState","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/KeyState","content":"KeyState enum in EvolveUI.UIInput Up Down DownThisFrame UpThisFrame\t","keywords":""},{"title":"LayoutWrap","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/LayoutWrap","content":"LayoutWrap enum in EvolveUI.Layout None WrapHorizontal\t","keywords":""},{"title":"LayoutFlags","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/LayoutFlags","content":"LayoutFlags enum in EvolveUI.Slug FormatDirectives ClippingPlanes KernDisable MarkDisable SequenceDisable AlternateDisable LayerDisable LayerTextColor NonlinearColor FullJustification RightToLeft Bidirectional GridPositioning ParagraphAttributes TabSpacing WrapDisable\t","keywords":""},{"title":"LegacyKeyboardAdapter","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/LegacyKeyboardAdapter","content":"LegacyKeyboardAdapter class in EvolveUI Methods ClearEvents\tDescription goes here GetModifiers\tDescription goes here HasKeyCodeEvent\tDescription goes here HasCharacterEvent\tDescription goes here Update\tDescription goes here","keywords":""},{"title":"KeyCodeState","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/KeyCodeState","content":"KeyCodeState struct in EvolveUI.UIInput Fields character\tDescription goes here keyCode\tDescription goes here keyState\tDescription goes here","keywords":""},{"title":"LayoutData","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/LayoutData","content":"LayoutData struct in EvolveUI Fields fontType\tDescription goes here fontSize\tDescription goes here fontStretch\tDescription goes here textTracking\tDescription goes here textSkew\tDescription goes here textScale\tDescription goes here textOffset\tDescription goes here textColor\tDescription goes here textAlignment\tDescription goes here textLeading\tDescription goes here paragraphSpacing\tDescription goes here leftMargin\tDescription goes here rightMargin\tDescription goes here firstLineIndent\tDescription goes here tabSize\tDescription goes here tabRound\tDescription goes here layoutFlags\tDescription goes here renderFlags\tDescription goes here geometryType\tDescription goes here formatMask\tDescription goes here sequenceMask\tDescription goes here alternateMask\tDescription goes here styleIndex\tDescription goes here scriptLevel\tDescription goes here spaceCount\tDescription goes here spaceArray\tDescription goes here placeholderBase\tDescription goes here placeholderCount\tDescription goes here placeholderWidthArray\tDescription goes here effectType\tDescription goes here effectOffset\tDescription goes here effectColor\tDescription goes here objectScale\tDescription goes here objectOffset\tDescription goes here clipLeft\tDescription goes here clipRight\tDescription goes here missingGlyphIndex\tDescription goes here defaultLayoutData\tDescription goes here","keywords":""},{"title":"LineInfo","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/LineInfo","content":"LineInfo struct in EvolveUI.Util Fields line\tDescription goes here column\tDescription goes here# MethodsToString\tDescription goes here","keywords":""},{"title":"LongBoolMap","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/LongBoolMap","content":"LongBoolMap struct in EvolveUI Methods Get\tDescription goes here Set\tDescription goes here Unset\tDescription goes here TrySetIndex\tDescription goes here PopCount\tDescription goes here Clear\tDescription goes here GetEnumerator\tDescription goes here ToArray\tDescription goes here ContainsAny\tDescription goes here FillBuffer\tDescription goes here set_Item\tDescription goes here CopyFrom\tDescription goes here","keywords":""},{"title":"LayoutType","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/LayoutType","content":"LayoutType enum in EvolveUI Vertical Horizontal GridHorizontal GridVertical Radial Stack VerticalWrap HorizontalWrap __COUNT__\t","keywords":""},{"title":"LongBoolMap64","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/LongBoolMap64","content":"LongBoolMap64 struct in EvolveUI Fields map\tDescription goes here# MethodsTrySetIndex\tDescription goes here","keywords":""},{"title":"ManagedByteBuffer","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/ManagedByteBuffer","content":"ManagedByteBuffer struct in EvolveUI.Util Fields array\tDescription goes here ptr\tDescription goes here# MethodsWrite\tDescription goes here Read\tDescription goes here WriteWithRange\tDescription goes here WriteItem\tDescription goes here ReadItem\tDescription goes here Clone\tDescription goes here WriteSerializeArray\tDescription goes here ReadSerializeArray\tDescription goes here EnsureAdditionalCapacity\tDescription goes here","keywords":""},{"title":"LayoutFit","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/LayoutFit","content":"LayoutFit enum in EvolveUI Default None Grow Shrink Fill FillParent\t","keywords":""},{"title":"MathUtil","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/MathUtil","content":"MathUtil class in EvolveUI.Util","keywords":""},{"title":"ListAllocatorSized","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/ListAllocatorSized","content":"ListAllocatorSized struct in EvolveUI.Unsafe A simple pool allocator intended to be used to allocate lists of unmanaged types.Memory returned is NOT cleared, user must clear it if desired.Uses a set of fixed block allocators but doesn't commit memory into the block sizesuntil it actually needs to, which should reduce memory waste dramatically. This will not recycle blocks between sizes because I don't want to pay the price of coalescingneighboring blocks that are free. (a-la Buddy allocator) Fields minAllocSize\tDescription goes here maxAllocSize\tDescription goes here pageSize\tDescription goes here# MethodsClear\tDescription goes here Dispose\tDescription goes here AllocateCleared\tDescription goes here Allocate\tDescription goes here Free\tDescription goes here GetPageCount\tDescription goes here DumpPageStats\tDescription goes here Reallocate\tDescription goes here GetCapacityFromSize\tDescription goes here","keywords":""},{"title":"LifeCycleEventType","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/LifeCycleEventType","content":"LifeCycleEventType enum in EvolveUI Invalid OnBeforeCreate OnAfterCreate OnBeforeEnable OnAfterEnable OnBeforeUpdate OnAfterUpdate OnBeforeEarlyInput OnAfterEarlyInput OnBeforeInput OnAfterInput OnBeforeLateInput OnAfterLateInput OnBeforeFinish OnAfterFinish OnBeforeDisable OnAfterDisable OnBeforeDestroy OnAfterDestroy\t","keywords":""},{"title":"MinMax","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/MinMax","content":"MinMax struct in EvolveUI Fields min\tDescription goes here max\tDescription goes here# MethodsValidate\tDescription goes here","keywords":""},{"title":"MissingDiagnosticException","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/MissingDiagnosticException","content":"MissingDiagnosticException class in EvolveUI.Compiler","keywords":""},{"title":"ModuleJsonData","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/ModuleJsonData","content":"ModuleJsonData struct in EvolveUI Fields implicitNamespaces\tDescription goes here dependencies\tDescription goes here colors\tDescription goes here fonts\tDescription goes here videos\tDescription goes here sounds\tDescription goes here gameObjects\tDescription goes here cursors\tDescription goes here textures\tDescription goes here gradients\tDescription goes here","keywords":""},{"title":"ModuleAndNameKey","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/ModuleAndNameKey","content":"ModuleAndNameKey struct in EvolveUI Fields moduleName\tDescription goes here name\tDescription goes here# MethodsEquals\tDescription goes here GetHashCode\tDescription goes here ToString\tDescription goes here","keywords":""},{"title":"LongBoolMapEnumerator","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/LongBoolMapEnumerator","content":"LongBoolMapEnumerator struct in EvolveUI Methods GetEnumerator\tDescription goes here MoveNext\tDescription goes here","keywords":""},{"title":"LayoutResult","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/LayoutResult","content":"LayoutResult struct in EvolveUI Fields localPosition\tDescription goes here size\tDescription goes here border\tDescription goes here padding\tDescription goes here","keywords":""},{"title":"ModuleAssetSet","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/ModuleAssetSet","content":"ModuleAssetSet struct in EvolveUI Fields moduleName\tDescription goes here textureAssetReferences\tDescription goes here fontAssetReferences\tDescription goes here gradientAssetReferences\tDescription goes here cursorReferences\tDescription goes here videoAssets\tDescription goes here gameObjects\tDescription goes here sounds\tDescription goes here","keywords":""},{"title":"ModuleDependencyJSONType","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/ModuleDependencyJSONType","content":"ModuleDependencyJSONType struct in EvolveUI Fields alias\tDescription goes here autoImport\tDescription goes here guid\tDescription goes here","keywords":""},{"title":"MonoUtil","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/MonoUtil","content":"MonoUtil class in EvolveUI.Compiler","keywords":""},{"title":"MouseInputEvent","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/MouseInputEvent","content":"MouseInputEvent struct in EvolveUI Fields eventType\tDescription goes here modifiers\tDescription goes here elementId\tDescription goes here# MethodsConsume\tDescription goes here StopPropagation\tDescription goes here StopDragPropagation\tDescription goes here","keywords":""},{"title":"MouseButtonState","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/MouseButtonState","content":"MouseButtonState struct in EvolveUI.UIInput Fields mouseButtonType\tDescription goes here isDrag\tDescription goes here isUp\tDescription goes here isDown\tDescription goes here isUpThisFrame\tDescription goes here isDownThisFrame\tDescription goes here downTimestamp\tDescription goes here downPosition\tDescription goes here upPosition\tDescription goes here clickCount\tDescription goes here","keywords":""},{"title":"ModuleDependency","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/ModuleDependency","content":"ModuleDependency struct in EvolveUI Fields alias\tDescription goes here autoImport\tDescription goes here moduleReference\tDescription goes here","keywords":""},{"title":"MouseButtonType","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/MouseButtonType","content":"MouseButtonType enum in EvolveUI.UIInput Left Middle Right\t","keywords":""},{"title":"MouseAdapter","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/MouseAdapter","content":"MouseAdapter class in EvolveUI Fields clickDistanceThreshold\tDescription goes here clickThresholdSeconds\tDescription goes here# MethodsSetMouseState\tDescription goes here GetMouseState\tDescription goes here BeginDrag\tDescription goes here EndDrag\tDescription goes here","keywords":""},{"title":"MouseState","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/MouseState","content":"MouseState struct in EvolveUI.UIInput Fields leftMouseButtonState\tDescription goes here middleMouseButtonState\tDescription goes here rightMouseButtonState\tDescription goes here mousePosition\tDescription goes here previousMousePosition\tDescription goes here scrollDelta\tDescription goes here clickCount\tDescription goes here isDoubleClick\tDescription goes here isTripleClick\tDescription goes here isSingleClick\tDescription goes here# MethodsMouseDownDelta\tDescription goes here","keywords":""},{"title":"MouseEventType","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/MouseEventType","content":"MouseEventType enum in EvolveUI.UIInput Enter Exit Hover DragStart DragEnd DragCancel DragUpdate Click ButtonPress0 ButtonPress1 ButtonPress2 ScrollX ScrollY\t","keywords":""},{"title":"ModuleReference","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/ModuleReference","content":"ModuleReference class in EvolveUI","keywords":""},{"title":"MultiPointGesture","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/MultiPointGesture","content":"MultiPointGesture class in EvolveUI Fields isActive\tDescription goes here state\tDescription goes here initialPointerEvent\tDescription goes here requirements\tDescription goes here initialStateConstraints\tDescription goes here activeStateConstraints\tDescription goes here directions\tDescription goes here","keywords":""},{"title":"MultiPointGestureParameters","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/MultiPointGestureParameters","content":"MultiPointGestureParameters struct in EvolveUI Fields center\tDescription goes here vectorAngle\tDescription goes here rotationAngle\tDescription goes here distance\tDescription goes here relativeDistanceChange\tDescription goes here absoluteDistanceChange\tDescription goes here centerMovementVector\tDescription goes here pointerCount\tDescription goes here","keywords":""},{"title":"OnAfterDisableAttribute","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/OnAfterDisableAttribute","content":"OnAfterDisableAttribute class in EvolveUI","keywords":""},{"title":"OnAfterFinishAttribute","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/OnAfterFinishAttribute","content":"OnAfterFinishAttribute class in EvolveUI","keywords":""},{"title":"NativeWorkaround","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/NativeWorkaround","content":"NativeWorkaround class in EvolveUI.Slug","keywords":""},{"title":"MultiPointerConstraints","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/MultiPointerConstraints","content":"MultiPointerConstraints struct in EvolveUI Fields pointerCount\tDescription goes here centerMovement\tDescription goes here rotationAngle\tDescription goes here vectorAngle\tDescription goes here distance\tDescription goes here relativeDistanceChange\tDescription goes here absoluteDistanceChange\tDescription goes here# MethodsValidate\tDescription goes here","keywords":""},{"title":"OnAfterEarlyInputAttribute","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/OnAfterEarlyInputAttribute","content":"OnAfterEarlyInputAttribute class in EvolveUI","keywords":""},{"title":"OnAfterInputAttribute","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/OnAfterInputAttribute","content":"OnAfterInputAttribute class in EvolveUI","keywords":""},{"title":"OnAfterLateInputAttribute","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/OnAfterLateInputAttribute","content":"OnAfterLateInputAttribute class in EvolveUI","keywords":""},{"title":"OnAfterUpdateAttribute","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/OnAfterUpdateAttribute","content":"OnAfterUpdateAttribute class in EvolveUI","keywords":""},{"title":"OnAfterDestroyAttribute","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/OnAfterDestroyAttribute","content":"OnAfterDestroyAttribute class in EvolveUI","keywords":""},{"title":"OffsetRect","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/OffsetRect","content":"OffsetRect struct in EvolveUI.Util Fields top\tDescription goes here right\tDescription goes here bottom\tDescription goes here left\tDescription goes here","keywords":""},{"title":"OnBeforeDestroyAttribute","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/OnBeforeDestroyAttribute","content":"OnBeforeDestroyAttribute class in EvolveUI","keywords":""},{"title":"OnAfterEnableAttribute","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/OnAfterEnableAttribute","content":"OnAfterEnableAttribute class in EvolveUI","keywords":""},{"title":"OnBeforeEnableAttribute","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/OnBeforeEnableAttribute","content":"OnBeforeEnableAttribute class in EvolveUI","keywords":""},{"title":"OnBeforeCreateAttribute","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/OnBeforeCreateAttribute","content":"OnBeforeCreateAttribute class in EvolveUI","keywords":""},{"title":"OnBeforeDisableAttribute","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/OnBeforeDisableAttribute","content":"OnBeforeDisableAttribute class in EvolveUI","keywords":""},{"title":"OnAfterCreateAttribute","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/OnAfterCreateAttribute","content":"OnAfterCreateAttribute class in EvolveUI","keywords":""},{"title":"OnDragCreateAttribute","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/OnDragCreateAttribute","content":"OnDragCreateAttribute class in EvolveUI","keywords":""},{"title":"OnBeforeEarlyInputAttribute","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/OnBeforeEarlyInputAttribute","content":"OnBeforeEarlyInputAttribute class in EvolveUI","keywords":""},{"title":"OnDragDropAttribute","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/OnDragDropAttribute","content":"OnDragDropAttribute class in EvolveUI","keywords":""},{"title":"OnBeforeUpdateAttribute","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/OnBeforeUpdateAttribute","content":"OnBeforeUpdateAttribute class in EvolveUI","keywords":""},{"title":"OnBeforeLateInputAttribute","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/OnBeforeLateInputAttribute","content":"OnBeforeLateInputAttribute class in EvolveUI","keywords":""},{"title":"OnBeforeFinishAttribute","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/OnBeforeFinishAttribute","content":"OnBeforeFinishAttribute class in EvolveUI","keywords":""},{"title":"OnDragExitAttribute","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/OnDragExitAttribute","content":"OnDragExitAttribute class in EvolveUI","keywords":""},{"title":"OnBeforeInputAttribute","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/OnBeforeInputAttribute","content":"OnBeforeInputAttribute class in EvolveUI","keywords":""},{"title":"OnDragEnterAttribute","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/OnDragEnterAttribute","content":"OnDragEnterAttribute class in EvolveUI","keywords":""},{"title":"OnFocusLostAttribute","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/OnFocusLostAttribute","content":"OnFocusLostAttribute class in EvolveUI","keywords":""},{"title":"OnFocusGainedAttribute","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/OnFocusGainedAttribute","content":"OnFocusGainedAttribute class in EvolveUI","keywords":""},{"title":"OnDragHoverAttribute","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/OnDragHoverAttribute","content":"OnDragHoverAttribute class in EvolveUI","keywords":""},{"title":"OnDragMoveAttribute","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/OnDragMoveAttribute","content":"OnDragMoveAttribute class in EvolveUI","keywords":""},{"title":"OnDragCancelAttribute","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/OnDragCancelAttribute","content":"OnDragCancelAttribute class in EvolveUI","keywords":""},{"title":"OnKeyDownAttribute","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/OnKeyDownAttribute","content":"OnKeyDownAttribute class in EvolveUI","keywords":""},{"title":"OnKeyDownWithFocusAttribute","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/OnKeyDownWithFocusAttribute","content":"OnKeyDownWithFocusAttribute class in EvolveUI","keywords":""},{"title":"OnMouseEnterAttribute","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/OnMouseEnterAttribute","content":"OnMouseEnterAttribute class in EvolveUI","keywords":""},{"title":"OnKeyHeldDownWithFocusAttribute","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/OnKeyHeldDownWithFocusAttribute","content":"OnKeyHeldDownWithFocusAttribute class in EvolveUI","keywords":""},{"title":"OnMouseDownAttribute","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/OnMouseDownAttribute","content":"OnMouseDownAttribute class in EvolveUI","keywords":""},{"title":"OnMouseExitAttribute","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/OnMouseExitAttribute","content":"OnMouseExitAttribute class in EvolveUI","keywords":""},{"title":"OnMouseContextAttribute","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/OnMouseContextAttribute","content":"OnMouseContextAttribute class in EvolveUI","keywords":""},{"title":"OnKeyUpWithFocusAttribute","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/OnKeyUpWithFocusAttribute","content":"OnKeyUpWithFocusAttribute class in EvolveUI","keywords":""},{"title":"OnMouseHeldDownAttribute","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/OnMouseHeldDownAttribute","content":"OnMouseHeldDownAttribute class in EvolveUI","keywords":""},{"title":"OnKeyUpAttribute","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/OnKeyUpAttribute","content":"OnKeyUpAttribute class in EvolveUI","keywords":""},{"title":"OnMouseHoverAttribute","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/OnMouseHoverAttribute","content":"OnMouseHoverAttribute class in EvolveUI","keywords":""},{"title":"OnKeyHeldDownAttribute","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/OnKeyHeldDownAttribute","content":"OnKeyHeldDownAttribute class in EvolveUI","keywords":""},{"title":"OnMouseClickAttribute","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/OnMouseClickAttribute","content":"OnMouseClickAttribute class in EvolveUI","keywords":""},{"title":"OnMouseWheelAttribute","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/OnMouseWheelAttribute","content":"OnMouseWheelAttribute class in EvolveUI","keywords":""},{"title":"OnMouseUpAttribute","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/OnMouseUpAttribute","content":"OnMouseUpAttribute class in EvolveUI","keywords":""},{"title":"OnMouseMoveAttribute","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/OnMouseMoveAttribute","content":"OnMouseMoveAttribute class in EvolveUI","keywords":""},{"title":"OptionId","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/OptionId","content":"OptionId struct in EvolveUI.Style","keywords":""},{"title":"OnPropertyChanged","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/OnPropertyChanged","content":"OnPropertyChanged class in EvolveUI Fields propertyName\tDescription goes here","keywords":""},{"title":"OnMouseUpdateAttribute","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/OnMouseUpdateAttribute","content":"OnMouseUpdateAttribute class in EvolveUI","keywords":""},{"title":"OnTextInputAttribute","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/OnTextInputAttribute","content":"OnTextInputAttribute class in EvolveUI","keywords":""},{"title":"PainterId","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/PainterId","content":"PainterId struct in EvolveUI Methods Equals\tDescription goes here GetHashCode\tDescription goes here","keywords":""},{"title":"ParallelBatchSizes","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/ParallelBatchSizes","content":"ParallelBatchSizes struct in EvolveUI","keywords":""},{"title":"PanGesture2","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/PanGesture2","content":"PanGesture2 class in EvolveUI Fields swipeFinalSpeed\tDescription goes here region\tDescription goes here eventName\tDescription goes here isActive\tDescription goes here blocked\tDescription goes here# MethodsValidateBegin\tDescription goes here ValidateUpdate\tDescription goes here OnEnd\tDescription goes here","keywords":""},{"title":"PathUtil","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/PathUtil","content":"PathUtil class in EvolveUI.Util","keywords":""},{"title":"Pan","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/Pan","content":"Pan class in EvolveUI Fields swipeFinalSpeed\tDescription goes here isActive\tDescription goes here state\tDescription goes here initialPointerEvent\tDescription goes here requirements\tDescription goes here initialStateConstraints\tDescription goes here activeStateConstraints\tDescription goes here directions\tDescription goes here","keywords":""},{"title":"OrientedBounds","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/OrientedBounds","content":"OrientedBounds struct in EvolveUI.Layout Fields p0\tDescription goes here p1\tDescription goes here p2\tDescription goes here p3\tDescription goes here# MethodsContainsPoint\tDescription goes here","keywords":""},{"title":"PointerEvent","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/PointerEvent","content":"PointerEvent class in EvolveUI Fields timeStamp\tDescription goes here point\tDescription goes here pointerId\tDescription goes here phase\tDescription goes here","keywords":""},{"title":"Outline","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/Outline","content":"Outline struct in EvolveUI.Rendering Fields color\tDescription goes here width\tDescription goes here","keywords":""},{"title":"PinchGesture","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/PinchGesture","content":"PinchGesture class in EvolveUI Fields region\tDescription goes here eventName\tDescription goes here isActive\tDescription goes here blocked\tDescription goes here# MethodsValidateBegin\tDescription goes here","keywords":""},{"title":"ParallelParams","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/ParallelParams","content":"ParallelParams struct in Fields itemCount\tDescription goes here minBatchSize\tDescription goes here","keywords":""},{"title":"PolygonUtil","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/PolygonUtil","content":"PolygonUtil class in EvolveUI.Util","keywords":""},{"title":"PointerInput2","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/PointerInput2","content":"PointerInput2 struct in EvolveUI Fields pointerId\tDescription goes here phase\tDescription goes here isCancelled\tDescription goes here origin\tDescription goes here trendList\tDescription goes here trendVector\tDescription goes here currentTime\tDescription goes here startTime\tDescription goes here delta\tDescription goes here lifetimeVector\tDescription goes here trendingSpeed\tDescription goes here# MethodsGetTrendPoints\tDescription goes here","keywords":""},{"title":"PointerEvents","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/PointerEvents","content":"PointerEvents enum in EvolveUI Inherit Normal None\t","keywords":""},{"title":"PointerParameters","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/PointerParameters","content":"PointerParameters struct in EvolveUI Fields isMoving\tDescription goes here hasBeenMoved\tDescription goes here vector\tDescription goes here start\tDescription goes here delta\tDescription goes here finalSpeed\tDescription goes here speed\tDescription goes here startTime\tDescription goes here currentTime\tDescription goes here maximumSpeed\tDescription goes here currentSpeed\tDescription goes here averageSpeed\tDescription goes here traveledDistance\tDescription goes here duration\tDescription goes here endTimestamp\tDescription goes here centerMovementVector\tDescription goes here distanceChange\tDescription goes here relativeDistanceChange\tDescription goes here rotationAngle\tDescription goes here vectorAngle\tDescription goes here center\tDescription goes here","keywords":""},{"title":"ProjectionSetup","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/ProjectionSetup","content":"ProjectionSetup struct in EvolveUI Fields size\tDescription goes here fieldOfView\tDescription goes here isOrthographic\tDescription goes here isCameraProjectionMatrixFlipped\tDescription goes here viewMatrix\tDescription goes here projectionMatrix\tDescription goes here","keywords":""},{"title":"PointerConstraints","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/PointerConstraints","content":"PointerConstraints struct in EvolveUI Fields currentSpeed\tDescription goes here# MethodsValidate\tDescription goes here","keywords":""},{"title":"QueryId","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/QueryId","content":"QueryId struct in EvolveUI.Style Fields id\tDescription goes here# MethodsGetDebugDisplay\tDescription goes here","keywords":""},{"title":"PropertyId","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/PropertyId","content":"PropertyId struct in EvolveUI.Style Fields id\tDescription goes here index\tDescription goes here# MethodsEquals\tDescription goes here GetHashCode\tDescription goes here ToString\tDescription goes here","keywords":""},{"title":"PointerInput","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/PointerInput","content":"PointerInput class in EvolveUI Fields pointerId\tDescription goes here vectorTimespan\tDescription goes here initialPointerEvent\tDescription goes here currentPointerEvent\tDescription goes here recognizedEvents\tDescription goes here cancelled\tDescription goes here isActive\tDescription goes here liveParameters\tDescription goes here globalParameters\tDescription goes here# MethodsOnIde\tDescription goes here OnMove\tDescription goes here OnUp\tDescription goes here OnCancel\tDescription goes here OnIdle\tDescription goes here","keywords":""},{"title":"PropertyKeyInfoFlag","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/PropertyKeyInfoFlag","content":"PropertyKeyInfoFlag enum in EvolveUI.Style ContainsConst ContainsVariable ContainsMixinVariable ExplicitDefault ExplicitInherit AnimationCurrent Transitioned\t","keywords":""},{"title":"RenderFlags","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/RenderFlags","content":"RenderFlags enum in EvolveUI.Slug Multicolor SymmetricBands OpticalWeight SuperSampling LinearCurves Strokes Gradients PremultiplyCoverage PremultiplyInverseCoverage\t","keywords":""},{"title":"RenderInfoService","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/RenderInfoService","content":"RenderInfoService class in EvolveUI Methods set_HasElementsAtMouseThisFrame\tDescription goes here","keywords":""},{"title":"Overflow","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/Overflow","content":"Overflow enum in EvolveUI Visible Hidden\t","keywords":""},{"title":"ReflessCharSpan","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/ReflessCharSpan","content":"ReflessCharSpan struct in EvolveUI.Util Fields rangeStart\tDescription goes here rangeEnd\tDescription goes here# MethodsMakeLowerString\tDescription goes here","keywords":""},{"title":"QueuedKeyboardEvent","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/QueuedKeyboardEvent","content":"QueuedKeyboardEvent struct in EvolveUI Fields character\tDescription goes here modifiers\tDescription goes here commandName\tDescription goes here eventType\tDescription goes here keyCode\tDescription goes here# Methodsset_shift\tDescription goes here set_control\tDescription goes here set_alt\tDescription goes here set_command\tDescription goes here set_capsLock\tDescription goes here set_numeric\tDescription goes here Equals\tDescription goes here GetHashCode\tDescription goes here","keywords":""},{"title":"PropertyNameEntry","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/PropertyNameEntry","content":"PropertyNameEntry struct in EvolveUI.Style Fields propertyId\tDescription goes here loweredName\tDescription goes here# MethodsCompareTo\tDescription goes here","keywords":""},{"title":"RecognizerState","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/RecognizerState","content":"RecognizerState enum in EvolveUI Possible Began Changed Ended Recognized Cancelled Failed Blocked\t","keywords":""},{"title":"RandomVectorUtil","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/RandomVectorUtil","content":"RandomVectorUtil class in EvolveUI.Text","keywords":""},{"title":"ReadOnlyRunInfo","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/ReadOnlyRunInfo","content":"ReadOnlyRunInfo struct in EvolveUI Fields x\tDescription goes here y\tDescription goes here width\tDescription goes here height\tDescription goes here fontId\tDescription goes here fontSize\tDescription goes here","keywords":""},{"title":"ReadOnlyLineInfo","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/ReadOnlyLineInfo","content":"ReadOnlyLineInfo struct in EvolveUI Fields x\tDescription goes here y\tDescription goes here width\tDescription goes here height\tDescription goes here baseline\tDescription goes here","keywords":""},{"title":"PropertyParsers","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/PropertyParsers","content":"PropertyParsers class in EvolveUI.Style","keywords":""},{"title":"RecognizerOptions","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/RecognizerOptions","content":"RecognizerOptions struct in EvolveUI Fields enabled\tDescription goes here","keywords":""},{"title":"RevealDirection","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/RevealDirection","content":"RevealDirection enum in EvolveUI Clockwise CounterClockwise\t","keywords":""},{"title":"RectExtensions","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/RectExtensions","content":"RectExtensions class in EvolveUI.Extensions","keywords":""},{"title":"RenderTransform","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/RenderTransform","content":"RenderTransform struct in EvolveUI Methods Reset\tDescription goes here Rotate\tDescription goes here Translate\tDescription goes here Scale\tDescription goes here Skew\tDescription goes here Matrix\tDescription goes here Equals\tDescription goes here GetHashCode\tDescription goes here ToString\tDescription goes here GetElement\tDescription goes here ToStyleString\tDescription goes here","keywords":""},{"title":"RequiredField","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/RequiredField","content":"RequiredField class in EvolveUI","keywords":""},{"title":"RequiredAssetReferences","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/RequiredAssetReferences","content":"RequiredAssetReferences class in EvolveUI Fields buildAtlas\tDescription goes here gradientAssetBake\tDescription goes here indirectElement\tDescription goes here","keywords":""},{"title":"RevealInfo","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/RevealInfo","content":"RevealInfo struct in EvolveUI.Rendering Fields amount\tDescription goes here rotation\tDescription goes here offsetX\tDescription goes here offsetY\tDescription goes here radius\tDescription goes here","keywords":""},{"title":"RenderTransform2D","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/RenderTransform2D","content":"RenderTransform2D struct in EvolveUI Methods Rotate\tDescription goes here Translate\tDescription goes here Scale\tDescription goes here Skew\tDescription goes here Equals\tDescription goes here GetHashCode\tDescription goes here","keywords":""},{"title":"RichTextProcessor","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/RichTextProcessor","content":"RichTextProcessor class in EvolveUI.Text Methods RegisterTextEffect\tDescription goes here RegisterEffectType\tDescription goes here Process\tDescription goes here","keywords":""},{"title":"RichTextColor","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/RichTextColor","content":"RichTextColor struct in EvolveUI.Text Fields value\tDescription goes here type\tDescription goes here","keywords":""},{"title":"RotateInEffect","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/RotateInEffect","content":"RotateInEffect class in EvolveUI.Text Fields showDuration\tDescription goes here targetAngle\tDescription goes here animatorTime\tDescription goes here animatorDeltaTime\tDescription goes here effectIntensity\tDescription goes here# MethodsApplyRevealEffect\tDescription goes here","keywords":""},{"title":"RevealOrigin","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/RevealOrigin","content":"RevealOrigin enum in EvolveUI Origin360_Bottom Origin180_Bottom Origin90_BottomLeft OriginVertical_Bottom OriginHorizontal_Left Origin360_Right Origin180_Left Origin90_TopLeft OriginVertical_Top OriginHorizontal_Right Origin360_Top Origin180_Top Origin90_TopRight Origin360_Left Origin180_Right Origin90_BottomRight\t","keywords":""},{"title":"RenderTargetSettings","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/RenderTargetSettings","content":"RenderTargetSettings struct in EvolveUI Fields textureId\tDescription goes here clearColor\tDescription goes here clearFlags\tDescription goes here stencil\tDescription goes here depth\tDescription goes here view\tDescription goes here proj\tDescription goes here colorStoreAction\tDescription goes here colorLoadAction\tDescription goes here usePreviousMatrices\tDescription goes here","keywords":""},{"title":"RichTextStyleTarget","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/RichTextStyleTarget","content":"RichTextStyleTarget enum in EvolveUI.Text FaceDilate FaceTexture k_Face OutlineWidth OutlineSoftness OutlineColor k_Outline ShadowX ShadowY ShadowDilate ShadowSoftness ShadowColor k_Shadow k_CharacterSpacing\t","keywords":""},{"title":"RevealMode","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/RevealMode","content":"RevealMode enum in EvolveUI None Manual Radial90_TopLeft Radial90_TopRight Radial90_BottomRight Radial90_BottomLeft HorizontalSweepLeft HorizontalSweepRight VerticalSweepUp VerticalSweepDown RadialSweep Radial360_Bottom Radial360_Left Radial360_Right CenterExpand OffsetExpand\t","keywords":""},{"title":"RichTextTag","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/RichTextTag","content":"RichTextTag class in EvolveUI.Text Fields tagName\tDescription goes here","keywords":""},{"title":"RotateTextEffect","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/RotateTextEffect","content":"RotateTextEffect class in EvolveUI.Text Fields angleSpeed\tDescription goes here angleDiff\tDescription goes here animatorTime\tDescription goes here animatorDeltaTime\tDescription goes here effectIntensity\tDescription goes here# MethodsApplyDisplayEffect\tDescription goes here","keywords":""},{"title":"RunBinding","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/RunBinding","content":"RunBinding class in EvolveUI Fields bindingEvent\tDescription goes here","keywords":""},{"title":"RichTextStream","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/RichTextStream","content":"RichTextStream struct in EvolveUI.Text Methods PopColor\tDescription goes here","keywords":""},{"title":"SaveFileFn","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/SaveFileFn","content":"SaveFileFn class in EvolveUI Methods Invoke\tDescription goes here BeginInvoke\tDescription goes here EndInvoke\tDescription goes here","keywords":""},{"title":"RotationGesture","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/RotationGesture","content":"RotationGesture class in EvolveUI Fields region\tDescription goes here eventName\tDescription goes here isActive\tDescription goes here blocked\tDescription goes here# MethodsValidateBegin\tDescription goes here","keywords":""},{"title":"RichTextValue","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/RichTextValue","content":"RichTextValue struct in EvolveUI.Text Fields type\tDescription goes here floatValue\tDescription goes here intValue\tDescription goes here colorValue\tDescription goes here textureInfo\tDescription goes here","keywords":""},{"title":"ScopeId","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/ScopeId","content":"ScopeId struct in EvolveUI Methods Equals\tDescription goes here GetHashCode\tDescription goes here Reference\tDescription goes here","keywords":""},{"title":"Scrollable","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/Scrollable","content":"Scrollable struct in EvolveUI Fields scrollState\tDescription goes here element\tDescription goes here runtime\tDescription goes here# MethodsOnAfterCreate\tDescription goes here OnBeforeUpdate\tDescription goes here OnBeforeFinish\tDescription goes here OnMouseScroll\tDescription goes here","keywords":""},{"title":"RuntimeTraversalInfo","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/RuntimeTraversalInfo","content":"RuntimeTraversalInfo struct in EvolveUI Fields index\tDescription goes here lastChildIndex\tDescription goes here","keywords":""},{"title":"SelectionRange","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/SelectionRange","content":"SelectionRange struct in EvolveUI.Text Fields cursorIndex\tDescription goes here selectIndex\tDescription goes here# MethodsEquals\tDescription goes here GetHashCode\tDescription goes here","keywords":""},{"title":"ScrollState","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/ScrollState","content":"ScrollState class in EvolveUI Fields delta\tDescription goes here wheelScrollSpeed\tDescription goes here# Methodsset_ScrollAreaElement\tDescription goes here OffsetY\tDescription goes here OffsetX\tDescription goes here Offset\tDescription goes here SetDefaultHorizontalScrollProperties\tDescription goes here SetDefaultVerticalScrollProperties\tDescription goes here ScrollToTop\tDescription goes here ScrollToBottom\tDescription goes here SetOffsetY\tDescription goes here SetOffsetX\tDescription goes here","keywords":""},{"title":"ScrollDragEvent","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/ScrollDragEvent","content":"ScrollDragEvent class in EvolveUI Fields originPoint\tDescription goes here lockCursor\tDescription goes here cursor\tDescription goes here","keywords":""},{"title":"SDFTextStyle","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/SDFTextStyle","content":"SDFTextStyle struct in EvolveUI Fields faceDilate\tDescription goes here outlineSoftness\tDescription goes here outlineWidth\tDescription goes here glowOffset\tDescription goes here glowOuter\tDescription goes here glowInner\tDescription goes here glowPower\tDescription goes here underlayX\tDescription goes here underlayY\tDescription goes here underlayDilate\tDescription goes here underlaySoftness\tDescription goes here","keywords":""},{"title":"ScrollViewUIService","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/ScrollViewUIService","content":"ScrollViewUIService class in EvolveUI.BasicElements Fields verticalTrackStyle\tDescription goes here verticalHandleStyle\tDescription goes here horizontalTrackStyle\tDescription goes here horizontalHandleStyle\tDescription goes here# MethodsOnInitialize\tDescription goes here","keywords":""},{"title":"ScrollHandleHorizontal","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/ScrollHandleHorizontal","content":"ScrollHandleHorizontal struct in EvolveUI Fields scrollState\tDescription goes here element\tDescription goes here runtime\tDescription goes here# MethodsOnBeforeUpdate\tDescription goes here OnDragCreate\tDescription goes here OnDragMove\tDescription goes here","keywords":""},{"title":"ScopeMemberType","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/ScopeMemberType","content":"ScopeMemberType enum in EvolveUI Element Scope\t","keywords":""},{"title":"SequenceFlags","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/SequenceFlags","content":"SequenceFlags enum in EvolveUI.Slug GlyphComposition StandardLigatures RequiredLigatures DefaultMask DiscretionaryLigatures HistoricalLigatures AlternativeFractions\t","keywords":""},{"title":"ScrollHandleVertical","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/ScrollHandleVertical","content":"ScrollHandleVertical struct in EvolveUI Fields scrollState\tDescription goes here element\tDescription goes here runtime\tDescription goes here# MethodsOnBeforeUpdate\tDescription goes here OnDragCreate\tDescription goes here OnDragMove\tDescription goes here","keywords":""},{"title":"SerializedModuleData","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/SerializedModuleData","content":"SerializedModuleData class in EvolveUI Fields moduleAssetSet\tDescription goes here implicitNamespaces\tDescription goes here dependencies\tDescription goes here# MethodsGetJson\tDescription goes here","keywords":""},{"title":"SelectionEdge","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/SelectionEdge","content":"SelectionEdge enum in EvolveUI.Text Left Right\t","keywords":""},{"title":"ShaderPropertyType","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/ShaderPropertyType","content":"ShaderPropertyType enum in EvolveUI Color32 Color Float Int Buffer Texture FloatArray VectorArray Float2 Float3 Float4 Int2 Int3 Int4\t","keywords":""},{"title":"ShapeData","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/ShapeData","content":"ShapeData struct in EvolveUI.Rendering Fields bevel\tDescription goes here radius\tDescription goes here textFaceDilate\tDescription goes here textOutlineSoftness\tDescription goes here textUnderlayDilate\tDescription goes here textUnderlaySoftness\tDescription goes here textUnderlayX\tDescription goes here textUnderlayY\tDescription goes here","keywords":""},{"title":"ShaderId","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/ShaderId","content":"ShaderId struct in EvolveUI Methods Equals\tDescription goes here GetHashCode\tDescription goes here","keywords":""},{"title":"SerializedGradientAlphaKey","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/SerializedGradientAlphaKey","content":"SerializedGradientAlphaKey struct in EvolveUI Fields alpha\tDescription goes here time\tDescription goes here# MethodsToAlphaKey\tDescription goes here","keywords":""},{"title":"SerializedGradientColorKey","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/SerializedGradientColorKey","content":"SerializedGradientColorKey struct in EvolveUI Fields color\tDescription goes here time\tDescription goes here# MethodsToColorKey\tDescription goes here","keywords":""},{"title":"Size","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/Size","content":"Size struct in EvolveUI Fields width\tDescription goes here height\tDescription goes here# MethodsEquals\tDescription goes here GetHashCode\tDescription goes here ToString\tDescription goes here","keywords":""},{"title":"SingleTouchGesture","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/SingleTouchGesture","content":"SingleTouchGesture class in EvolveUI Fields region\tDescription goes here eventName\tDescription goes here isActive\tDescription goes here blocked\tDescription goes here","keywords":""},{"title":"ShakeTextEffect","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/ShakeTextEffect","content":"ShakeTextEffect class in EvolveUI.Text Fields shakeStrength\tDescription goes here shakeDelay\tDescription goes here animatorTime\tDescription goes here animatorDeltaTime\tDescription goes here effectIntensity\tDescription goes here# MethodsOnInitialize\tDescription goes here OnSetupFrame\tDescription goes here OnTeardownFrame\tDescription goes here ApplyDisplayEffect\tDescription goes here","keywords":""},{"title":"SizeTextEffect","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/SizeTextEffect","content":"SizeTextEffect class in EvolveUI.Text Fields waveSize\tDescription goes here amplitude\tDescription goes here frequency\tDescription goes here animatorTime\tDescription goes here animatorDeltaTime\tDescription goes here effectIntensity\tDescription goes here# MethodsApplyDisplayEffect\tDescription goes here","keywords":""},{"title":"SinglePointGesture","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/SinglePointGesture","content":"SinglePointGesture class in EvolveUI Fields isActive\tDescription goes here state\tDescription goes here initialPointerEvent\tDescription goes here requirements\tDescription goes here initialStateConstraints\tDescription goes here activeStateConstraints\tDescription goes here directions\tDescription goes here# MethodsGetEventData\tDescription goes here","keywords":""},{"title":"ShootInEffect","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/ShootInEffect","content":"ShootInEffect class in EvolveUI.Text Fields showDuration\tDescription goes here originDistance\tDescription goes here tintColor\tDescription goes here animatorTime\tDescription goes here animatorDeltaTime\tDescription goes here effectIntensity\tDescription goes here# MethodsPush\tDescription goes here OnInitialize\tDescription goes here OnAnimate\tDescription goes here","keywords":""},{"title":"SlugLoader","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/SlugLoader","content":"SlugLoader class in EvolveUI.Slug","keywords":""},{"title":"SlugLayoutSettings","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/SlugLayoutSettings","content":"SlugLayoutSettings struct in EvolveUI.Slug Fields maxWidth\tDescription goes here position\tDescription goes here fnPtr\tDescription goes here trimCount\tDescription goes here hardBreakCount\tDescription goes here softBreakCount\tDescription goes here","keywords":""},{"title":"SlugBox2D","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/SlugBox2D","content":"SlugBox2D struct in EvolveUI.Slug Fields min\tDescription goes here max\tDescription goes here","keywords":""},{"title":"SoAGeneratorGroup","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/SoAGeneratorGroup","content":"SoAGeneratorGroup class in EvolveUI.Util Fields groupName\tDescription goes here","keywords":""},{"title":"SlotWithoutParameters","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/SlotWithoutParameters","content":"SlotWithoutParameters class in EvolveUI","keywords":""},{"title":"SizeInt","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/SizeInt","content":"SizeInt struct in EvolveUI Fields width\tDescription goes here height\tDescription goes here","keywords":""},{"title":"SlideTextEffect","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/SlideTextEffect","content":"SlideTextEffect class in EvolveUI.Text Fields waveSize\tDescription goes here amplitude\tDescription goes here frequency\tDescription goes here animatorTime\tDescription goes here animatorDeltaTime\tDescription goes here effectIntensity\tDescription goes here# MethodsApplyDisplayEffect\tDescription goes here","keywords":""},{"title":"SlugFontFile","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/SlugFontFile","content":"SlugFontFile struct in EvolveUI.Slug Fields path\tDescription goes here","keywords":""},{"title":"SlugTextInfo","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/SlugTextInfo","content":"SlugTextInfo struct in EvolveUI.Slug Fields rootLayoutData\tDescription goes here textLength\tDescription goes here maxRenderedCharacters\tDescription goes here text\tDescription goes here textType\tDescription goes here layoutGlyphCount\tDescription goes here layoutLineCount\tDescription goes here placeholderCount\tDescription goes here usedFontCount\tDescription goes here totalVertexCount\tDescription goes here totalTriangleCount\tDescription goes here# MethodsGetVertices\tDescription goes here GetTriangles\tDescription goes here GetUsedFonts\tDescription goes here","keywords":""},{"title":"SlugLayoutData","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/SlugLayoutData","content":"SlugLayoutData struct in EvolveUI.Slug Fields fontType\tDescription goes here fontSize\tDescription goes here fontStretch\tDescription goes here textTracking\tDescription goes here textSkew\tDescription goes here textScale\tDescription goes here textOffset\tDescription goes here textColor\tDescription goes here textAlignment\tDescription goes here textLeading\tDescription goes here paragraphSpacing\tDescription goes here leftMargin\tDescription goes here rightMargin\tDescription goes here firstLineIndent\tDescription goes here tabSize\tDescription goes here tabRound\tDescription goes here layoutFlags\tDescription goes here renderFlags\tDescription goes here geometryType\tDescription goes here formatMask\tDescription goes here sequenceMask\tDescription goes here alternateMask\tDescription goes here styleIndex\tDescription goes here scriptLevel\tDescription goes here spaceCount\tDescription goes here spaceArray\tDescription goes here effectType\tDescription goes here effectOffset\tDescription goes here effectColor\tDescription goes here objectScale\tDescription goes here objectOffset\tDescription goes here clipLeft\tDescription goes here clipRight\tDescription goes here missingGlyphIndex\tDescription goes here defaultLayoutData\tDescription goes here","keywords":""},{"title":"SlugTest","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/SlugTest","content":"SlugTest class in EvolveUI Fields cam\tDescription goes here material\tDescription goes here releaseMode\tDescription goes here textLayout\tDescription goes here clipRight\tDescription goes here clipLeft\tDescription goes here fontId\tDescription goes here position\tDescription goes here newMaterial\tDescription goes here# MethodsMakePictureMesh\tDescription goes here","keywords":""},{"title":"StringDropdown","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/StringDropdown","content":"StringDropdown struct in EvolveUI.BasicElements Fields selectedIndex\tDescription goes here placeholder\tDescription goes here ShowingPlaceholder\tDescription goes here disabled\tDescription goes here isSelecting\tDescription goes here updateSelection\tDescription goes here options\tDescription goes here selectedValue\tDescription goes here# MethodsOnBeforeUpdate\tDescription goes here SelectItem\tDescription goes here OnMouseClick\tDescription goes here","keywords":""},{"title":"SortUtil","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/SortUtil","content":"SortUtil class in EvolveUI.Util","keywords":""},{"title":"SpaceCollapse","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/SpaceCollapse","content":"SpaceCollapse enum in EvolveUI None RemoveInner RemoveOuter Remove CollapseOuter CollapseInner Collapse\t","keywords":""},{"title":"SoundAssetReference","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/SoundAssetReference","content":"SoundAssetReference struct in EvolveUI Fields name\tDescription goes here clip\tDescription goes here","keywords":""},{"title":"SpaceDistributionUtil","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/SpaceDistributionUtil","content":"SpaceDistributionUtil class in EvolveUI.Layout","keywords":""},{"title":"Spring","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/Spring","content":"Spring struct in EvolveUI Fields stiffness\tDescription goes here damping\tDescription goes here invMass\tDescription goes here# MethodsAnimateReverse\tDescription goes here Animate\tDescription goes here AnimateTo\tDescription goes here ToString\tDescription goes here","keywords":""},{"title":"SpaceDistribution","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/SpaceDistribution","content":"SpaceDistribution enum in EvolveUI Default BeforeContent CenterContent AfterContent AroundContent BetweenContent\t","keywords":""},{"title":"StyleConditionEvaluator","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/StyleConditionEvaluator","content":"StyleConditionEvaluator class in EvolveUI Methods Invoke\tDescription goes here BeginInvoke\tDescription goes here EndInvoke\tDescription goes here","keywords":""},{"title":"SpringSimValue","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/SpringSimValue","content":"SpringSimValue struct in EvolveUI Fields velocity\tDescription goes here position\tDescription goes here target\tDescription goes here# MethodsSimulateToTarget\tDescription goes here Simulate\tDescription goes here","keywords":""},{"title":"StringUtil","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/StringUtil","content":"StringUtil class in EvolveUI.Util","keywords":""},{"title":"StickyHandler","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/StickyHandler","content":"StickyHandler class in EvolveUI.Layout","keywords":""},{"title":"StyleDefinition","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/StyleDefinition","content":"StyleDefinition struct in EvolveUI.Style Fields firstBucket\tDescription goes here styleId\tDescription goes here nameId\tDescription goes here","keywords":""},{"title":"StrokeJoinType","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/StrokeJoinType","content":"StrokeJoinType enum in EvolveUI.Slug Bevel Round\t","keywords":""},{"title":"StrokeCap","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/StrokeCap","content":"StrokeCap enum in EvolveUI.Slug Flat Round Square Triangle\t","keywords":""},{"title":"StringMemoizer","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/StringMemoizer","content":"StringMemoizer class in EvolveUI Fields frameId\tDescription goes here# MethodsMemoizeStringString\tDescription goes here MemoizeStringFloat\tDescription goes here MemoizeStringInt\tDescription goes here MemoizeStringByte\tDescription goes here MemoizeStringSByte\tDescription goes here MemoizeStringUInt\tDescription goes here MemoizeStringShort\tDescription goes here MemoizeStringUShort\tDescription goes here MemoizeStringChar\tDescription goes here MemoizeStringBool\tDescription goes here MemoizeStringLong\tDescription goes here MemoizeStringULong\tDescription goes here MemoizeStringBuffer\tDescription goes here MemoizeFloatString\tDescription goes here MemoizeFloatFloat\tDescription goes here MemoizeFloatInt\tDescription goes here MemoizeFloatByte\tDescription goes here MemoizeFloatSByte\tDescription goes here MemoizeFloatUInt\tDescription goes here MemoizeFloatShort\tDescription goes here MemoizeFloatUShort\tDescription goes here MemoizeFloatChar\tDescription goes here MemoizeFloatBool\tDescription goes here MemoizeFloatLong\tDescription goes here MemoizeFloatULong\tDescription goes here MemoizeFloatBuffer\tDescription goes here MemoizeIntString\tDescription goes here MemoizeIntFloat\tDescription goes here MemoizeIntInt\tDescription goes here MemoizeIntByte\tDescription goes here MemoizeIntSByte\tDescription goes here MemoizeIntUInt\tDescription goes here MemoizeIntShort\tDescription goes here MemoizeIntUShort\tDescription goes here MemoizeIntChar\tDescription goes here MemoizeIntBool\tDescription goes here MemoizeIntLong\tDescription goes here MemoizeIntULong\tDescription goes here MemoizeIntBuffer\tDescription goes here MemoizeByteString\tDescription goes here MemoizeByteFloat\tDescription goes here MemoizeByteInt\tDescription goes here MemoizeByteByte\tDescription goes here MemoizeByteSByte\tDescription goes here MemoizeByteUInt\tDescription goes here MemoizeByteShort\tDescription goes here MemoizeByteUShort\tDescription goes here MemoizeByteChar\tDescription goes here MemoizeByteBool\tDescription goes here MemoizeByteLong\tDescription goes here MemoizeByteULong\tDescription goes here MemoizeByteBuffer\tDescription goes here MemoizeSByteString\tDescription goes here MemoizeSByteFloat\tDescription goes here MemoizeSByteInt\tDescription goes here MemoizeSByteByte\tDescription goes here MemoizeSByteSByte\tDescription goes here MemoizeSByteUInt\tDescription goes here MemoizeSByteShort\tDescription goes here MemoizeSByteUShort\tDescription goes here MemoizeSByteChar\tDescription goes here MemoizeSByteBool\tDescription goes here MemoizeSByteLong\tDescription goes here MemoizeSByteULong\tDescription goes here MemoizeSByteBuffer\tDescription goes here MemoizeUIntString\tDescription goes here MemoizeUIntFloat\tDescription goes here MemoizeUIntInt\tDescription goes here MemoizeUIntByte\tDescription goes here MemoizeUIntSByte\tDescription goes here MemoizeUIntUInt\tDescription goes here MemoizeUIntShort\tDescription goes here MemoizeUIntUShort\tDescription goes here MemoizeUIntChar\tDescription goes here MemoizeUIntBool\tDescription goes here MemoizeUIntLong\tDescription goes here MemoizeUIntULong\tDescription goes here MemoizeUIntBuffer\tDescription goes here MemoizeShortString\tDescription goes here MemoizeShortFloat\tDescription goes here MemoizeShortInt\tDescription goes here MemoizeShortByte\tDescription goes here MemoizeShortSByte\tDescription goes here MemoizeShortUInt\tDescription goes here MemoizeShortShort\tDescription goes here MemoizeShortUShort\tDescription goes here MemoizeShortChar\tDescription goes here MemoizeShortBool\tDescription goes here MemoizeShortLong\tDescription goes here MemoizeShortULong\tDescription goes here MemoizeShortBuffer\tDescription goes here MemoizeUShortString\tDescription goes here MemoizeUShortFloat\tDescription goes here MemoizeUShortInt\tDescription goes here MemoizeUShortByte\tDescription goes here MemoizeUShortSByte\tDescription goes here MemoizeUShortUInt\tDescription goes here MemoizeUShortShort\tDescription goes here MemoizeUShortUShort\tDescription goes here MemoizeUShortChar\tDescription goes here MemoizeUShortBool\tDescription goes here MemoizeUShortLong\tDescription goes here MemoizeUShortULong\tDescription goes here MemoizeUShortBuffer\tDescription goes here MemoizeCharString\tDescription goes here MemoizeCharFloat\tDescription goes here MemoizeCharInt\tDescription goes here MemoizeCharByte\tDescription goes here MemoizeCharSByte\tDescription goes here MemoizeCharUInt\tDescription goes here MemoizeCharShort\tDescription goes here MemoizeCharUShort\tDescription goes here MemoizeCharChar\tDescription goes here MemoizeCharBool\tDescription goes here MemoizeCharLong\tDescription goes here MemoizeCharULong\tDescription goes here MemoizeCharBuffer\tDescription goes here MemoizeBoolString\tDescription goes here MemoizeBoolFloat\tDescription goes here MemoizeBoolInt\tDescription goes here MemoizeBoolByte\tDescription goes here MemoizeBoolSByte\tDescription goes here MemoizeBoolUInt\tDescription goes here MemoizeBoolShort\tDescription goes here MemoizeBoolUShort\tDescription goes here MemoizeBoolChar\tDescription goes here MemoizeBoolBool\tDescription goes here MemoizeBoolLong\tDescription goes here MemoizeBoolULong\tDescription goes here MemoizeBoolBuffer\tDescription goes here MemoizeLongString\tDescription goes here MemoizeLongFloat\tDescription goes here MemoizeLongInt\tDescription goes here MemoizeLongByte\tDescription goes here MemoizeLongSByte\tDescription goes here MemoizeLongUInt\tDescription goes here MemoizeLongShort\tDescription goes here MemoizeLongUShort\tDescription goes here MemoizeLongChar\tDescription goes here MemoizeLongBool\tDescription goes here MemoizeLongLong\tDescription goes here MemoizeLongULong\tDescription goes here MemoizeLongBuffer\tDescription goes here MemoizeULongString\tDescription goes here MemoizeULongFloat\tDescription goes here MemoizeULongInt\tDescription goes here MemoizeULongByte\tDescription goes here MemoizeULongSByte\tDescription goes here MemoizeULongUInt\tDescription goes here MemoizeULongShort\tDescription goes here MemoizeULongUShort\tDescription goes here MemoizeULongChar\tDescription goes here MemoizeULongBool\tDescription goes here MemoizeULongLong\tDescription goes here MemoizeULongULong\tDescription goes here MemoizeULongBuffer\tDescription goes here GarbageCollect\tDescription goes here MemoizeByte\tDescription goes here MemoizeSByte\tDescription goes here MemoizeFloat\tDescription goes here MemoizeLong\tDescription goes here MemoizeULong\tDescription goes here MemoizeDouble\tDescription goes here MemoizeChar\tDescription goes here MemoizeShort\tDescription goes here MemoizeUShort\tDescription goes here MemoizeInt\tDescription goes here MemoizeUInt\tDescription goes here MemoizeBool\tDescription goes here MemoizeEnum\tDescription goes here","keywords":""},{"title":"StyleMeta","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/StyleMeta","content":"StyleMeta struct in EvolveUI Fields styleName\tDescription goes here filePath\tDescription goes here# MethodsToString\tDescription goes here","keywords":""},{"title":"StringTagInfo","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/StringTagInfo","content":"StringTagInfo struct in EvolveUI.Text Fields lastTouched\tDescription goes here length\tDescription goes here capacity\tDescription goes here str\tDescription goes here# Methodsset_NextFreeIndex\tDescription goes here","keywords":""},{"title":"StyleStringUtil","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/StyleStringUtil","content":"StyleStringUtil class in EvolveUI","keywords":""},{"title":"StyleFileReference","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/StyleFileReference","content":"StyleFileReference class in EvolveUI Fields text\tDescription goes here","keywords":""},{"title":"SwingTextEffect","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/SwingTextEffect","content":"SwingTextEffect class in EvolveUI.Text Fields waveSize\tDescription goes here amplitude\tDescription goes here frequency\tDescription goes here animatorTime\tDescription goes here animatorDeltaTime\tDescription goes here effectIntensity\tDescription goes here# MethodsApplyDisplayEffect\tDescription goes here","keywords":""},{"title":"StyleId","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/StyleId","content":"StyleId struct in EvolveUI Methods ToString\tDescription goes here CompareTo\tDescription goes here Equals\tDescription goes here GetHashCode\tDescription goes here GetDebugDisplay\tDescription goes here","keywords":""},{"title":"StyleResult","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/StyleResult","content":"StyleResult struct in EvolveUI Methods ComputeCornerRadii\tDescription goes here ComputeCornerBevels\tDescription goes here","keywords":""},{"title":"StyleVariableId","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/StyleVariableId","content":"StyleVariableId struct in EvolveUI Methods Equals\tDescription goes here GetHashCode\tDescription goes here ToString\tDescription goes here","keywords":""},{"title":"StyleList","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/StyleList","content":"StyleList struct in EvolveUI.Style Methods ToArray\tDescription goes here ToList\tDescription goes here AddStyle\tDescription goes here RemoveStyle\tDescription goes here ToggleStyle\tDescription goes here","keywords":""},{"title":"TagId","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/TagId","content":"TagId struct in EvolveUI.Style Fields id\tDescription goes here","keywords":""},{"title":"TagNameAttribute","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/TagNameAttribute","content":"TagNameAttribute class in EvolveUI Fields moduleName\tDescription goes here tagName\tDescription goes here","keywords":""},{"title":"StyleState","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/StyleState","content":"StyleState enum in EvolveUI.Style Normal Hover Focus Active Init\t","keywords":""},{"title":"StylePropertyList","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/StylePropertyList","content":"StylePropertyList struct in EvolveUI.Style Methods SetAlignmentBoundaryX\tDescription goes here AnimateAlignmentBoundaryX\tDescription goes here SetAlignmentBoundaryY\tDescription goes here AnimateAlignmentBoundaryY\tDescription goes here SetAlignmentDirectionX\tDescription goes here AnimateAlignmentDirectionX\tDescription goes here SetAlignmentDirectionY\tDescription goes here AnimateAlignmentDirectionY\tDescription goes here SetAlignmentOffsetX\tDescription goes here AnimateAlignmentOffsetX\tDescription goes here SetAlignmentOffsetY\tDescription goes here AnimateAlignmentOffsetY\tDescription goes here SetAlignmentOriginX\tDescription goes here AnimateAlignmentOriginX\tDescription goes here SetAlignmentOriginY\tDescription goes here AnimateAlignmentOriginY\tDescription goes here SetAlignmentTargetX\tDescription goes here AnimateAlignmentTargetX\tDescription goes here SetAlignmentTargetY\tDescription goes here AnimateAlignmentTargetY\tDescription goes here SetAspectRatio\tDescription goes here AnimateAspectRatio\tDescription goes here SetBackgroundColor\tDescription goes here AnimateBackgroundColor\tDescription goes here SetBackgroundFit\tDescription goes here AnimateBackgroundFit\tDescription goes here SetBackgroundImage\tDescription goes here AnimateBackgroundImage\tDescription goes here SetBackgroundImageOffsetX\tDescription goes here AnimateBackgroundImageOffsetX\tDescription goes here SetBackgroundImageOffsetY\tDescription goes here AnimateBackgroundImageOffsetY\tDescription goes here SetBackgroundImageRotation\tDescription goes here AnimateBackgroundImageRotation\tDescription goes here SetBackgroundImageScaleX\tDescription goes here AnimateBackgroundImageScaleX\tDescription goes here SetBackgroundImageScaleY\tDescription goes here AnimateBackgroundImageScaleY\tDescription goes here SetBackgroundImageUVMirror\tDescription goes here AnimateBackgroundImageUVMirror\tDescription goes here SetBackgroundImageUVWrap\tDescription goes here AnimateBackgroundImageUVWrap\tDescription goes here SetBackgroundMode\tDescription goes here AnimateBackgroundMode\tDescription goes here SetBackgroundRectMaxX\tDescription goes here AnimateBackgroundRectMaxX\tDescription goes here SetBackgroundRectMaxY\tDescription goes here AnimateBackgroundRectMaxY\tDescription goes here SetBackgroundRectMinX\tDescription goes here AnimateBackgroundRectMinX\tDescription goes here SetBackgroundRectMinY\tDescription goes here AnimateBackgroundRectMinY\tDescription goes here SetBackgroundTint\tDescription goes here AnimateBackgroundTint\tDescription goes here SetBorderBottom\tDescription goes here AnimateBorderBottom\tDescription goes here SetBorderColor\tDescription goes here AnimateBorderColor\tDescription goes here SetBorderLeft\tDescription goes here AnimateBorderLeft\tDescription goes here SetBorderMode\tDescription goes here AnimateBorderMode\tDescription goes here SetBorderRight\tDescription goes here AnimateBorderRight\tDescription goes here SetBorderTop\tDescription goes here AnimateBorderTop\tDescription goes here SetClipBehavior\tDescription goes here AnimateClipBehavior\tDescription goes here SetClipBounds\tDescription goes here AnimateClipBounds\tDescription goes here SetCollapseSpaceHorizontal\tDescription goes here AnimateCollapseSpaceHorizontal\tDescription goes here SetCollapseSpaceVertical\tDescription goes here AnimateCollapseSpaceVertical\tDescription goes here SetCornerBevelBottomLeft\tDescription goes here AnimateCornerBevelBottomLeft\tDescription goes here SetCornerBevelBottomRight\tDescription goes here AnimateCornerBevelBottomRight\tDescription goes here SetCornerBevelTopLeft\tDescription goes here AnimateCornerBevelTopLeft\tDescription goes here SetCornerBevelTopRight\tDescription goes here AnimateCornerBevelTopRight\tDescription goes here SetCornerRadiusBottomLeft\tDescription goes here AnimateCornerRadiusBottomLeft\tDescription goes here SetCornerRadiusBottomRight\tDescription goes here AnimateCornerRadiusBottomRight\tDescription goes here SetCornerRadiusTopLeft\tDescription goes here AnimateCornerRadiusTopLeft\tDescription goes here SetCornerRadiusTopRight\tDescription goes here AnimateCornerRadiusTopRight\tDescription goes here SetCursor\tDescription goes here AnimateCursor\tDescription goes here SetDilate\tDescription goes here AnimateDilate\tDescription goes here SetFeather\tDescription goes here AnimateFeather\tDescription goes here SetGridItemX\tDescription goes here AnimateGridItemX\tDescription goes here SetGridItemY\tDescription goes here AnimateGridItemY\tDescription goes here SetGridLayoutColGap\tDescription goes here AnimateGridLayoutColGap\tDescription goes here SetGridLayoutDensity\tDescription goes here AnimateGridLayoutDensity\tDescription goes here SetGridLayoutRowGap\tDescription goes here AnimateGridLayoutRowGap\tDescription goes here SetGridMainAxisTemplate\tDescription goes here AnimateGridMainAxisTemplate\tDescription goes here SetGridOverflowAxisTemplate\tDescription goes here AnimateGridOverflowAxisTemplate\tDescription goes here SetLayer\tDescription goes here AnimateLayer\tDescription goes here SetLayoutBehavior\tDescription goes here AnimateLayoutBehavior\tDescription goes here SetLayoutDirection\tDescription goes here AnimateLayoutDirection\tDescription goes here SetLayoutFillOriginHorizontal\tDescription goes here AnimateLayoutFillOriginHorizontal\tDescription goes here SetLayoutFillOriginVertical\tDescription goes here AnimateLayoutFillOriginVertical\tDescription goes here SetLayoutPriority\tDescription goes here AnimateLayoutPriority\tDescription goes here SetLayoutType\tDescription goes here AnimateLayoutType\tDescription goes here SetMarginBottom\tDescription goes here AnimateMarginBottom\tDescription goes here SetMarginLeft\tDescription goes here AnimateMarginLeft\tDescription goes here SetMarginRight\tDescription goes here AnimateMarginRight\tDescription goes here SetMarginTop\tDescription goes here AnimateMarginTop\tDescription goes here SetMask\tDescription goes here AnimateMask\tDescription goes here SetMaskOffsetX\tDescription goes here AnimateMaskOffsetX\tDescription goes here SetMaskOffsetY\tDescription goes here AnimateMaskOffsetY\tDescription goes here SetMaskRotation\tDescription goes here AnimateMaskRotation\tDescription goes here SetMaskScaleX\tDescription goes here AnimateMaskScaleX\tDescription goes here SetMaskScaleY\tDescription goes here AnimateMaskScaleY\tDescription goes here SetMaskThreshold\tDescription goes here AnimateMaskThreshold\tDescription goes here SetMaxHeight\tDescription goes here AnimateMaxHeight\tDescription goes here SetMaxWidth\tDescription goes here AnimateMaxWidth\tDescription goes here SetMinHeight\tDescription goes here AnimateMinHeight\tDescription goes here SetMinWidth\tDescription goes here AnimateMinWidth\tDescription goes here SetOpacity\tDescription goes here AnimateOpacity\tDescription goes here SetOutlineColor\tDescription goes here AnimateOutlineColor\tDescription goes here SetOutlineWidth\tDescription goes here AnimateOutlineWidth\tDescription goes here SetOverflowX\tDescription goes here AnimateOverflowX\tDescription goes here SetOverflowY\tDescription goes here AnimateOverflowY\tDescription goes here SetPaddingBottom\tDescription goes here AnimatePaddingBottom\tDescription goes here SetPaddingLeft\tDescription goes here AnimatePaddingLeft\tDescription goes here SetPaddingRight\tDescription goes here AnimatePaddingRight\tDescription goes here SetPaddingTop\tDescription goes here AnimatePaddingTop\tDescription goes here SetPointerEvents\tDescription goes here AnimatePointerEvents\tDescription goes here SetPreferredHeight\tDescription goes here AnimatePreferredHeight\tDescription goes here SetPreferredWidth\tDescription goes here AnimatePreferredWidth\tDescription goes here SetRenderTransform\tDescription goes here AnimateRenderTransform\tDescription goes here SetRevealAmount\tDescription goes here AnimateRevealAmount\tDescription goes here SetRevealDirection\tDescription goes here AnimateRevealDirection\tDescription goes here SetRevealMode\tDescription goes here AnimateRevealMode\tDescription goes here SetRevealOffsetX\tDescription goes here AnimateRevealOffsetX\tDescription goes here SetRevealOffsetY\tDescription goes here AnimateRevealOffsetY\tDescription goes here SetRevealRadius\tDescription goes here AnimateRevealRadius\tDescription goes here SetRevealRotation\tDescription goes here AnimateRevealRotation\tDescription goes here SetShadowBlur\tDescription goes here AnimateShadowBlur\tDescription goes here SetShadowColor\tDescription goes here AnimateShadowColor\tDescription goes here SetShadowOffsetX\tDescription goes here AnimateShadowOffsetX\tDescription goes here SetShadowOffsetY\tDescription goes here AnimateShadowOffsetY\tDescription goes here SetShadowSpread\tDescription goes here AnimateShadowSpread\tDescription goes here SetSpaceBetweenHorizontal\tDescription goes here AnimateSpaceBetweenHorizontal\tDescription goes here SetSpaceBetweenVertical\tDescription goes here AnimateSpaceBetweenVertical\tDescription goes here SetTextAlignment\tDescription goes here AnimateTextAlignment\tDescription goes here SetTextCharacterSpacing\tDescription goes here AnimateTextCharacterSpacing\tDescription goes here SetTextColor\tDescription goes here AnimateTextColor\tDescription goes here SetTextFaceDilate\tDescription goes here AnimateTextFaceDilate\tDescription goes here SetTextFontAsset\tDescription goes here AnimateTextFontAsset\tDescription goes here SetTextFontSize\tDescription goes here AnimateTextFontSize\tDescription goes here SetTextFontStyle\tDescription goes here AnimateTextFontStyle\tDescription goes here SetTextLineHeight\tDescription goes here AnimateTextLineHeight\tDescription goes here SetTextMaxLineCount\tDescription goes here AnimateTextMaxLineCount\tDescription goes here SetTextOutlineColor\tDescription goes here AnimateTextOutlineColor\tDescription goes here SetTextOutlineSoftness\tDescription goes here AnimateTextOutlineSoftness\tDescription goes here SetTextOutlineWidth\tDescription goes here AnimateTextOutlineWidth\tDescription goes here SetTextOverflow\tDescription goes here AnimateTextOverflow\tDescription goes here SetTextSelectionCaretColor\tDescription goes here AnimateTextSelectionCaretColor\tDescription goes here SetTextSelectionColor\tDescription goes here AnimateTextSelectionColor\tDescription goes here SetTextSelectionHighlightColor\tDescription goes here AnimateTextSelectionHighlightColor\tDescription goes here SetTextTransform\tDescription goes here AnimateTextTransform\tDescription goes here SetTextUnderlayColor\tDescription goes here AnimateTextUnderlayColor\tDescription goes here SetTextUnderlayDilate\tDescription goes here AnimateTextUnderlayDilate\tDescription goes here SetTextUnderlaySoftness\tDescription goes here AnimateTextUnderlaySoftness\tDescription goes here SetTextUnderlayX\tDescription goes here AnimateTextUnderlayX\tDescription goes here SetTextUnderlayY\tDescription goes here AnimateTextUnderlayY\tDescription goes here SetTextVerticalAlignment\tDescription goes here AnimateTextVerticalAlignment\tDescription goes here SetTextWhitespaceMode\tDescription goes here AnimateTextWhitespaceMode\tDescription goes here SetTextWordSpacing\tDescription goes here AnimateTextWordSpacing\tDescription goes here SetTransformPivotX\tDescription goes here AnimateTransformPivotX\tDescription goes here SetTransformPivotY\tDescription goes here AnimateTransformPivotY\tDescription goes here SetVisibility\tDescription goes here AnimateVisibility\tDescription goes here SetZIndex\tDescription goes here AnimateZIndex\tDescription goes here RemoveProperty\tDescription goes here SetAlignmentDirection\tDescription goes here SetAlignmentBoundary\tDescription goes here SetAlignmentTarget\tDescription goes here SetAlignmentOrigin\tDescription goes here SetAlignmentOffset\tDescription goes here","keywords":""},{"title":"TeleportRenderInfo","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/TeleportRenderInfo","content":"TeleportRenderInfo struct in EvolveUI Fields portalId\tDescription goes here context\tDescription goes here didRender\tDescription goes here","keywords":""},{"title":"TeleportBehavior","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/TeleportBehavior","content":"TeleportBehavior enum in EvolveUI Default AlwaysRender SearchForwards SearchBackwards SearchWrap LastMatch\t","keywords":""},{"title":"Texel32","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/Texel32","content":"Texel32 struct in EvolveUI.Slug Fields x\tDescription goes here y\tDescription goes here z\tDescription goes here w\tDescription goes here","keywords":""},{"title":"TemplateFileReference","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/TemplateFileReference","content":"TemplateFileReference class in EvolveUI Fields text\tDescription goes here","keywords":""},{"title":"TestApplication","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/TestApplication","content":"TestApplication class in EvolveUI Fields camera\tDescription goes here convertColorsToLinearColorSpace\tDescription goes here respectSafeArea\tDescription goes here# MethodsRender\tDescription goes here","keywords":""},{"title":"TextAlignmentVertical","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/TextAlignmentVertical","content":"TextAlignmentVertical enum in EvolveUI Baseline Top Bottom Center\t","keywords":""},{"title":"TextEditor","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/TextEditor","content":"TextEditor struct in EvolveUI.Text","keywords":""},{"title":"TextEditParameters","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/TextEditParameters","content":"TextEditParameters struct in EvolveUI.Text Fields placeholder\tDescription goes here clearOnEscape\tDescription goes here isMultiLine\tDescription goes here characterFilter\tDescription goes here isPasswordField\tDescription goes here maxCharacters\tDescription goes here validateInput\tDescription goes here keyHandler\tDescription goes here ignoredEditOps\tDescription goes here enterSubmits\tDescription goes here showingPlaceholder\tDescription goes here","keywords":""},{"title":"TextEditOperation","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/TextEditOperation","content":"TextEditOperation enum in EvolveUI MoveLeft MoveRight MoveUp MoveDown MoveLineStart MoveLineEnd MoveTextStart MoveTextEnd MovePageUp MovePageDown MoveGraphicalLineStart MoveGraphicalLineEnd MoveWordLeft MoveWordRight MoveToStartOfNextWord MoveToEndOfPreviousWord SelectLeft SelectRight SelectUp SelectDown SelectTextStart SelectTextEnd SelectPageUp SelectPageDown ExpandSelectGraphicalLineStart ExpandSelectGraphicalLineEnd SelectGraphicalLineStart SelectGraphicalLineEnd SelectWordLeft SelectWordRight SelectToEndOfPreviousWord SelectToStartOfNextWord Delete Backspace DeleteWordBack DeleteWordForward Cut Copy Paste SelectAll SelectNone SelectCurrentWord SelectCurrentParagraph\t","keywords":""},{"title":"TextEditCompanion","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/TextEditCompanion","content":"TextEditCompanion struct in EvolveUI Fields runtime\tDescription goes here textReference\tDescription goes here element\tDescription goes here doubleClickSelectWord\tDescription goes here tripleClickSelectLine\tDescription goes here passwordCharacter\tDescription goes here isEditing\tDescription goes here onSubmit\tDescription goes here parameters\tDescription goes here placeholder\tDescription goes here# MethodsOnBeforeUpdate\tDescription goes here OnTextInput\tDescription goes here OnMouseClick\tDescription goes here OnDragCreate\tDescription goes here OnDragMove\tDescription goes here","keywords":""},{"title":"TextGlowStyle","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/TextGlowStyle","content":"TextGlowStyle struct in EvolveUI Fields glowOffset\tDescription goes here glowOuter\tDescription goes here glowInner\tDescription goes here glowPower\tDescription goes here glowColor\tDescription goes here","keywords":""},{"title":"TextAlignment","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/TextAlignment","content":"TextAlignment enum in EvolveUI Left Right Center\t","keywords":""},{"title":"Texel16","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/Texel16","content":"Texel16 struct in EvolveUI.Slug Fields x\tDescription goes here y\tDescription goes here z\tDescription goes here w\tDescription goes here","keywords":""},{"title":"TextDrawLayer","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/TextDrawLayer","content":"TextDrawLayer enum in EvolveUI Background Selection UnderlayDecoration OverlayDecoration Foreground\t","keywords":""},{"title":"TextId","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/TextId","content":"TextId struct in EvolveUI","keywords":""},{"title":"TextDisplayEffect","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/TextDisplayEffect","content":"TextDisplayEffect class in EvolveUI.Text Fields animatorTime\tDescription goes here animatorDeltaTime\tDescription goes here effectIntensity\tDescription goes here# MethodsOnLayoutTick\tDescription goes here OnDisplayTick\tDescription goes here ApplyDisplayEffect\tDescription goes here","keywords":""},{"title":"TextOverflow","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/TextOverflow","content":"TextOverflow enum in EvolveUI None Truncate Ellipsis\t","keywords":""},{"title":"TextInputResult","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/TextInputResult","content":"TextInputResult enum in EvolveUI.Text None Processed Submit\t","keywords":""},{"title":"TextFaceStyle","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/TextFaceStyle","content":"TextFaceStyle struct in EvolveUI Fields faceDilate\tDescription goes here faceScroll\tDescription goes here faceColor\tDescription goes here faceTexture\tDescription goes here","keywords":""},{"title":"TextLayoutSettings","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/TextLayoutSettings","content":"TextLayoutSettings struct in EvolveUI.Text Fields verticalAlignment\tDescription goes here fontStyle\tDescription goes here alignment\tDescription goes here whitespaceMode\tDescription goes here overflow\tDescription goes here textTransform\tDescription goes here fontAssetId\tDescription goes here fontSize\tDescription goes here lineHeight\tDescription goes here characterSpacing\tDescription goes here wordSpacing\tDescription goes here lineStartInset\tDescription goes here lineEndInset\tDescription goes here maxLineCount\tDescription goes here","keywords":""},{"title":"TextReference","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/TextReference","content":"TextReference struct in EvolveUI Fields elementId\tDescription goes here# MethodsBeginEditing\tDescription goes here EndEditing\tDescription goes here SetSelectionCursorFromPosition\tDescription goes here SetCursorFromPosition\tDescription goes here SetPasswordMode\tDescription goes here SetEditMode\tDescription goes here SetText\tDescription goes here GetText\tDescription goes here","keywords":""},{"title":"TextQuad","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/TextQuad","content":"TextQuad struct in EvolveUI Fields bottomLeft\tDescription goes here bottomRight\tDescription goes here topRight\tDescription goes here topLeft\tDescription goes here# MethodsMove\tDescription goes here SetColor\tDescription goes here Rotate\tDescription goes here LerpUnclamped\tDescription goes here LerpUnclampedColors\tDescription goes here","keywords":""},{"title":"TextOutlineStyle","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/TextOutlineStyle","content":"TextOutlineStyle struct in EvolveUI Fields outlineSoftness\tDescription goes here outlineWidth\tDescription goes here outlineScroll\tDescription goes here outlineTexture\tDescription goes here outlineColor\tDescription goes here","keywords":""},{"title":"TextInputEvent","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/TextInputEvent","content":"TextInputEvent struct in EvolveUI Fields events\tDescription goes here","keywords":""},{"title":"TextRevealEffect","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/TextRevealEffect","content":"TextRevealEffect class in EvolveUI.Text Fields animatorTime\tDescription goes here animatorDeltaTime\tDescription goes here effectIntensity\tDescription goes here# MethodsOnRevealTick\tDescription goes here ApplyRevealEffect\tDescription goes here","keywords":""},{"title":"TextShadowStyle","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/TextShadowStyle","content":"TextShadowStyle struct in EvolveUI Fields shadowX\tDescription goes here shadowY\tDescription goes here shadowDilate\tDescription goes here shadowSoftness\tDescription goes here shadowColor\tDescription goes here","keywords":""},{"title":"TextSpanStyle","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/TextSpanStyle","content":"TextSpanStyle struct in EvolveUI.Text Fields spanId\tDescription goes here styleOverride\tDescription goes here","keywords":""},{"title":"TextLineInfo","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/TextLineInfo","content":"TextLineInfo struct in EvolveUI.Text Fields x\tDescription goes here y\tDescription goes here width\tDescription goes here height\tDescription goes here maxWidth\tDescription goes here runStart\tDescription goes here runCount\tDescription goes here alignment\tDescription goes here whitespaceMode\tDescription goes here","keywords":""},{"title":"TextType","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/TextType","content":"TextType enum in EvolveUI SingleLine MultiLine Assembled\t","keywords":""},{"title":"TextScript","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/TextScript","content":"TextScript enum in EvolveUI.Text Normal SubScript SuperScript\t","keywords":""},{"title":"TextureAssetReferenceJsonType","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/TextureAssetReferenceJsonType","content":"TextureAssetReferenceJsonType struct in EvolveUI Fields assetId\tDescription goes here guid\tDescription goes here borderLeft\tDescription goes here borderRight\tDescription goes here borderTop\tDescription goes here borderBottom\tDescription goes here","keywords":""},{"title":"TextTransform","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/TextTransform","content":"TextTransform enum in EvolveUI None UpperCase LowerCase SmallCaps TitleCase\t","keywords":""},{"title":"TextureAssetReference","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/TextureAssetReference","content":"TextureAssetReference struct in EvolveUI Fields assetId\tDescription goes here texture\tDescription goes here borderLeft\tDescription goes here borderRight\tDescription goes here borderTop\tDescription goes here borderBottom\tDescription goes here","keywords":""},{"title":"TextureInfo","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/TextureInfo","content":"TextureInfo struct in EvolveUI Methods Equals\tDescription goes here GetHashCode\tDescription goes here","keywords":""},{"title":"TextStyle","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/TextStyle","content":"TextStyle struct in EvolveUI Fields faceDilate\tDescription goes here outlineSoftness\tDescription goes here outlineWidth\tDescription goes here invertHorizontal\tDescription goes here invertVertical\tDescription goes here useInnerShadow\tDescription goes here glowOffset\tDescription goes here glowOuter\tDescription goes here glowInner\tDescription goes here glowPower\tDescription goes here shadowX\tDescription goes here shadowY\tDescription goes here shadowDilate\tDescription goes here shadowSoftness\tDescription goes here faceColor\tDescription goes here outlineColor\tDescription goes here glowColor\tDescription goes here shadowColor\tDescription goes here faceScroll\tDescription goes here outlineScroll\tDescription goes here","keywords":""},{"title":"TextSelectDragEvent","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/TextSelectDragEvent","content":"TextSelectDragEvent class in EvolveUI Fields lockCursor\tDescription goes here cursor\tDescription goes here# MethodsOnComplete\tDescription goes here","keywords":""},{"title":"TextStyleOverride","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/TextStyleOverride","content":"TextStyleOverride struct in EvolveUI Fields faceDilate\tDescription goes here outlineSoftness\tDescription goes here outlineWidth\tDescription goes here faceScroll\tDescription goes here outlineScroll\tDescription goes here invertHorizontal\tDescription goes here invertVertical\tDescription goes here useInnerShadow\tDescription goes here glowOffset\tDescription goes here glowOuter\tDescription goes here glowInner\tDescription goes here glowPower\tDescription goes here shadowX\tDescription goes here shadowY\tDescription goes here shadowDilate\tDescription goes here shadowSoftness\tDescription goes here","keywords":""},{"title":"TextureBorderSizes","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/TextureBorderSizes","content":"TextureBorderSizes struct in EvolveUI.Rendering Fields left\tDescription goes here right\tDescription goes here top\tDescription goes here bottom\tDescription goes here","keywords":""},{"title":"TextVertex","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/TextVertex","content":"TextVertex struct in EvolveUI Fields position\tDescription goes here color\tDescription goes here faceUv\tDescription goes here","keywords":""},{"title":"TextureSize","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/TextureSize","content":"TextureSize struct in EvolveUI Fields borderLeft\tDescription goes here borderRight\tDescription goes here borderTop\tDescription goes here borderBottom\tDescription goes here slice\tDescription goes here channelMask\tDescription goes here x\tDescription goes here y\tDescription goes here width\tDescription goes here height\tDescription goes here","keywords":""},{"title":"TraversalInfo","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/TraversalInfo","content":"TraversalInfo struct in EvolveUI Fields depth\tDescription goes here viewIndex\tDescription goes here ftbIndex\tDescription goes here btfIndex\tDescription goes here# MethodsIsDescendentOf\tDescription goes here IsSelfOrDescendentOf\tDescription goes here IsAncestorOf\tDescription goes here IsParentOf\tDescription goes here IsChildOf\tDescription goes here IsTemplateChildOf\tDescription goes here IsLaterInHierarchy\tDescription goes here","keywords":""},{"title":"TimeMeasurement","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/TimeMeasurement","content":"TimeMeasurement struct in EvolveUI Fields value\tDescription goes here unit\tDescription goes here# MethodsToString\tDescription goes here Equals\tDescription goes here GetHashCode\tDescription goes here ToMilliseconds\tDescription goes here ToPercentage\tDescription goes here","keywords":""},{"title":"TextureRelativeSizeUnit","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/TextureRelativeSizeUnit","content":"TextureRelativeSizeUnit enum in EvolveUI Percent Pixel ImageWidth ImageHeight ImageCenterWidth ImageCenterHeight BorderLeft BorderRight BorderTop BorderBottom\t","keywords":""},{"title":"TextureRelativeSize","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/TextureRelativeSize","content":"TextureRelativeSize struct in EvolveUI Fields value\tDescription goes here unit\tDescription goes here# MethodsEquals\tDescription goes here GetHashCode\tDescription goes here ToStyleString\tDescription goes here","keywords":""},{"title":"TextureSampleMode","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/TextureSampleMode","content":"TextureSampleMode enum in EvolveUI.Rendering Default NineSlice LinearGradient RadialGradient EllipticalGradient ConicGradient SoftMask HardMask SoftMaskInverse HardMaskInverse\t","keywords":""},{"title":"TimedPointer","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/TimedPointer","content":"TimedPointer struct in EvolveUI Fields timestamp\tDescription goes here position\tDescription goes here","keywords":""},{"title":"TwoFingerPan","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/TwoFingerPan","content":"TwoFingerPan class in EvolveUI Fields region\tDescription goes here eventName\tDescription goes here isActive\tDescription goes here blocked\tDescription goes here# MethodsValidateBegin\tDescription goes here ValidateUpdate\tDescription goes here","keywords":""},{"title":"TextureInversion","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/TextureInversion","content":"TextureInversion enum in EvolveUI None Horizontal Vertical Both\t","keywords":""},{"title":"TwoPointGesture","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/TwoPointGesture","content":"TwoPointGesture class in EvolveUI Fields region\tDescription goes here eventName\tDescription goes here isActive\tDescription goes here blocked\tDescription goes here# MethodsValidateUpdate\tDescription goes here","keywords":""},{"title":"TextWrapper","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/TextWrapper","content":"TextWrapper struct in EvolveUI.Slug Fields slugTextInfo\tDescription goes here# MethodsSetFont\tDescription goes here SetText\tDescription goes here Dispose\tDescription goes here GetUsedFonts\tDescription goes here GetVertices\tDescription goes here GetTriangles\tDescription goes here","keywords":""},{"title":"TextureTransform","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/TextureTransform","content":"TextureTransform struct in EvolveUI.Rendering Fields offset\tDescription goes here scale\tDescription goes here rotation\tDescription goes here","keywords":""},{"title":"Triangle","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/Triangle","content":"Triangle struct in EvolveUI.Slug Fields t0\tDescription goes here t1\tDescription goes here t2\tDescription goes here","keywords":""},{"title":"Tween","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/Tween","content":"Tween class in EvolveUI","keywords":""},{"title":"TypeNameGenerator","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/TypeNameGenerator","content":"TypeNameGenerator class in EvolveUI.Compiler","keywords":""},{"title":"TouchInputEvent","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/TouchInputEvent","content":"TouchInputEvent struct in EvolveUI Fields eventType\tDescription goes here modifiers\tDescription goes here elementId\tDescription goes here# MethodsConsume\tDescription goes here StopPropagation\tDescription goes here","keywords":""},{"title":"TypeWriter","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/TypeWriter","content":"TypeWriter class in EvolveUI.Text Fields defaultPauseTime\tDescription goes here charactersPerSecond\tDescription goes here onComplete\tDescription goes here onStart\tDescription goes here onPause\tDescription goes here","keywords":""},{"title":"TTEMPLATE","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/TTEMPLATE","content":"TTEMPLATE struct in EvolveUI.Style Methods Equals\tDescription goes here GetHashCode\tDescription goes here","keywords":""},{"title":"TypeExtensions","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/TypeExtensions","content":"TypeExtensions class in EvolveUI.Extensions","keywords":""},{"title":"UIApplication","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/UIApplication","content":"UIApplication class in EvolveUI Fields camera\tDescription goes here convertColorsToLinearColorSpace\tDescription goes here respectSafeArea\tDescription goes here# Methodsset_DPIScaleFactor\tDescription goes here SetAsDebugApplication\tDescription goes here SetSize\tDescription goes here SetMouseAdapter\tDescription goes here SetKeyboardAdapter\tDescription goes here EnterSelectMode\tDescription goes here ExitSelectMode\tDescription goes here GetTag\tDescription goes here Dispose\tDescription goes here Update\tDescription goes here UpdateEditor\tDescription goes here add_onBeginUIFrame\tDescription goes here remove_onBeginUIFrame\tDescription goes here add_onEndUIFrame\tDescription goes here remove_onEndUIFrame\tDescription goes here GetRuntime\tDescription goes here HasElementsAtMouse\tDescription goes here SetService\tDescription goes here RenderHeadless\tDescription goes here GetPickedElements\tDescription goes here GetStyleMeta\tDescription goes here EnableClearSettings\tDescription goes here DisableClearSettings\tDescription goes here Render\tDescription goes here IsElementAlive\tDescription goes here SetEnumVariable\tDescription goes here RemoveEnumVariable\tDescription goes here SetValueVariable\tDescription goes here RemoveValueVariable\tDescription goes here SetStyleCondition\tDescription goes here RemoveStyleCondition\tDescription goes here SetColorVariable\tDescription goes here RemoveColorVariable\tDescription goes here ResetCommandBuffer\tDescription goes here SetCommandBuffer\tDescription goes here GetCommandBuffer\tDescription goes here CreateView\tDescription goes here GetOrthoProjectionSetup\tDescription goes here SetCamera\tDescription goes here SetRootViewData\tDescription goes here FindView\tDescription goes here AnyElementFocused\tDescription goes here","keywords":""},{"title":"UIAssetManager","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/UIAssetManager","content":"UIAssetManager class in EvolveUI Methods Dispose\tDescription goes here GetVideoClip\tDescription goes here GetGameObject\tDescription goes here ResolveTexture\tDescription goes here PackDebug\tDescription goes here GetFontAsset\tDescription goes here GetTextureInfo\tDescription goes here GetTexture\tDescription goes here TryResolveFontId\tDescription goes here GetCursorInfo\tDescription goes here GetDefaultCursorAsset\tDescription goes here GetCursorAsset\tDescription goes here GetTextureSize\tDescription goes here DereferenceAsset\tDescription goes here RegisterTexture\tDescription goes here UnregisterTexture\tDescription goes here","keywords":""},{"title":"UIDefaultUntypedContainer","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/UIDefaultUntypedContainer","content":"UIDefaultUntypedContainer class in EvolveUI","keywords":""},{"title":"UIAngle","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/UIAngle","content":"UIAngle struct in EvolveUI Fields value\tDescription goes here unit\tDescription goes here# MethodsToDegrees\tDescription goes here ToRadians\tDescription goes here ToPercent\tDescription goes here Equals\tDescription goes here GetHashCode\tDescription goes here ToString\tDescription goes here ToStyleString\tDescription goes here","keywords":""},{"title":"TypeWriterState","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/TypeWriterState","content":"TypeWriterState struct in EvolveUI.Text Fields glyphMarker\tDescription goes here onGlyphRevealed\tDescription goes here elapsedRevealTime\tDescription goes here elapsedRevealDelayTime\tDescription goes here targetRevealDelayTime\tDescription goes here skipReveal\tDescription goes here# MethodsResume\tDescription goes here Pause\tDescription goes here RevealNow\tDescription goes here","keywords":""},{"title":"UIAngleUnit","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/UIAngleUnit","content":"UIAngleUnit enum in EvolveUI Percent Degrees Radians\t","keywords":""},{"title":"UIDefaultUntypedTemplate","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/UIDefaultUntypedTemplate","content":"UIDefaultUntypedTemplate class in EvolveUI","keywords":""},{"title":"UIFixedUnit","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/UIFixedUnit","content":"UIFixedUnit enum in EvolveUI Unset Em Percent Pixel ViewportWidth ViewportHeight\t","keywords":""},{"title":"UIContainerElement","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/UIContainerElement","content":"UIContainerElement class in EvolveUI.Elements","keywords":""},{"title":"UIElement","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/UIElement","content":"UIElement class in EvolveUI Methods OnCreate\tDescription goes here OnUpdate\tDescription goes here OnPostUpdate\tDescription goes here OnEnable\tDescription goes here OnDisable\tDescription goes here OnDestroy\tDescription goes here ToString\tDescription goes here CreateGraph\tDescription goes here ToggleAttribute\tDescription goes here SetAttributeEnum\tDescription goes here SetAttribute\tDescription goes here TryGetAttribute\tDescription goes here GetAttribute\tDescription goes here HasAttribute\tDescription goes here GetCompanion\tDescription goes here GetLayoutSize\tDescription goes here GetLayoutBorders\tDescription goes here GetLayoutPaddings\tDescription goes here GetLayoutLocalPosition\tDescription goes here GetLayoutBounds\tDescription goes here GetLayoutLocalMatrix\tDescription goes here GetLayoutWorldMatrix\tDescription goes here GetAlignedScreenRect\tDescription goes here GetLocalPoint\tDescription goes here GetLayoutResult\tDescription goes here GetFullLayoutResult\tDescription goes here GetScreenPosition\tDescription goes here SetValueVariable\tDescription goes here SetColorVariable\tDescription goes here","keywords":""},{"title":"UIFontSize","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/UIFontSize","content":"UIFontSize struct in EvolveUI Fields value\tDescription goes here unit\tDescription goes here# MethodsEquals\tDescription goes here GetHashCode\tDescription goes here ToStyleString\tDescription goes here","keywords":""},{"title":"UIRange01","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/UIRange01","content":"UIRange01 struct in EvolveUI Methods Equals\tDescription goes here GetHashCode\tDescription goes here","keywords":""},{"title":"UIFontSizeUnit","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/UIFontSizeUnit","content":"UIFontSizeUnit enum in EvolveUI Default Em Rem Point Pixel\t","keywords":""},{"title":"UIElementFlags","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/UIElementFlags","content":"UIElementFlags enum in EvolveUI.Elements None Enabled InitThisFrame StyleListChanged RequireDisableInvoke\t","keywords":""},{"title":"UIMeasurementUnit","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/UIMeasurementUnit","content":"UIMeasurementUnit enum in EvolveUI Unset Content Em LineHeight ParentSize Percent Pixel ViewportWidth ViewportHeight BackgroundImageWidth BackgroundImageHeight Stretch ApplicationWidth ApplicationHeight MaxChild MinChild StretchContent FitContent FillRemaining\t","keywords":""},{"title":"UIJob","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/UIJob","content":"UIJob struct in EvolveUI.IMGUI Fields parent\tDescription goes here function\tDescription goes here unfinishedJobs\tDescription goes here continuationCount\tDescription goes here jobData\tDescription goes here continuations\tDescription goes here","keywords":""},{"title":"UIService","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/UIService","content":"UIService class in EvolveUI Methods set_application\tDescription goes here OnInitialize\tDescription goes here OnBeginViewBindings\tDescription goes here OnEndViewBindings\tDescription goes here OnFrameStart\tDescription goes here OnFrameEnd\tDescription goes here Dispose\tDescription goes here","keywords":""},{"title":"UIShader","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/UIShader","content":"UIShader struct in EvolveUI.IMGUI","keywords":""},{"title":"UIRuntime","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/UIRuntime","content":"UIRuntime struct in EvolveUI Methods GetStyle\tDescription goes here AnyElementFocused\tDescription goes here IsFocused\tDescription goes here EnumToString\tDescription goes here CreateBaseView\tDescription goes here CreateWindowView\tDescription goes here CreateModalView\tDescription goes here CreateOverlayView\tDescription goes here CreateView\tDescription goes here GetServiceOrDefault\tDescription goes here GetService\tDescription goes here RequestFocus\tDescription goes here ReleaseFocus\tDescription goes here SetAttribute\tDescription goes here RemoveAttribute\tDescription goes here TryGetDragEvent\tDescription goes here GetVideoClip\tDescription goes here GetTextureInfo\tDescription goes here GetFontAsset\tDescription goes here MouseClick\tDescription goes here MouseUp\tDescription goes here MouseDown\tDescription goes here MouseEnter\tDescription goes here MouseExit\tDescription goes here MouseUpdate\tDescription goes here IsMouseOverElement\tDescription goes here IsMouseOverElementOrDescendent\tDescription goes here LogWarning\tDescription goes here LogError\tDescription goes here LogInfo\tDescription goes here PeekContext\tDescription goes here PopContext\tDescription goes here PushContext\tDescription goes here AddScroller\tDescription goes here GetCurrentView\tDescription goes here RegisterTexture\tDescription goes here UnregisterTexture\tDescription goes here GetCurrentViewData\tDescription goes here GetMouseOverElementList\tDescription goes here StopEventType\tDescription goes here","keywords":""},{"title":"UIShaderGuid","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/UIShaderGuid","content":"UIShaderGuid struct in EvolveUI Methods Equals\tDescription goes here GetHashCode\tDescription goes here","keywords":""},{"title":"UIMeasurement","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/UIMeasurement","content":"UIMeasurement struct in EvolveUI Fields value\tDescription goes here unit\tDescription goes here# MethodsEquals\tDescription goes here GetHashCode\tDescription goes here ToString\tDescription goes here ToStyleString\tDescription goes here ToFloat\tDescription goes here","keywords":""},{"title":"UIShaderFeatures","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/UIShaderFeatures","content":"UIShaderFeatures enum in EvolveUI None MatrixFromBuffer StencilMasking SoftMasking StandardClipping OptionalTextures\t","keywords":""},{"title":"UISizeConstraint","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/UISizeConstraint","content":"UISizeConstraint struct in EvolveUI Fields value\tDescription goes here unit\tDescription goes here# MethodsEquals\tDescription goes here GetHashCode\tDescription goes here ToStyleString\tDescription goes here","keywords":""},{"title":"UITimeMeasurementUnit","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/UITimeMeasurementUnit","content":"UITimeMeasurementUnit enum in EvolveUI Unset Percentage Seconds Milliseconds\t","keywords":""},{"title":"UnderlayType","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/UnderlayType","content":"UnderlayType enum in EvolveUI.Rendering None Normal Inset\t","keywords":""},{"title":"UNSAFE_DO_NOT_STORE_GlyphEnumerator","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/UNSAFE_DO_NOT_STORE_GlyphEnumerator","content":"UNSAFE_DO_NOT_STORE_GlyphEnumerator struct in EvolveUI.Text Methods GetEnumerator\tDescription goes here MoveNext\tDescription goes here","keywords":""},{"title":"UITransform2D","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/UITransform2D","content":"UITransform2D struct in EvolveUI Fields m0\tDescription goes here m1\tDescription goes here m2\tDescription goes here m3\tDescription goes here m4\tDescription goes here m5\tDescription goes here# MethodsMultiply\tDescription goes here Inverse\tDescription goes here Scale\tDescription goes here Rotate\tDescription goes here Translate\tDescription goes here SkewX\tDescription goes here SkewY\tDescription goes here Transform\tDescription goes here ToMatrix4x4\tDescription goes here GetMatrix4x4\tDescription goes here ToString\tDescription goes here","keywords":""},{"title":"UITextEffect","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/UITextEffect","content":"UITextEffect class in EvolveUI.Text Fields animatorTime\tDescription goes here animatorDeltaTime\tDescription goes here effectIntensity\tDescription goes here# MethodsOnInitialize\tDescription goes here OnReset\tDescription goes here OnSetupFrame\tDescription goes here OnTeardownFrame\tDescription goes here OnLayout\tDescription goes here OnAnimate\tDescription goes here","keywords":""},{"title":"UISizeConstraintUnit","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/UISizeConstraintUnit","content":"UISizeConstraintUnit enum in EvolveUI Content Em LineHeight ParentSize Percent Pixel ViewportWidth ViewportHeight BackgroundImageWidth BackgroundImageHeight ApplicationWidth ApplicationHeight MaxChild MinChild\t","keywords":""},{"title":"UISpaceSize","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/UISpaceSize","content":"UISpaceSize struct in EvolveUI Fields fixedValue\tDescription goes here stretch\tDescription goes here unit\tDescription goes here# MethodsEquals\tDescription goes here GetHashCode\tDescription goes here ToStyleString\tDescription goes here","keywords":""},{"title":"Unit","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/Unit","content":"Unit enum in EvolveUI Unset Width Height Content ContentHeight ContentWidth Em Rem LineHeight FontPoint ParentWidth ParentHeight ParentContentAreaWidth ParentContentAreaHeight MaxContent MinContent ContentAreaWidth ContentAreaHeight ParentSize Percent Pixel ScreenWidth ScreenHeight ViewportWidth ViewportHeight Seconds Milliseconds ImageWidth ImageHeight Stretch ApplicationWidth ApplicationHeight MaxChild MinChild Controlled StretchContent FitContent Degrees Radians FillRemaining MinWidthHeight MaxWidthHeight ImageCenterWidth ImageCenterHeight ImageBorderLeft ImageBorderRight ImageBorderTop ImageBorderBottom\t","keywords":""},{"title":"UnitUtil","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/UnitUtil","content":"UnitUtil class in EvolveUI","keywords":""},{"title":"UnityObjectJsonType","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/UnityObjectJsonType","content":"UnityObjectJsonType struct in EvolveUI Fields name\tDescription goes here guid\tDescription goes here","keywords":""},{"title":"UISpaceSizeUnit","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/UISpaceSizeUnit","content":"UISpaceSizeUnit enum in EvolveUI Unset Em Pixel ViewportWidth ViewportHeight Stretch ApplicationWidth ApplicationHeight\t","keywords":""},{"title":"UIView","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/UIView","content":"UIView class in EvolveUI Fields name\tDescription goes here application\tDescription goes here viewType\tDescription goes here moduleName\tDescription goes here templateName\tDescription goes here scopeId\tDescription goes here# MethodsSetFullScreen\tDescription goes here SetViewType\tDescription goes here BringToFront\tDescription goes here PushToBack\tDescription goes here GetData\tDescription goes here EnqueueDestruction\tDescription goes here SetSize\tDescription goes here SetRect\tDescription goes here SetPosition\tDescription goes here ConstrainPosition\tDescription goes here SetData\tDescription goes here","keywords":""},{"title":"UNSAFE_DO_NOT_STORE_UnrevealedGlyphEnumerator","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/UNSAFE_DO_NOT_STORE_UnrevealedGlyphEnumerator","content":"UNSAFE_DO_NOT_STORE_UnrevealedGlyphEnumerator struct in EvolveUI.Text Methods GetEnumerator\tDescription goes here MoveNext\tDescription goes here","keywords":""},{"title":"UnscaledGlyphMetric","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/UnscaledGlyphMetric","content":"UnscaledGlyphMetric struct in EvolveUI.Text Fields codepoint\tDescription goes here glyphIndex\tDescription goes here leftBearing\tDescription goes here advanceX\tDescription goes here flags\tDescription goes here maxX\tDescription goes here maxY\tDescription goes here minX\tDescription goes here minY\tDescription goes here","keywords":""},{"title":"UVWrapMode","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/UVWrapMode","content":"UVWrapMode enum in EvolveUI Default Wrap Clamp\t","keywords":""},{"title":"UNSAFE_DO_NOT_STORE_RevealedGlyphEnumerator","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/UNSAFE_DO_NOT_STORE_RevealedGlyphEnumerator","content":"UNSAFE_DO_NOT_STORE_RevealedGlyphEnumerator struct in EvolveUI.Text Methods GetEnumerator\tDescription goes here MoveNext\tDescription goes here","keywords":""},{"title":"UIValue","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/UIValue","content":"UIValue struct in EvolveUI","keywords":""},{"title":"ViewParameters","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/ViewParameters","content":"ViewParameters struct in EvolveUI.Systems Fields applicationWidth\tDescription goes here applicationHeight\tDescription goes here viewX\tDescription goes here viewY\tDescription goes here viewWidth\tDescription goes here viewHeight\tDescription goes here","keywords":""},{"title":"BitBuffer128","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/Unsafe_generated/BitBuffer128","content":"BitBuffer128 struct in EvolveUI.Util Methods Clear\tDescription goes here CountSetBits\tDescription goes here","keywords":""},{"title":"BitBuffer256","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/Unsafe_generated/BitBuffer256","content":"BitBuffer256 struct in EvolveUI.Util Methods Clear\tDescription goes here CountSetBits\tDescription goes here","keywords":""},{"title":"VideoAssetReference","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/VideoAssetReference","content":"VideoAssetReference struct in EvolveUI Fields name\tDescription goes here clip\tDescription goes here","keywords":""},{"title":"WhitespaceHandling","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/WhitespaceHandling","content":"WhitespaceHandling enum in EvolveUI.Util None ConsumeBefore ConsumeAfter ConsumeAll\t","keywords":""},{"title":"ViewType","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/ViewType","content":"ViewType enum in EvolveUI Base Window Modal Overlay\t","keywords":""},{"title":"VertexLayoutId","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/VertexLayoutId","content":"VertexLayoutId struct in EvolveUI","keywords":""},{"title":"UNSAFE_DO_NOT_STORE_VisibleGlyphEnumerator","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/UNSAFE_DO_NOT_STORE_VisibleGlyphEnumerator","content":"UNSAFE_DO_NOT_STORE_VisibleGlyphEnumerator struct in EvolveUI.Text Methods GetEnumerator\tDescription goes here MoveNext\tDescription goes here","keywords":""},{"title":"BitBuffer512","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/Unsafe_generated/BitBuffer512","content":"BitBuffer512 struct in EvolveUI.Util Methods Clear\tDescription goes here CountSetBits\tDescription goes here","keywords":""},{"title":"BitBuffer64","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/Unsafe_generated/BitBuffer64","content":"BitBuffer64 struct in EvolveUI.Util Methods Clear\tDescription goes here CountSetBits\tDescription goes here","keywords":""},{"title":"WhitespaceMode","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/WhitespaceMode","content":"WhitespaceMode enum in EvolveUI None CollapseWhitespace PreserveNewLines TrimStart TrimEnd Trim CollapseWhitespaceAndTrim TrimLineStart TrimLineEnd TrimLine NoWrap CollapseMultipleNewLines\t","keywords":""},{"title":"UVMirrorMode","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/UVMirrorMode","content":"UVMirrorMode enum in EvolveUI None Horizontal Vertical Both\t","keywords":""},{"title":"Visibility","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/Visibility","content":"Visibility enum in EvolveUI Visible Hidden Always\t","keywords":""},{"title":"WaveTextEffect","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/WaveTextEffect","content":"WaveTextEffect class in EvolveUI.Text Fields waveSize\tDescription goes here amplitude\tDescription goes here frequency\tDescription goes here animatorTime\tDescription goes here animatorDeltaTime\tDescription goes here effectIntensity\tDescription goes here# MethodsApplyDisplayEffect\tDescription goes here","keywords":""},{"title":"ViewScopeInfo","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/ViewScopeInfo","content":"ViewScopeInfo struct in EvolveUI Fields viewId\tDescription goes here rootScopeId\tDescription goes here","keywords":""},{"title":"SRP Setup","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/getting_started/srp_setup","content":"SRP Setup To setup a simple SRP you can add the compilation define EVOLVEUI_ENABLE_URP. You can do this in Project Settings / Player / Scripting Compilation / Scripting Define Symbols Once this is active you see an option on your render pipeline to use EvolveUISimpleSRP. Note that this requires you to use a loading component like UIRoot that implements IEvolveApplication and that the IEvolveApplication must be on the same gameObject as the camera that you want to use to render UI with. You can also make your own ScriptableRenderPass that invokes Evolve's render pipeline. The bundled render pass is extremely simple: public class EvolveUISimpleSRP : ScriptableRendererFeature { public override void Create() { } public override void AddRenderPasses(ScriptableRenderer renderer, ref RenderingData renderingData) { Camera camera = renderingData.cameraData.camera; IEvolveApplication app = camera.GetComponent&lt;IEvolveApplication&gt;(); if (app?.application == null) { return; } renderer.EnqueuePass(new EvolveSimpleRenderPass(app.application)); } } internal class EvolveSimpleRenderPass : ScriptableRenderPass { private readonly UIApplication evolveApp; public EvolveSimpleRenderPass(UIApplication evolveApp) { this.evolveApp = evolveApp; } public override void Execute(ScriptableRenderContext context, ref RenderingData renderingData) { Camera camera = renderingData.cameraData.camera; if (camera != evolveApp.camera) { return; } ProjectionSetup setup = evolveApp.GetOrthoProjectionSetup(renderingData.cameraData.IsCameraProjectionMatrixFlipped()); evolveApp.Render(setup, camera.targetTexture); context.ExecuteCommandBuffer(evolveApp.GetCommandBuffer()); } } ","keywords":""},{"title":"WiggleTextEffect","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/WiggleTextEffect","content":"WiggleTextEffect class in EvolveUI.Text Fields amplitude\tDescription goes here frequency\tDescription goes here animatorTime\tDescription goes here animatorDeltaTime\tDescription goes here effectIntensity\tDescription goes here# MethodsOnInitialize\tDescription goes here ApplyDisplayEffect\tDescription goes here","keywords":""},{"title":"Grid Template","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/styles/property_syntax/grid_template","content":"Grid Template This syntax defines a grid axis and is made up of one or more cell definitions. The cells themselves are similar to ValueUnit&lt;GridTemplateUnit&gt; syntax. Unit\tShorthand\tDescriptionPixel\tpx\tA fixed pixel value that accounts for any dpi scaling Em\tem\tThe em size resolved for this element ViewportWidth\tvw\tThe width of the view that an element belongs to in dpi scaled pixels ViewportHeight\tvh\tThe height of the view that an element belongs to in dpi scaled pixels MinContent\tmncnt\tThe minimum size of any content MaxContent\tmxcnt\tThe maximum size of any content Percent\t%\tA percentage based value, the value that this is relative to changes based on the property usage. See individual properties to see what the % relative value is Stretch\ts\tA portion of 'remaining space' that should be attributed to this element. ApplicationWidth\taw\tThe total width of the root view in dpi scaled pixels. ApplicationHeight\tah\tThe total height of the root view in dpi scaled pixels The values for grid cells can also be postfixed with _[number]s to additionally stretch. Here are some valid grid cells 1s The cell should stretch 30px_1s the cell should be at least 30 pixels and then stretch with 1 stretch part2mxcnt the cell should be twice the largest element contained by it A grid template is just a list of cell definitions style grid { GridMainAxisTemplate = 12px 1s 32em 10px_2s; } Grids can also accept a repeated syntax. The following example repeats two cells of 12px and 1s 10 times. style grid { GridMainAxisTemplate = repeat[10](12px 1s); } ","keywords":""},{"title":"Grid Item","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/styles/property_syntax/grid_item","content":"Grid Item A member of a grid can place itself according to a row/column index and specify its span in cells Place this x axis of an element at column index 2 (0 based) and span two cells style grid-item { GridItemX = 2 span 2; } Place this x axis of an element at column index 2 (0 based) and span 1 cell (default if not provided) style grid-item { GridItemX = 2; } Place this x axis of an element anywhere in the grid and span 2 cells style grid-item { GridItemX = span 2; } Place this x axis of an element anywhere in the grid and span 1 cell style grid-item { GridItemX = -1; } ","keywords":""},{"title":"Enum","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/styles/property_syntax/enum","content":"Enum There are two flavors of enum values, normal enums and flags enums. Normal enum syntax is simple the name of the value to provide. style enums { LayoutType = Horizontal; } Flag enum values can be combined with the pipe | operator. If no pipe operator is provided this behaves identically to normal enums. style enums { TextWhitespaceMode = CollapseWhitespace | Trim; } ","keywords":""},{"title":"ResolvingIds","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/ResolvingIds","content":"","keywords":""},{"title":"Resolving Styles & Templates at runtime​","type":1,"pageTitle":"ResolvingIds","url":"/EvolveUIDocs/docs/ResolvingIds#resolving-styles--templates-at-runtime","content":"You can resolve a style by declaring a variable of type StyleId and assigning it using the identifier resolution syntax @moduleName::styleName You can do the same thing to resolve a template via TemplateId typed variables.  template ResolutionExample { render { TemplateId templateId = @EvolveDemo; StyleId styleId = @box; // toggle the given style run $root.style.Toggle(styleId); create { // spawn a window with your template $runtime.CreateWindowView(templateId, new Rect(0, 0, 800, 600)); } } }  "},{"title":"ZNumberFormatInfo","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/ZNumberFormatInfo","content":"ZNumberFormatInfo class in ZFormat Methods set_CurrencyDecimalDigits\tDescription goes here set_CurrencyDecimalSeparator\tDescription goes here set_CurrencyGroupSizes\tDescription goes here set_NumberGroupSizes\tDescription goes here set_PercentGroupSizes\tDescription goes here set_CurrencyGroupSeparator\tDescription goes here set_CurrencySymbol\tDescription goes here set_NaNSymbol\tDescription goes here set_CurrencyNegativePattern\tDescription goes here set_NumberNegativePattern\tDescription goes here set_PercentPositivePattern\tDescription goes here set_PercentNegativePattern\tDescription goes here set_NegativeInfinitySymbol\tDescription goes here set_NegativeSign\tDescription goes here set_NumberDecimalDigits\tDescription goes here set_NumberDecimalSeparator\tDescription goes here set_NumberGroupSeparator\tDescription goes here set_CurrencyPositivePattern\tDescription goes here set_PositiveInfinitySymbol\tDescription goes here set_PositiveSign\tDescription goes here set_PercentDecimalDigits\tDescription goes here set_PercentDecimalSeparator\tDescription goes here set_PercentGroupSeparator\tDescription goes here set_PercentSymbol\tDescription goes here set_PerMilleSymbol\tDescription goes here GetFormat\tDescription goes here","keywords":""},{"title":"Asset Reference","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/styles/property_syntax/asset_reference","content":"","keywords":""},{"title":"Examples​","type":1,"pageTitle":"Asset Reference","url":"/EvolveUIDocs/docs/styles/property_syntax/asset_reference#examples","content":"style assets { FontAsset = &quot;Roboto&quot;; Cursor = &quot;ModuleName::WaitCursor&quot;; }  "},{"title":"Installation","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/getting_started/","content":"","keywords":""},{"title":"Unity​","type":1,"pageTitle":"Installation","url":"/EvolveUIDocs/docs/getting_started/#unity","content":""},{"title":"Package Manager​","type":1,"pageTitle":"Installation","url":"/EvolveUIDocs/docs/getting_started/#package-manager","content":"Evolve can be installed via Unity's Package Manager by:  "},{"title":"Manual​","type":1,"pageTitle":"Installation","url":"/EvolveUIDocs/docs/getting_started/#manual","content":"You can download the latest version of Evolve from here. {Instructions for extraction} "},{"title":"Rider​","type":1,"pageTitle":"Installation","url":"/EvolveUIDocs/docs/getting_started/#rider","content":"Evolve comes with a plugin for Rider that enables intellisense and styling for easier development. Steps here caution The below contains text pulled out of the QuestLog tutorial. This article should transform to describe the point of the UI Reloader script Camera sets the camera that will render the UI. This property will automatically default to the Main camera when not set.Job Threads specifies how many threads the Burst compiler can use for running the UI. The default is set to 4 because allowing Burst to use all the system threads can lead to a slower update time.DPI Scale lets you override the default dots per inch (DPI) that the monitor has - which effectively allows you to scale the UI up or down.Disable Batching is for debugging only and tells the render system not to optimize draw calls. It should be used with the frame debugger to see how things render. ---- DELETE Add two more Colors, which will be used by the font assets later: Name: PrimaryAccentColor and Color: #77E2C7Name: SecondaryAccentColor and **Co "},{"title":"Color Cheatsheet","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/styles/colors","content":"Color Cheatsheet Evolve is capable of supporting any color that you may need for your project. The table below is a quick reference for common colors. Color\tHTML / CSS Color Name\tHex Code #RRGGBB\tDecimal Code (R,G,B) transparent\t#00000000\trgba(0, 0, 0, 0) black\t#000000\trgba(0, 0, 0, 255) indianred\t#CD5C5C\trgba(205, 92, 92, 255) lightcoral\t#F08080\trgba(240, 128, 128, 255) salmon\t#FA8072\trgba(250, 128, 114, 255) darksalmon\t#E9967A\trgba(233, 150, 122, 255) lightsalmon\t#FFA07A\trgba(255, 160, 122, 255) crimson\t#DC143C\trgba(220, 20, 60, 255) red\t#FF0000\trgba(255, 0, 0, 255) firebrick\t#B22222\trgba(178, 34, 34, 255) darkred\t#8B0000\trgba(139, 0, 0, 255) pink\t#FFC0CB\trgba(255, 192, 203, 255) lightpink\t#FFB6C1\trgba(255, 182, 193, 255) hotpink\t#FF69B4\trgba(255, 105, 180, 255) hotterpink\t#FF084D\trgba(255, 8, 77, 255) deeppink\t#FF1493\trgba(255, 20, 147, 255) mediumvioletred\t#C71585\trgba(199, 21, 133, 255) palevioletred\t#DB7094\trgba(219, 112, 147, 255) coral\t#FF7F50\trgba(255, 127, 80, 255) tomato\t#FF6347\trgba(255, 99, 71, 255) orangered\t#FF4500\trgba(255, 69, 0, 255) darkorange\t#FF8C00\trgba(255, 140, 0, 255) orange\t#FFA500\trgba(255, 165, 0, 255) gold\t#FFD700\trgba(255, 215, 0, 255) yellow\t#FFFF00\trgba(255, 255, 0, 255) lightyellow\t#FFFFFE\trgba(255, 255, 224, 255) lemonchiffon\t#FFFACD\trgba(255, 250, 205, 255) lightgoldenrodyellow\t#FAFAD2\trgba(250, 250, 210, 255) papayawhip\t#FFEFD5\trgba(255, 239, 213, 255) moccasin\t#FFE4B5\trgba(255, 228, 181, 255) peachpuff\t#FFDAB9\trgba(255, 218, 185, 255) palegoldenrod\t#EEE8AA\trgba(238, 232, 170, 255) khaki\t#F0E68C\trgba(240, 230, 140, 255) darkkhaki\t#BDB76B\trgba(189, 183, 107, 255) lavender\t#E6E6FA\trgba(230, 230, 250, 255) thistle\t#D8BFD8\trgba(216, 191, 216, 255) plum\t#DDA0DD\trgba(221, 160, 221, 255) violet\t#EE82EE\trgba(238, 130, 238, 255) orchid\t#DA70D6\trgba(218, 112, 214, 255) fuchsia\t#FF00FF\trgba(255, 0, 255, 255) magenta\t#FF00FF\trgba(255, 0, 255, 255) mediumorchid\t#BA55D3\trgba(186, 85, 211, 255) mediumpurple\t#9370DB\trgba(147, 112, 219, 255) blueviolet\t#8A2BE2\trgba(138, 43, 226, 255) darkviolet\t#9400D3\trgba(148, 0, 211, 255) darkorchid\t#9932CC\trgba(153, 50, 204, 255) darkmagenta\t#8B008B\trgba(139, 0, 139, 255) purple\t#800080\trgba(128, 0, 128, 255) rebeccapurple\t#663399\trgba(102, 51, 153, 255) indigo\t#4B0082\trgba(75, 0, 130, 255) mediumslateblue\t#7B68EE\trgba(123, 104, 238, 255) slateblue\t#6A5ACD\trgba(106, 90, 205, 255) darkslateblue\t#483D8B\trgba(72, 61, 139, 255) greenyellow\t#ADFF2F\trgba(173, 255, 47, 255) chartreuse\t#7FFF00\trgba(127, 255, 0, 255) lawngreen\t#7CFC00\trgba(124, 252, 0, 255) lime\t#00FF00\trgba(0, 255, 0, 255) limegreen\t#32CD32\trgba(50, 205, 50, 255) palegreen\t#98FB98\trgba(152, 251, 152, 255) lightgreen\t#90EE90\trgba(144, 238, 144, 255) mediumspringgreen\t#00FA9A\trgba(0, 250, 154, 255) springgreen\t#00FF7F\trgba(0, 255, 127, 255) mediumseagreen\t#3CB371\trgba(60, 179, 113, 255) seagreen\t#2E8B57\trgba(46, 139, 87, 255) forestgreen\t#228B22\trgba(34, 139, 34, 255) green\t#008000\trgba(0, 128, 0, 255) darkgreen\t#006400\trgba(0, 100, 0, 255) yellowgreen\t#9ACD32\trgba(154, 205, 50, 255) olivedrab\t#6B8E23\trgba(107, 142, 35, 255) olive\t#808000\trgba(128, 128, 0, 255) darkolivegreen\t#556B2F\trgba(85, 107, 47, 255) mediumaquamarine\t#66CDAA\trgba(102, 205, 170, 255) darkseagreen\t#8FBC8F\trgba(143, 188, 143, 255) lightseagreen\t#20B2AA\trgba(32, 178, 170, 255) darkcyan\t#008B8B\trgba(0, 139, 139, 255) teal\t#008080\trgba(0, 128, 128, 255) aqua\t#00FFFF\trgba(0, 255, 255, 255) cyan\t#00FFFF\trgba(0, 255, 255, 255) lightcyan\t#E0FFFF\trgba(224, 255, 255, 255) paleturquoise\t#AFEEEE\trgba(175, 238, 238, 255) aquamarine\t#7FFFD4\trgba(127, 255, 212, 255) turquoise\t#40E0D0\trgba(64, 224, 208, 255) mediumturquoise\t#48D1CC\trgba(72, 209, 204, 255) darkturquoise\t#00CED1\trgba(0, 206, 209, 255) cadetblue\t#5F9EA0\trgba(95, 158, 160, 255) steelblue\t#4682B4\trgba(70, 130, 180, 255) lightsteelblue\t#B0C4DE\trgba(176, 196, 222, 255) powderblue\t#B0E0E6\trgba(176, 224, 230, 255) lightblue\t#ADD8E6\trgba(173, 216, 230, 255) skyblue\t#87CEEB\trgba(135, 206, 235, 255) lightskyblue\t#87CEFA\trgba(135, 206, 250, 255) deepskyblue\t#00BFFF\trgba(0, 191, 255, 255) dodgerblue\t#1E90FF\trgba(30, 144, 255, 255) cornflowerblue\t#6495ED\trgba(100, 149, 237, 255) royalblue\t#4169E1\trgba(65, 105, 225, 255) blue\t#0000FF\trgba(0, 0, 255, 255) mediumblue\t#0000CD\trgba(0, 0, 205, 255) darkblue\t#00008B\trgba(0, 0, 139, 255) navy\t#000080\trgba(0, 0, 128, 255) midnightblue\t#191970\trgba(25, 25, 112, 255) cornsilk\t#FFF8DC\trgba(255, 248, 220, 255) blanchedalmond\t#FFEBCD\trgba(255, 235, 205, 255) bisque\t#FFE4C4\trgba(255, 228, 196, 255) navajowhite\t#FFDEAD\trgba(255, 222, 173, 255) wheat\t#F5DEB3\trgba(245, 222, 179, 255) burlywood\t#DEB887\trgba(222, 184, 135, 255) tan\t#D2B48C\trgba(210, 180, 140, 255) rosybrown\t#BC8F8F\trgba(188, 143, 143, 255) sandybrown\t#F4A460\trgba(244, 164, 96, 255) goldenrod\t#DAA520\trgba(218, 165, 32, 255) darkgoldenrod\t#B8860B\trgba(184, 134, 11, 255) peru\t#CD853F\trgba(205, 133, 63, 255) chocolate\t#D2691E\trgba(210, 105, 30, 255) saddlebrown\t#8B4513\trgba(139, 69, 19, 255) sienna\t#A0522D\trgba(160, 82, 45, 255) brown\t#A52A2A\trgba(165, 42, 42, 255) maroon\t#800000\trgba(128, 0, 0, 255) white\t#FFFFFF\trgba(255, 255, 255, 255) snow\t#FFFAFA\trgba(255, 250, 250, 255) honeydew\t#F0FFF0\trgba(240, 255, 240, 255) mintcream\t#F5FFFA\trgba(245, 255, 250, 255) azure\t#F0FFFF\trgba(240, 255, 255, 255) aliceblue\t#F0F8FF\trgba(240, 248, 255, 255) ghostwhite\t#F8F8FF\trgba(248, 248, 255, 255) whitesmoke\t#F5F5F5\trgba(245, 245, 245, 255) seashell\t#FFF5EE\trgba(255, 245, 238, 255) beige\t#F5F5DC\trgba(245, 245, 220, 255) oldlace\t#FDF5E6\trgba(253, 245, 230, 255) floralwhite\t#FFFAF0\trgba(255, 250, 240, 255) ivory\t#FFFFF0\trgba(255, 255, 240, 255) antiquewhite\t#FAEBD7\trgba(250, 235, 215, 255) linen\t#FAF0E6\trgba(250, 240, 230, 255) lavenderblush\t#FFF0F5\trgba(255, 240, 245, 255) mistyrose\t#FFE4E1\trgba(255, 228, 225, 255) gainsboro\t#DCDCDC\trgba(220, 220, 220, 255) lightgray\t#D3D3D3\trgba(211, 211, 211, 255) lightgrey\t#D3D3D3\trgba(211, 211, 211, 255) silver\t#C0C0C0\trgba(192, 192, 192, 255)","keywords":""},{"title":"Aspect Ratio","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/styles/property_syntax/aspect_ratio","content":"Aspect Ratio An aspect ratio can be defined by providing the controlling axis relationship and then the actual ratio. WidthControlsHeight The width drives the heightHeightControlsWidth The height drives the widthImageAspect The aspect ratio is derived from the element's BackgroundImage style aspect { AspectRatio = WidthControlsHeight 2 : 1; AspectRatio = HeightControlsWidth 4 : 5; AspectRatio = ImageAspect; } ","keywords":""},{"title":"Color","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/styles/property_syntax/color","content":"","keywords":""},{"title":"RGB values​","type":1,"pageTitle":"Color","url":"/EvolveUIDocs/docs/styles/property_syntax/color#rgb-values","content":"Provide three values between 0 and 255, alpha is assumed to be 255. style color { BackgroundColor = rgb(128, 255, 255); }  "},{"title":"RGBA values​","type":1,"pageTitle":"Color","url":"/EvolveUIDocs/docs/styles/property_syntax/color#rgba-values","content":"Provide four values between 0 and 255 style color { BackgroundColor = rgba(128, 255, 255, 32); }  "},{"title":"Hex values​","type":1,"pageTitle":"Color","url":"/EvolveUIDocs/docs/styles/property_syntax/color#hex-values","content":"If 8 values are provided the color is derived from decoding the hex pairs into r, g, b, and a components. If only 6 values are provided, the alpha is assumed to be equal to ff or 255 style color { BackgroundColor = #ff0000ff; BackgroundTint = #aabb99; }  "},{"title":"Color keywords​","type":1,"pageTitle":"Color","url":"/EvolveUIDocs/docs/styles/property_syntax/color#color-keywords","content":"The list of accepted color keywords is here style color { BackgroundColor = red; BackgroundTint = cornflowerblue; }  "},{"title":"Color operators​","type":1,"pageTitle":"Color","url":"/EvolveUIDocs/docs/styles/property_syntax/color#color-operators","content":"opacity(color, Range01) replaces the alpha component of the input color with the range argument style color { BackgroundColor = opacity(red, 50%); BackgroundTint = opacity(#aabbcc, 0.1); }  "},{"title":"WaveBasedTextEffect","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/WaveBasedTextEffect","content":"WaveBasedTextEffect class in EvolveUI.Text Fields waveSize\tDescription goes here amplitude\tDescription goes here frequency\tDescription goes here animatorTime\tDescription goes here animatorDeltaTime\tDescription goes here effectIntensity\tDescription goes here","keywords":""},{"title":"Range01","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/styles/property_syntax/range_01","content":"","keywords":""},{"title":"Examples​","type":1,"pageTitle":"Range01","url":"/EvolveUIDocs/docs/styles/property_syntax/range_01#examples","content":"style ranges { Opacity = 50%; Opacity = 0.25; Opacity = 0.25f; }  "},{"title":"Scalars","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/styles/property_syntax/scalars","content":"Scalars Scalar values are just byte, float, int etc primitive numeric values and are parsed as such. style scalars { LayoutPriority = 5; ZIndex = -18; ShadowBlur = 45.66; ShadowSpread = -33.45f; } ","keywords":""},{"title":"Matrix","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/styles/property_syntax/matrix","content":"","keywords":""},{"title":"Identity​","type":1,"pageTitle":"Matrix","url":"/EvolveUIDocs/docs/styles/property_syntax/matrix#identity","content":"identity() does not accept arguments "},{"title":"Scale​","type":1,"pageTitle":"Matrix","url":"/EvolveUIDocs/docs/styles/property_syntax/matrix#scale","content":"scale(float, float? float?) transformations can accept between 1 and 3 float arguments. "},{"title":"Translate​","type":1,"pageTitle":"Matrix","url":"/EvolveUIDocs/docs/styles/property_syntax/matrix#translate","content":"translate(AlignmentOffset, AlignmentOffset?, AlignmentOffset?) transformations accept between 1 and 3 AlignmentOffset values "},{"title":"Rotation​","type":1,"pageTitle":"Matrix","url":"/EvolveUIDocs/docs/styles/property_syntax/matrix#rotation","content":"rotate(UIAngle, UIAngle?, UIAngle?) transformations accept between 1 and 3 UIAngle values "},{"title":"Skew​","type":1,"pageTitle":"Matrix","url":"/EvolveUIDocs/docs/styles/property_syntax/matrix#skew","content":"skew(UIAngle, UIAngle?) transformations accept 1 or 2 UIAngle values "},{"title":"Combining Matrices​","type":1,"pageTitle":"Matrix","url":"/EvolveUIDocs/docs/styles/property_syntax/matrix#combining-matrices","content":"Matrices can be combined by placing multiple transformations together. The maximum is 7. style matrices { RenderTransform = rotate(20deg) translate(10px, 10px, -50px) skew(19deg); }  "},{"title":"Texture Reference","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/styles/property_syntax/texture_reference","content":"","keywords":""},{"title":"Examples​","type":1,"pageTitle":"Texture Reference","url":"/EvolveUIDocs/docs/styles/property_syntax/texture_reference#examples","content":"style sample-textures { BackgroundImage = linear-gradient(&quot;gradientName&quot;); BackgroundImage = linear-gradient(&quot;moduleName::gradientName&quot;); BackgroundImage = radial-gradient(&quot;moduleName::gradientName&quot;); BackgroundImage = ellipitcal-gradient(&quot;moduleName::gradientName&quot;); BackgroundImage = conic-gradient(&quot;moduleName::gradientName&quot;); BackgroundImage = soft-mask(&quot;moduleName::maskName&quot;); BackgroundImage = soft-mask-inverse(&quot;moduleName::maskName&quot;); BackgroundImage = hard-mask(&quot;maskName&quot;); BackgroundImage = hard-mask-inverse(&quot;maskName&quot;); BackgroundImage = nine-slice(&quot;moduleName::textureName&quot;); BackgroundImage = &quot;moduleName::textureName&quot;; BackgroundImage = &quot;textureName&quot;; }  "},{"title":"Shorthands","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/styles/property_syntax/shorthands","content":"","keywords":""},{"title":"2 Component Shorthands​","type":1,"pageTitle":"Shorthands","url":"/EvolveUIDocs/docs/styles/property_syntax/shorthands#2-component-shorthands","content":"A two component short hand has the following behavior if only one value is provided, it sets both components to that valueif two values are provided, the components are assigned in order This sets both PreferredWidth and PreferredHeight to 100px style size { PreferredSize = 100px; }  This sets PreferredWidth to 100px and PreferredHeight to 2cnt style size { PreferredSize = 100px 2cnt; }  "},{"title":"4 Component Shorthands​","type":1,"pageTitle":"Shorthands","url":"/EvolveUIDocs/docs/styles/property_syntax/shorthands#4-component-shorthands","content":"A four component short hand has the following behavior (assuming a 0 based index). It follows the TRBL (top, right, bottom, left) assignment order. If only one value is provided, it all components to that value. In this case all four padding values are assigned 10px style padding { Padding = 10px; }  If two values are provided, the vertical components get value 0 and the horizontal components get value 1. In this example PaddingTop and PaddingBottom are assigned 10px while PaddingLeft and PaddingRight are assigned 20px style padding { Padding = 10px 20px; }  If three values are provided, the top component gets value 0, the horizontal components get value 1, and bottom component gets value 2. In this example PaddingTop is set to 10px, PaddingLeft and PaddingRight are assigned 20px and PaddingBottom is assigned 15px style padding { Padding = 10px 20px 15px; }  If four values are provided, each component is assigned the corresponding value index in order from TRBL(top, right, bottom, left). In this example PaddingTop is set to 10px, PaddingRight is 20px, PaddingBottom is 15px and PaddingLeft is 1s style padding { Padding = 10px 20px 15px 1s; }  "},{"title":"WorkStealingQueue","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/WorkStealingQueue","content":"WorkStealingQueue class in EvolveUI.IMGUI Fields top\tDescription goes here bottom\tDescription goes here spinLock\tDescription goes here# MethodsPush\tDescription goes here Pop\tDescription goes here Steal\tDescription goes here","keywords":""},{"title":"Style Properties","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/styles/style_properties_generated","content":"","keywords":""},{"title":"BoxModel​","type":1,"pageTitle":"Style Properties","url":"/EvolveUIDocs/docs/styles/style_properties_generated#boxmodel","content":"BorderBottom : TextureRelativeSizeBorderLeft : TextureRelativeSizeBorderRight : TextureRelativeSizeBorderTop : TextureRelativeSizeMarginBottom : UISpaceSizeMarginLeft : UISpaceSizeMarginRight : UISpaceSizeMarginTop : UISpaceSizeMaxHeight : UISizeConstraintMaxWidth : UISizeConstraintMinHeight : UISizeConstraintMinWidth : UISizeConstraintPaddingBottom : UISpaceSizePaddingLeft : UISpaceSizePaddingRight : UISpaceSizePaddingTop : UISpaceSizePreferredHeight : UIMeasurementPreferredWidth : UIMeasurement "},{"title":"Layout​","type":1,"pageTitle":"Style Properties","url":"/EvolveUIDocs/docs/styles/style_properties_generated#layout","content":"AspectRatio : AspectRatioCollapseSpaceHorizontal : SpaceCollapseCollapseSpaceVertical : SpaceCollapseGridItemX : GridItemPlacementGridItemY : GridItemPlacementGridLayoutColGap : floatGridLayoutDensity : GridLayoutDensityGridLayoutRowGap : floatGridMainAxisTemplate : GridTemplateGridOverflowAxisTemplate : GridTemplateLayoutBehavior : LayoutBehaviorLayoutDirection : LayoutDirectionLayoutFillOriginHorizontal : floatLayoutFillOriginVertical : floatLayoutPriority : intLayoutType : LayoutTypeSpaceBetweenHorizontal : UISpaceSizeSpaceBetweenVertical : UISpaceSize "},{"title":"Alignment​","type":1,"pageTitle":"Style Properties","url":"/EvolveUIDocs/docs/styles/style_properties_generated#alignment","content":"AlignmentBoundaryX : AlignmentBoundaryAlignmentBoundaryY : AlignmentBoundaryAlignmentDirectionX : AlignmentDirectionAlignmentDirectionY : AlignmentDirectionAlignmentOffsetX : AlignmentOffsetAlignmentOffsetY : AlignmentOffsetAlignmentOriginX : AlignmentOffsetAlignmentOriginY : AlignmentOffsetAlignmentTargetX : AlignmentTargetAlignmentTargetY : AlignmentTarget "},{"title":"Rendering​","type":1,"pageTitle":"Style Properties","url":"/EvolveUIDocs/docs/styles/style_properties_generated#rendering","content":"BackgroundColor : UnityEngine.ColorBackgroundFit : BackgroundFitBackgroundImage : TextureInfoBackgroundImageOffsetX : TextureRelativeSizeBackgroundImageOffsetY : TextureRelativeSizeBackgroundImageRotation : UIAngleBackgroundImageScaleX : floatBackgroundImageScaleY : floatBackgroundImageUVWrap : UVWrapModeBackgroundMode : ImageRenderModeBackgroundRectMaxX : TextureRelativeSizeBackgroundRectMaxY : TextureRelativeSizeBackgroundRectMinX : TextureRelativeSizeBackgroundRectMinY : TextureRelativeSizeBackgroundTint : UnityEngine.ColorBorderColor : UnityEngine.ColorBorderMode : BorderModeCornerBevelBottomLeft : ElementRelativeSizeCornerBevelBottomRight : ElementRelativeSizeCornerBevelTopLeft : ElementRelativeSizeCornerBevelTopRight : ElementRelativeSizeCornerRadiusBottomLeft : ElementRelativeSizeCornerRadiusBottomRight : ElementRelativeSizeCornerRadiusTopLeft : ElementRelativeSizeCornerRadiusTopRight : ElementRelativeSizeDilate : floatFeather : floatLayer : intOpacity : UIRange01OutlineColor : UnityEngine.ColorOutlineWidth : ElementRelativeSizeRenderTransform : RenderTransformTransformPivotX : ElementRelativeSizeTransformPivotY : ElementRelativeSizeVisibility : VisibilityZIndex : int "},{"title":"Input​","type":1,"pageTitle":"Style Properties","url":"/EvolveUIDocs/docs/styles/style_properties_generated#input","content":"Cursor : CursorInfoPointerEvents : PointerEvents "},{"title":"TextLayout​","type":1,"pageTitle":"Style Properties","url":"/EvolveUIDocs/docs/styles/style_properties_generated#textlayout","content":"TextAlignment : TextAlignmentTextCharacterSpacing : UIFontSizeTextFontAsset : FontAssetIdTextFontSize : UIFontSizeTextLineHeight : floatTextMaxLineCount : intTextVerticalAlignment : TextAlignmentVerticalTextWhitespaceMode : WhitespaceModeTextWordSpacing : float "},{"title":"TextRendering​","type":1,"pageTitle":"Style Properties","url":"/EvolveUIDocs/docs/styles/style_properties_generated#textrendering","content":"TextColor : UnityEngine.ColorTextFaceDilate : floatTextFontStyle : FontStyleTextOutlineColor : UnityEngine.ColorTextOutlineSoftness : floatTextOutlineWidth : floatTextOverflow : TextOverflowTextSelectionCaretColor : UnityEngine.ColorTextSelectionColor : UnityEngine.ColorTextSelectionHighlightColor : UnityEngine.ColorTextTransform : TextTransformTextUnderlayColor : UnityEngine.ColorTextUnderlayDilate : floatTextUnderlaySoftness : floatTextUnderlayX : floatTextUnderlayY : float "},{"title":"Clipping​","type":1,"pageTitle":"Style Properties","url":"/EvolveUIDocs/docs/styles/style_properties_generated#clipping","content":"ClipBehavior : ClipBehaviorClipBounds : ClipBoundsOverflowX : OverflowOverflowY : Overflow "},{"title":"Masking​","type":1,"pageTitle":"Style Properties","url":"/EvolveUIDocs/docs/styles/style_properties_generated#masking","content":"Mask : TextureInfoMaskOffsetX : TextureRelativeSizeMaskOffsetY : TextureRelativeSizeMaskRotation : UIAngleMaskScaleX : floatMaskScaleY : floatMaskThreshold : float "},{"title":"Shadow​","type":1,"pageTitle":"Style Properties","url":"/EvolveUIDocs/docs/styles/style_properties_generated#shadow","content":"ShadowBlur : floatShadowColor : UnityEngine.ColorShadowOffsetX : ElementRelativeSizeShadowOffsetY : ElementRelativeSizeShadowSpread : float "},{"title":"Reveal​","type":1,"pageTitle":"Style Properties","url":"/EvolveUIDocs/docs/styles/style_properties_generated#reveal","content":"RevealAmount : floatRevealDirection : RevealDirectionRevealMode : RevealModeRevealOffsetX : ElementRelativeSizeRevealOffsetY : ElementRelativeSizeRevealRadius : ElementRelativeSizeRevealRotation : UIAngle "},{"title":"Animations","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/templates/animation_docs","content":"Animations caution This document is a WORK IN PROGRESS Animation via code Animation is built on top of a generic interpolator system. The idea is that you give the system a struct of type InterpolatorSpec&lt;T&gt; where T : unmanaged or InterpolationSpec&lt;T, TStorage&gt; where T : unmanaged where TStorage : unmanaged the interpolation spec object includes some fields for customizing the animation Interpolator&lt;T&gt; interpolator -- a managed class that executes the animation AnimationSettings settings; int delayMS; time in milliseconds the animation should run int iterationCount; number of times to run the animation AnimationFillMode fillMode; when the animation starts and stops applying its properties to the element this is a flags field so you can combine multiple values here to mix and match behavior Default - equal to UntilCompleted BeforeStart - apply properties while animation is the start delay phase AfterCompleted - apply properties even after the animation finishes WhilePlaying - apply properties while animation is running but not delayed WhileDelaying - apply properties while animation is delaying UntilCompleted = BeforeStart | WhileDelaying | WhilePlaying, Always = UntilCompleted | AfterCompleted AnimationDirection direction; We ship with four preconfigured variations of animation. This covers 99% of the things people want to do with animations Curve -- executes an animation along a Unity AnimationCurve asset Tween -- Standard tweening / easing implementation that accepts either a Bezier or an EasingFunction value Spring -- spring physics based animation Keyframe -- explicit keyframe interpolation Custom","keywords":""},{"title":"Vertex","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/api_generated/uncategorized_generated/Vertex","content":"Vertex struct in EvolveUI.Slug Fields position\tDescription goes here texcoord\tDescription goes here jacobian\tDescription goes here banding\tDescription goes here color\tDescription goes here","keywords":""},{"title":"If / Else","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/templates/body_block/control_flow/if_else","content":"If / Else If else works identically to how it does in C#, the added optional ability to be declared as destructive template IfElseSample(required bool someCondition, required bool someOtherCondition) render { if(someCondition) { Text(&quot;one&quot;); } else if(someOtherCondition) { Text(&quot;two&quot;); } else { Text(&quot;three&quot;); } } template IfElseSampleDestructive(required bool someCondition, required bool someOtherCondition) render { if:destructive(someCondition) { Text(&quot;one&quot;); } else if(someOtherCondition) { Text(&quot;two&quot;); } else { Text(&quot;three&quot;); } } ","keywords":""},{"title":"Portals & Teleportation","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/templates/body_block/teleportation","content":"","keywords":""},{"title":"Portals​","type":1,"pageTitle":"Portals & Teleportation","url":"/EvolveUIDocs/docs/templates/body_block/teleportation#portals","content":"Portals are kind of like a reverse slot. It is a way to inject content elsewhere in the app while still having a binding scope that is local to the element. A great example of this is a tooltip or a modal dialog. "},{"title":"Markers","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/templates/body_block/markers","content":"","keywords":""},{"title":"Render marker​","type":1,"pageTitle":"Markers","url":"/EvolveUIDocs/docs/templates/body_block/markers#render-marker","content":"A marker can also be used as a kind of localized teleport. In the example below we declare three boxes before the text element and then actually render them later after the text has rendered. If the same marker gets rendered multiple times, the last render statement wins. template MarkerExample render { marker MyMarker { Div(style = [@box]); Div(style = [@box]); Div(style = [@box]); } Text(&quot;Here we go&quot;); render marker(MyMarker); }  "},{"title":"Deferred Markers​","type":1,"pageTitle":"Markers","url":"/EvolveUIDocs/docs/templates/body_block/markers#deferred-markers","content":"A marker can either be hidden or visible, by default markers are visible. You can change this with amarker:defer declaration. This will defer rendering the marker contents until a render marker()statement explicitly renders them. If no render occurs for a frame, the contents of the marker end up a kind of purgatory where they are considered to be alive and active, but will not layout or render. template MarkerExample(required bool renderContents) render { // if renderContents is false, these boxes will end up in purgatory marker:defer MyMarker { Div(style = [@box]); Div(style = [@box]); Div(style = [@box]); } Text(&quot;Here we go&quot;); if(renderContents) { render marker(MyMarker); } }  "},{"title":"ValueUnit","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/styles/property_syntax/value_unit","content":"","keywords":""},{"title":"Element Relative Size​","type":1,"pageTitle":"ValueUnit","url":"/EvolveUIDocs/docs/styles/property_syntax/value_unit#element-relative-size","content":"Unit\tShorthand\tDescriptionWidth\tw\tThe width of the element Height\th\tThe height of the element Percent\t%\tA percentage based value, the value that this is relative to changes based on the property usage. See individual properties to see what the % relative value is Pixel\tpx\tA fixed pixel value that accounts for any dpi scaling BackgroundImageWidth\tbw\tThe width of the currently assigned background texture in unscaled texels BackgroundImageHeight\tbh\tThe height of the currently assigned background texture in unscaled texels MinWidthHeight\tmnwh\tThe minimum of the target's width or height MaxWidthHeight\tmxwh\tThe maximum of the target's width or height "},{"title":"Alignment Offset​","type":1,"pageTitle":"ValueUnit","url":"/EvolveUIDocs/docs/styles/property_syntax/value_unit#alignment-offset","content":"Unit\tShorthand\tDescriptionWidth\tw\tThe width of the element Height\th\tThe height of the element ContentHeight\tcnth\tThe content height of the element ContentWidth\tcntw\tThe content width of the element Em\tem\tThe em size resolved for this element ParentWidth\tpw\tThe post layout width of the parent element or the view size if parent is null ParentHeight\tph\tThe post layout height of the parent element or the view size if parent is null ParentContentAreaWidth\tpcaw\tThe parent's width (or viewport width if parent is null) minus any border and padding on the horizontal axis ParentContentAreaHeight\tpcah\tThe parent's height (or viewport height if parent is null) minus any border and padding on the vertical axis ContentAreaWidth\tcaw\tThe post layout width of the element minus any padding and border on the horizontal axis ContentAreaHeight\tcah\tThe post layout height of the element minus any padding and border on the vertical axis Percent\t%\tA percentage based value, the value that this is relative to changes based on the property usage. See individual properties to see what the % relative value is Pixel\tpx\tA fixed pixel value that accounts for any dpi scaling ScreenWidth\tsw\tThe total screen width in dpi scaled pixels ScreenHeight\tsh\tThe total screen height in dpi scaled pixels ViewportWidth\tvw\tThe width of the view that an element belongs to in dpi scaled pixels ViewportHeight\tvh\tThe height of the view that an element belongs to in dpi scaled pixels BackgroundImageWidth\tbw\tThe width of the currently assigned background texture in unscaled texels BackgroundImageHeight\tbh\tThe height of the currently assigned background texture in unscaled texels "},{"title":"Texture Relative Size​","type":1,"pageTitle":"ValueUnit","url":"/EvolveUIDocs/docs/styles/property_syntax/value_unit#texture-relative-size","content":"Unit\tShorthand\tDescriptionPercent\t%\tA percentage based value, the value that this is relative to changes based on the property usage. See individual properties to see what the % relative value is Pixel\tpx\tA fixed pixel value that accounts for any dpi scaling ImageWidth\tbw\tThe width of the currently assigned background texture in unscaled texels ImageHeight\tbh\tThe height of the currently assigned background texture in unscaled texels "},{"title":"Font Size​","type":1,"pageTitle":"ValueUnit","url":"/EvolveUIDocs/docs/styles/property_syntax/value_unit#font-size","content":"Unit\tShorthand\tDescriptionEm\tem\tThe em size resolved for this element Rem\trem\tThe root em size resolved for this element Point\tpt\tA size specified in units defined by the currently assigned font file or the default font if none is assigned Pixel\tpx\tA fixed pixel value that accounts for any dpi scaling "},{"title":"Measurement​","type":1,"pageTitle":"ValueUnit","url":"/EvolveUIDocs/docs/styles/property_syntax/value_unit#measurement","content":"Unit\tShorthand\tDescriptionContent\tcnt\tThe content size of the element Em\tem\tThe em size resolved for this element LineHeight\tlh\tThe line height of the element computed from the current font size ParentSize\tpsz\tThe size of the parent. Note that if there exists a paradox where the parent sizes itself based on content size and some child sizes itself based on the parent size. In this case the child will set its size to zero. This paradox is only applicable for layout Percent\t%\tA percentage based value, the value that this is relative to changes based on the property usage. See individual properties to see what the % relative value is Pixel\tpx\tA fixed pixel value that accounts for any dpi scaling ViewportWidth\tvw\tThe width of the view that an element belongs to in dpi scaled pixels ViewportHeight\tvh\tThe height of the view that an element belongs to in dpi scaled pixels BackgroundImageWidth\tbw\tThe width of the currently assigned background texture in unscaled texels BackgroundImageHeight\tbh\tThe height of the currently assigned background texture in unscaled texels Stretch\ts\tA portion of 'remaining space' that should be attributed to this element. ApplicationWidth\taw\tThe total width of the root view in dpi scaled pixels ApplicationHeight\tah\tThe total width of the root view in dpi scaled pixels MaxChild\tmx\tThe size of the largest child MinChild\tmn\tThe size of the smallest child StretchContent\tstrcnt\tA unit that reserves at least 1x the content size and then adds n stretch pieces FitContent\tfc\tNot Supported FillRemaining\tfr\tA fixed percentage of the remaining space in a layout before stretch values are distributed "},{"title":"Size Constraint​","type":1,"pageTitle":"ValueUnit","url":"/EvolveUIDocs/docs/styles/property_syntax/value_unit#size-constraint","content":"Unit\tShorthand\tDescriptionContent\tcnt\tThe content size of the element Em\tem\tThe em size resolved for this element LineHeight\tlh\tThe line height of the element computed from the current font size ParentSize\tpsz\tThe size of the parent. Note that if there exists a paradox where the parent sizes itself based on content size and some child sizes itself based on the parent size. In this case the child will set its size to zero. This paradox is only applicable for layout Percent\t%\tA percentage based value, the value that this is relative to changes based on the property usage. See individual properties to see what the % relative value is Pixel\tpx\tA fixed pixel value that accounts for any dpi scaling ViewportWidth\tvw\tThe width of the view that an element belongs to in dpi scaled pixels ViewportHeight\tvh\tThe height of the view that an element belongs to in dpi scaled pixels BackgroundImageWidth\tbw\tThe width of the currently assigned background texture in unscaled texels BackgroundImageHeight\tbh\tThe height of the currently assigned background texture in unscaled texels ApplicationWidth\taw\tThe total width of the root view in dpi scaled pixels ApplicationHeight\tah\tThe total width of the root view in dpi scaled pixels MaxChild\tmx\tThe size of the largest child MinChild\tmn\tThe size of the smallest child "},{"title":"Space Size​","type":1,"pageTitle":"ValueUnit","url":"/EvolveUIDocs/docs/styles/property_syntax/value_unit#space-size","content":"Unit\tShorthand\tDescriptionEm\tem\tThe em size resolved for this element Pixel\tpx\tA fixed pixel value that accounts for any dpi scaling ViewportWidth\tvw\tThe width of the view that an element belongs to in dpi scaled pixels ViewportHeight\tvh\tThe height of the view that an element belongs to in dpi scaled pixels Stretch\ts\tA portion of 'remaining space' that should be attributed to this element. ApplicationWidth\taw\tThe total width of the root view in dpi scaled pixels ApplicationHeight\tah\tThe total width of the root view in dpi scaled pixels "},{"title":"Examples​","type":1,"pageTitle":"ValueUnit","url":"/EvolveUIDocs/docs/styles/property_syntax/value_unit#examples","content":"style value_units { PaddingLeft = 1s; PreferredWidth = 2.5cnt; TextFontSize = 3em; AlignmentOffsetX = 0.5w; }  "},{"title":"Match","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/templates/body_block/control_flow/switch","content":"Match A match expression works almost identically to a switch except that it does not support fallthrough or abreak keyword. Multiple case labels are allowed though. The value type can be anything, though if the value type is not a numeric or enum value then internally the match statement will compile down to an if-else ladder and may perform marginally slower than the optimizable integer/enum version. template MatchSample(required int value) render { match(value) { case 0: { Text(&quot;show if value is 0&quot;); } case 99: case 100: { Text(&quot;show if value is 100&quot;); } default: { Text(&quot;show if nothing matched&quot;); } } } ","keywords":""},{"title":"Render Block","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/templates/body_block/render_block","content":"","keywords":""},{"title":"Parameter​","type":1,"pageTitle":"Render Block","url":"/EvolveUIDocs/docs/templates/body_block/render_block#parameter","content":"Passing a parameter to an entity is simple: just provide an expression and optionally a key. render { NumberInput&lt;int&gt;(value = 10); }  Parameters are passed following the same methodology as C# named arguments. Sometimes you want to pass a value into an entity and then later read that same value back out. One easy way to do this is with a sync modifier. render { state int someValue = 10; NumberInput&lt;int&gt;(sync:value = someValue); // after the NumberInput completes its update, `someValue` will be set to the same value as the NumberInput's `value` parameter run Debug.Log(someValue); }  "},{"title":"Const​","type":1,"pageTitle":"Render Block","url":"/EvolveUIDocs/docs/templates/body_block/render_block#const","content":"Because Evolve re-executes your templates every frame, there are cases where you need to allocate memory or perform some other expensive operation, but only want to do it once. In these cases you can apply aconst modifier to your parameter, attribute, or instance style expression. Note that when you pass in a lambda expression as a parameter, Evolve automatically adds a const for you. Const cannot be used when sync is present. render { SomeElementA(const value = SomeExpensiveOperation()); // const is implicitly added for you because of the lambda declaration SomeElementB(action = () =&gt; SomeExpensiveOperation()); // adding const yourself is not an error but is not nessessary SomeElementB(const action = () =&gt; SomeExpensiveOperation()); }  "},{"title":"Decorators​","type":1,"pageTitle":"Render Block","url":"/EvolveUIDocs/docs/templates/body_block/render_block#decorators","content":""},{"title":"Input Handlers​","type":1,"pageTitle":"Render Block","url":"/EvolveUIDocs/docs/templates/body_block/render_block#input-handlers","content":""},{"title":"Lifecycle Handlers​","type":1,"pageTitle":"Render Block","url":"/EvolveUIDocs/docs/templates/body_block/render_block#lifecycle-handlers","content":""},{"title":"Built-in Elements","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/templates/built_in_elements","content":"","keywords":""},{"title":"Text​","type":1,"pageTitle":"Built-in Elements","url":"/EvolveUIDocs/docs/templates/built_in_elements#text","content":""},{"title":"Div​","type":1,"pageTitle":"Built-in Elements","url":"/EvolveUIDocs/docs/templates/built_in_elements#div","content":""},{"title":"","type":1,"pageTitle":"Built-in Elements","url":"/EvolveUIDocs/docs/templates/built_in_elements##","content":""},{"title":"Variables","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/templates/body_block/variables","content":"","keywords":""},{"title":"State​","type":1,"pageTitle":"Variables","url":"/EvolveUIDocs/docs/templates/body_block/variables#state","content":"A state variable will be initialized once and then its value will be remembered every frame until its parent scope is destroyed. template StateSample render { state float a = 10f; state float x; state Color r = Color.red; state var g = Color.green; }  "},{"title":"Repeat","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/templates/body_block/control_flow/repeat","content":"","keywords":""},{"title":"Count based repeat​","type":1,"pageTitle":"Repeat","url":"/EvolveUIDocs/docs/templates/body_block/control_flow/repeat#count-based-repeat","content":"To repeat a fixed number of times, just supply an expression that evaluates to an integer. template RepeatSample render { int count = 100; repeat(i in count) { Text($&quot;Showing {i}&quot;); } repeat(i in count / 2) { Text($&quot;Showing {i}&quot;); } repeat(i in 400) { Text($&quot;Showing {i}&quot;); } }  "},{"title":"List based repeat​","type":1,"pageTitle":"Repeat","url":"/EvolveUIDocs/docs/templates/body_block/control_flow/repeat#list-based-repeat","content":"Usually you have a list of data that you want to repeat over. The basic syntax is the same as a count based repeat. Additionally you can extrude the current index with [index]. The list expression can be anything conforming to IEnumerable or IList. Note that IEnumerable is significantly slower due to a. possibly boxing a IEnumerator instance and b. often requiring multiple enumeration to find a count. Repeating over IList or Array instead of IEnumerable is strongly encouraged! template RepeatSample render { int[] items = new int[] { 1, 2, 3 }; repeat(item in items) [index] { Text($&quot;Showing {item} at {index}&quot;); } }  "},{"title":"Key Functions​","type":1,"pageTitle":"Repeat","url":"/EvolveUIDocs/docs/templates/body_block/control_flow/repeat#key-functions","content":"Repeat also participates in Structural Identity which generally means that the indices in your list dictate the scopes their items belong to. Most of the time this fine, but sometimes you need to make that one scope is always tied to one value in your list. If you have data that will be sorted or mutated, you need to make sure the same UI elements are representing the same data every frame. You can ensure this by providing a keyFn argument to your repeat. A key function is any function or lambda with the signature int Fn&lt;T&gt;(T item) where T is the type of the data in your list. An example:  // some C# file public static class Shuffle { private static Random rnd = new Random(); public static int[] GetArray() { return Enumerable.Range(0, 10).OrderBy(c =&gt; rnd.Next()).ToArray(); } } // some .ui file template KeyFnSample render { // not a 'state', we get a new array one every time // but the data is the same random sorting of integers 0-10 int[] ints = Shuffle.GetArray(); // items will stay red by index when clicked on. repeat(val in ints) { state bool clicked = false; Text(style:BackgroundColor = clicked ? `red` : `blue`, mouse:click = clicked = !clicked); } // items will stay red by value. repeat(val in ints, keyFn = (i) =&gt; i) { // identity key fn state bool clicked = false; Text(style:BackgroundColor = clicked ? `red` : `blue`, mouse:click = clicked = !clicked); } }  "},{"title":"Destructive Scopes","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/templates/destructive","content":"Destructive Scopes A scope can be marked as destructive using a :destructive tag after its declaration. Some examples: if:destructive()else:destructiveelse if:destructiveswitch:destructive() { .. }case:destructive &quot;condition&quot; { .. }default:destructive { .. } Some scopes are implicitly destructive, such as those generated by a repeat. In the case of repeat, if the input size shrinks from one frame to another then the extra items that were inside the repeat last frame will be destroyed. If a repeat is disabled due to its parent scope being disabled, its child scopes will be disabled as normal and not be destroyed. Destroying a View will destroy all of its descendent scopes and their associated elements. template Example(required bool showGroup1) render { // because this scope is marked as destructive, if there is a frame in which // this branch is not entered, its descendents will all be destroyed instead of // being disabled as they normally would be. When the branch is later re-entered // the elements we be re-created again. if:destructive(showGroup1) { Text(&quot;Element 1&quot;); Text(&quot;Element 2&quot;); } } ","keywords":""},{"title":"Built In Variables","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/templates/builtins","content":"","keywords":""},{"title":"$root, $element, and $parent​","type":1,"pageTitle":"Built In Variables","url":"/EvolveUIDocs/docs/templates/builtins#root-element-and-parent","content":"When inside of a top level declarations (except for function) you can always use $element to get the current element reference. Inside of a render block, $element becomes contextual based on where it is used and is only valid inside a binding expression. It is not valid inside a create, run, enable, var, state, repeat, if or any other expression that is not related to a property or lifecycle binding. In a given element usage like Text(&quot;xyz&quot;), the $element reference becomes available inside of bindings. When inside of a render block, you can refer to $root to get an ElementReference for the current template root, in the example below it would point at Thing. You can also use $parent to refer to an element's parent. This is available everywhere that $element is valid and always points to the currently executing element's parent. template Thing { before:update =&gt; { $element.SetAttribute(&quot;ticked&quot;, true); // in a top level declaration $element points to Thing } render { Text($&quot;the element is {$element}&quot;); // refers to the Text element Text($&quot;the element is {$root}&quot;); // refers to the Thing, which is the template root run $element.SetAttribute(&quot;illegal&quot;, true); // $element points nowhere, this is not allowed run $root.SetAttribute(&quot;illegal&quot;, false); // $root points to Thing, totally fine run $parent.SetAttribute(&quot;fine, &quot;yep&quot;); // $parent points at Thing's parent. this MAY be invalid if Thing is a view root and has no parent. Element1(value = $parent) { // $parent == Thing Element2(value = $parent) { // $parent == Element1 } } }  Inside of a decorator, $element points to the element being decorated. decorator SomeDecorator { before:update =&gt; $element.stlye.BackgroundColor = `red`; }  "},{"title":"Template Reflection","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/templates/template_reflection","content":"Template Reflection caution This document is a WORK IN PROGRESS","keywords":""},{"title":"Execution Graphs","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/templates/graph_docs","content":"","keywords":""},{"title":"Sequence sequence(Action a)​","type":1,"pageTitle":"Execution Graphs","url":"/EvolveUIDocs/docs/templates/graph_docs#sequence-sequenceaction-a","content":"Runs a set of steps sequentially. Each step will run until it completes, then the next step will run "},{"title":"Parallel parallel(Action a)​","type":1,"pageTitle":"Execution Graphs","url":"/EvolveUIDocs/docs/templates/graph_docs#parallel-parallelaction-a","content":"Runs a set of steps in parallel. This node completes when all of its children are finished "},{"title":"Log log(string message)​","type":1,"pageTitle":"Execution Graphs","url":"/EvolveUIDocs/docs/templates/graph_docs#log-logstring-message","content":"Logs the message and completes immediately "},{"title":"Log log(Func<string> fn)​","type":1,"pageTitle":"Execution Graphs","url":"/EvolveUIDocs/docs/templates/graph_docs#log-logfuncstring-fn","content":"Logs the result of the function and completes immediately "},{"title":"Pause pause(int milliseconds)​","type":1,"pageTitle":"Execution Graphs","url":"/EvolveUIDocs/docs/templates/graph_docs#pause-pauseint-milliseconds","content":"Pauses for the set number of milliseconds and completes when the duration has elapsed "},{"title":"AwaitEvent awaitEvent(string eventName)​","type":1,"pageTitle":"Execution Graphs","url":"/EvolveUIDocs/docs/templates/graph_docs#awaitevent-awaiteventstring-eventname","content":"Waits until the graph receives an event with the given eventName "},{"title":"EmitEvent emitEvent(string eventName)​","type":1,"pageTitle":"Execution Graphs","url":"/EvolveUIDocs/docs/templates/graph_docs#emitevent-emiteventstring-eventname","content":"Emits an event with eventName on the graph and completes immediately "},{"title":"WaitFrames waitFrames(int frameCount)​","type":1,"pageTitle":"Execution Graphs","url":"/EvolveUIDocs/docs/templates/graph_docs#waitframes-waitframesint-framecount","content":"Waits frameCount frames and then completes "},{"title":"Custom Graph nodes​","type":1,"pageTitle":"Execution Graphs","url":"/EvolveUIDocs/docs/templates/graph_docs#custom-graph-nodes","content":"you can define your own graph actions by extending GraphNode. You just need to set IsCompleted at the right time and implement your Update override "},{"title":"Other Graph Nodes​","type":1,"pageTitle":"Execution Graphs","url":"/EvolveUIDocs/docs/templates/graph_docs#other-graph-nodes","content":"the ElementHandle type provides wrappers around other node types like SetAttribute and Animate.. "},{"title":"Style Syntax","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/styles/style_syntax","content":"","keywords":""},{"title":"Basics​","type":1,"pageTitle":"Style Syntax","url":"/EvolveUIDocs/docs/styles/style_syntax#basics","content":"Every style begins with a style keyword and then a unique name. The definition of the style itself come with a set of curly braces. Inside this definition are the properties and values that should apply to that element. Below is a simple style for a 100 by 50 pixel box that colored orange. // comments use the double slash syntax style orange-box { PreferredWidth = 100px; PreferredHeight = 50px; BackgroundColor = orange; }  "},{"title":"Constants​","type":1,"pageTitle":"Style Syntax","url":"/EvolveUIDocs/docs/styles/style_syntax#constants","content":"It can be convenient to declare some values as reusable constants. You can do this with the const keyword. Constants are defined only at the outer most scope in the file. Lets say that orange-box style should instead have a color value defined from a constant. const boxColor = hotpink; style colored-box { PreferredWidth = 100px; PreferredHeight = 50px; BackgroundColor = @boxColor; // constants are referred to with the '@' operator }  "},{"title":"Queries​","type":1,"pageTitle":"Style Syntax","url":"/EvolveUIDocs/docs/styles/style_syntax#queries","content":"Queries are simple ways to style elements based on some application state. To build on our colored-box example from before, let's apply an outline color to the box when it gets hovered by the mouse. const boxColor = hotpink; style colored-box { PreferredWidth = 100px; PreferredHeight = 50px; BackgroundColor = @boxColor; // apply a 2 pixel wide black outline on hover [hover] { OutlineWidth = 2px; OutlineColor = black; } }  An in depth guide to which queries are available is here Queries can also be nested. We can make our colored-box outline appear only when we have an attribute outlined and our box is currently hovered by nesting two queries. Queries can be nested as deep as you like but you can have at most 63 queries on a single style regardless of nesting depth. style colored-box { PreferredWidth = 100px; PreferredHeight = 50px; BackgroundColor = @boxColor; [attr:outlined] { [hover] { // only apply the outline when we have the 'outlined' attribute and we are hovered OutlineWidth = 2px; OutlineColor = black; } } }  An important concept with styling is the idea of precidence. This determines how competing styles figure out who wins. Let's add another query to highlight this. style colored-box { PreferredWidth = 100px; PreferredHeight = 50px; BackgroundColor = @boxColor; // apply a 2 pixel wide black outline on hover [hover] { OutlineWidth = 2px; OutlineColor = black; } // make the outline color white when we have the 'outlined' attribute applied [attr:outlined] { OutlineColor = white; } }  So now we have a problem. Both the [hover] query and the [attr:outlined] query define a color. When we hover the element, which color will it end up being? Each 'block' of styling applied to an element has a precedence score. The more nested a block is, the more precedence it has. The stateful queries [hover], [focus], and [active] have a higher level importance even though they might be defined at the 'depth' as another query. So in the end because of its elevated importance, the [hover]query wins out over the [attr:outlined] and the outline color will be black. "},{"title":"Mixins​","type":1,"pageTitle":"Style Syntax","url":"/EvolveUIDocs/docs/styles/style_syntax#mixins","content":"Mixins are reusable styles that can optionally be parameterized. Let's add some behavior to colored-box from a mixin. Let's say we want a reusable style that applies rounding to the corners of an element when it's hovered. Here is how we'd do that with a mixin. mixin rounded-hover { [hover] { CornerRadius = 50%; } } style colored-box { PreferredWidth = 100px; PreferredHeight = 50px; BackgroundColor = @boxColor; mixin(rouned-hover); // this basically copy-pastes the contents of the 'rounded-hover' mixin into this statement. // any queries or other properties are also copied }  Let's take that example one step further and make it a function that can use a variable for how much rounding we apply. // we introduce a parameter called roundness with a default value of 50%; mixin rounded-hover-with-parameter(roundness = 50%) { [hover] { CornerRadius = %{roundness}; // use our parameter instead of applying a hard coded value } } style colored-box { PreferredWidth = 100px; PreferredHeight = 50px; BackgroundColor = @boxColor; // invoke our mixin but assign roundness to 10px instead of the default 50% mixin(rouned-hover-with-parameter) { roundness = 10px; } }  Styles can also be mixed into other styles and behave just like mixin except they cannot provide parameters. style mix-me { Margin = 20px; Padding = 20px; } style colored-box { PreferredWidth = 100px; PreferredHeight = 50px; BackgroundColor = @boxColor; // re-use the 'mix-me' style's properties to apply both margin and padding to this box mixin(mix-me); }  "},{"title":"Variables​","type":1,"pageTitle":"Style Syntax","url":"/EvolveUIDocs/docs/styles/style_syntax#variables","content":"We talked about constants before which lets us define values one place and reuse them across multiple styles without having to go find those values later if we want to change them. This can go one step further with variables. Variables let us define values dynamically and then makes those values available to all descendant elements too. Here is an example where we want to make a Button element that dynamically define the color of its text based on a variable. style &lt;Button&gt; { [attr:primary] { set buttonText = red; } [attr:secondary] { set buttonText = green; } } style button-text { // variable syntax is using the `var` function that has the first argument set to the variable we want to read // and the second argument is the value to use if the variable is not defined. TextColor = var(buttonTextColor, white); } // in a .ui file template Button { Text(&quot;Click Me&quot;, style = [@button-text]); } template ButtonSample { Button(); // text is white since we have no variable set we use the default Button(attr:primary); // text is red Button(attr:secondary); // text is green }  "},{"title":"Transitions​","type":1,"pageTitle":"Style Syntax","url":"/EvolveUIDocs/docs/styles/style_syntax#transitions","content":"Transitions are easy-mode animations. They basically work by observing style properties and when the property value changes, instead of setting the new value immediately, it will smoothly transition from the old value to the new value. Here is how it works style AnimateColor { // define a transition that uses an easing curve of QuarticEaseIn, // has a duration of 1000ms and applies to the BackgroundColor property transition QuarticEaseIn 1000ms = BackgroundColor; BackgroundColor = white; // transition will work from any change source, but hover is an easy one to demonstrate [hover] { BackgroundColor = black; } }  Transitions can be defined in any block scope and apply as long as that scope is active and has the highest precedence. The basic syntax is // basic syntax is the transition keyword, // then the interpolator // then the duration (if applicable) // then the delay (optionally) // then = a comma seperated list of properties to apply to transition *easingfn* 1000ms 500ms? = PreferredWidth, BackgroundColor;  There are three interopolator options for transitions. The most basic is the easing mode. All of the easing functions listed here are supported. "},{"title":"Easing Transitions​","type":1,"pageTitle":"Style Syntax","url":"/EvolveUIDocs/docs/styles/style_syntax#easing-transitions","content":"When defining a transition with an ease interpolator, a duration is required and a delay is optional. style ease-circ { // circular ease in with a 2 second duration and a half second delay transition EaseInCirc 2000ms 500ms = PaddingLeft; }  "},{"title":"Bezier Transitions​","type":1,"pageTitle":"Style Syntax","url":"/EvolveUIDocs/docs/styles/style_syntax#bezier-transitions","content":"You can also provide your own bezier curve definition. You probably want to use a tool like thisto find the right numbers for the desired curve. Just like easing curves, bezier transitions also require a duration and optionally accept a delay transition bezier(0.17, 0.67, 0.83, 0.67) 500ms = PreferredWidth; transition bezier(0.17, 0.67, 0.83, 0.67) 500ms 200ms = PreferredWidth;  "},{"title":"Spring Physics Transitions​","type":1,"pageTitle":"Style Syntax","url":"/EvolveUIDocs/docs/styles/style_syntax#spring-physics-transitions","content":"Springs are pretty awesome. Instead of using a curve and fixed duration, they run until they settleSettling means that the motion provided by the spring is very close to 0. This provides much more natural feeling animations that are very pleasing to the human eye because they based on nature and not arbitrary timing values. Here is a great resource on how they can be use for animation Here are some other ways to define spring transitions. There are a few default spring configurations that exist as keywords defaultgentlestiffwobblyslowsuperslow You can define a spring using one of those keywords, a constant, or by providing the values directly. const mySpring = wobbly; transition spring(@mySpring) = PreferredWidth; transition spring(gentle) = PreferredWidth; transition spring(default) = PreferredWidth; transition spring(120, 10) = PreferredWidth; // stiffness, damping transition spring(120, 10, 1) = PreferredWidth; // stiffness, damping, mass // stiffness, damping, mass, precision (how close to 0 we need to be in order to be considered 'settled' transition spring(120, 10, 2, 0.1) = PreferredWidth;  "},{"title":"Element References","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/templates/element_reference","content":"","keywords":""},{"title":"Element references with companion types​","type":1,"pageTitle":"Element References","url":"/EvolveUIDocs/docs/templates/element_reference#element-references-with-companion-types","content":"When defining a companion type in C#, you can define a public, non readonly field of type ElementReference and mark it with the attribute [InjectElementReference]and the system will set the value of this field to the paired ElementReference. // when used as a companion, the myElementReference will be set by the system. This still works even if this companion type // is used as a companion for a decorator. Note that it will NOT be set when used as the companion of a `function`, because functions // are not mapped 1-1 with elements. No error will be thrown in this case, the field will simply not be initialized. public class SomeCompanion { [InjectElementReference] public ElementReference myElementReference; }  "},{"title":"Generics","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/templates/generics","content":"Generics Generics in Evolve are closer to the C++ concept of templates than the C# idea of generics. When a template declares itself as generic, the generic parameters given act as placeholders for a type name. This means that you can do things with them that C# normally does not allow. Here is an example of a slider element that has a generic &lt;T&gt; type. For this example our slider could represent T as any numeric value such float or int or double. Let's say we want our slider to have default parameters where the minValue is equal to the smallest number representable by type T. Usually in C# we'd use float.MinValue and friends to represent this. We want our template to work with different number types, not just float. Normally in C# this wouldn't be possible without a lot of trickery. In Evolve, because generics are just type name aliases, we can express this simply as T.MinValue or T.MaxValue. We can even go further and call static methods on the T type such as T.Parse(). Unlike in C#, Evolve's generics do no have the concept of constraints (the where clause in C#). This means that if you try to do a operation on T that is not defined, you'll get a compile error. template RangeSlider&lt;T&gt; { required T value; optional T minValue = T.MinValue; optional T maxValue = T.MaxValue; render { // content here, assume value is clamped between minValue and maxValue } } ","keywords":""},{"title":"Modules","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/templates/modules","content":"Modules The idea behind modules is that they are portable between projects. They package templates, styles, and assets together and serve as a basis for resolving imports within .ui files. Modules can have dependencies on other modules. There are no visibility rules for elements, all template / element declarations are considered to be public. If a module (A) includes a dependency on another module (B) and (B) declares a dependency on (C), and (A) wants to reference something in (C), (A) must declare a dependency on (C), it does NOT automatically inherit (B)'s dependency on (C) Modules are file system scoped and cannot be nested. A template &amp; style file belong to the nearest module at the same level or above them in the file tree. If no module asset exists in the project, it is an error. When resolving names for templates &amp; styles, the module in which the template or style is being used is first searched. If there is a template or style that is found, then it is used. If we didn't find the target in the local module, then all of the auto imports and explicit imports are searched. If there is only one match then it is taken. If multiple matches occur then an error is shown and you need to explicitly disambiguate using a ModuleAlias::YourThing fully qualified identifier. // some file.ui import SomeModuleName; import OtherModule as Lib; // import 'OtherModule' and alias it as 'Lib' // A Module (which is an asset in Unity) can define a list of auto imports // and these function as though the user had written `import SomeModule` // in every file belonging to that module template Something render { // the scope resolution operator is used to reference elements residing in imported modules SomeModuleName::Button(); Lib::Button(); // using the alias OtherModule::Button(); // using the full name, same result as the line above Button(); // if no scope resolution operator is present, resolution is as follows // 1. If the 'current' module in which this file is defined defines // a template called 'Button', then we us it. // 2. If the current module does not define 'Button', we look all the // imported modules declared in this file and search for 'Button'. // If one is found, we use it. If multiple imported modules define // 'Button', we throw an Ambiguous import error and the user is required // to use the :: operator to specify which version of 'Button' to use } ","keywords":""},{"title":"Code Blocks","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/templates/body_block/code_blocks","content":"","keywords":""},{"title":"...and in the render scope​","type":1,"pageTitle":"Code Blocks","url":"/EvolveUIDocs/docs/templates/body_block/code_blocks#and-in-the-render-scope","content":"As templates are executed it can be helpful to inject C# logic in some places, directly in the template. This can be easily achieved using a code block in a template. There are three types of code block run which is executed every framecreate which is executed in the frame the containing scope was createdenable which is executed in the frame the containing scope was enabled All blocks have the same syntax template BlockSample render { run Debug.Log(&quot;As a statement without a block&quot;); run { int x = 4; x *= 10; Debug.Log(&quot;with a block multiple statements will be executed&quot;); } create Debug.Log(&quot;Runs when the scope gets created&quot;); create { Debug.Log(&quot;Runs when the scope gets created&quot;); Debug.Log(&quot;Runs when the scope gets created&quot;); } enable Debug.Log(&quot;Runs when the scope gets enabled&quot;); enable { Debug.Log(&quot;Runs when the scope gets enabled&quot;); Debug.Log(&quot;Runs when the scope gets enabled&quot;); } }  There are no disable or destroy blocks because destruction is handled asynchronously. "},{"title":"Outside of the render scope​","type":1,"pageTitle":"Code Blocks","url":"/EvolveUIDocs/docs/templates/body_block/code_blocks#outside-of-the-render-scope","content":"There are no code blocks outside of the render scope. Instead you'll be able to define life cycle and other local methods. Be sure not to confuse the enable and create code block with the similarly named life cycle methods. Read more about those in thelife cycle documentation template BlockSample { // parameters, attributes, styles and life cycle methods go here before:enable =&gt; Debug.Log(&quot;this runs before the enable code block runs&quot;); render { enable { // ... } } }  "},{"title":"Expression Syntax","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/templates/expression_syntax","content":"Expression Syntax caution This document is a WORK IN PROGRESS color.r = when { color.r == 1 -&gt; 2; color.r == 2 -&gt; 3; }; color.g = when { color.r == 1 -&gt; 2; default -&gt; 7; color.r == 2 -&gt; 3; }; color = Color.red -&gt; [c] { c.r *= 0.5; c.g = 1; c.a = 0.1; }; state int[] valuesSized = new int[5]; state int[] valuesList = new int[] { 1, 2, 3 }; state int[] valuesExtruded = new int[4] -&gt; [a] { a[1] = 1; a[2] = 2; valuesSized[4] = 1; }; run len[0] = 8; ","keywords":""},{"title":"Lifecycle and Identity","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/templates/structural_identity","content":"","keywords":""},{"title":"Asynchronous Lifecycle​","type":1,"pageTitle":"Lifecycle and Identity","url":"/EvolveUIDocs/docs/templates/structural_identity#asynchronous-lifecycle","content":"There are two classes of events which are not executed as your code runs each frame: disable and destroy. For performance reasons we only run these handlers at the start of the next frame. It is illegal / undefined behavior if you have a disable/destroy handler that uses a closure to close over any fields / state in a template. Generally, you should not have to worry about this because the system makes it very hard to do, but in case you are tempted to trick the system into doing something crazy: you've been warned! "},{"title":"Grid Layout","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/templates/grid_layout_docs","content":"Grid Layout caution This document is a WORK IN PROGRESS A grid is a 2d layout box that works by taking a template definition on the row and column axis Items can be placed explicitly in numbered grid cells or placed implicitly using one of two placement algorithms(explained later) Grids are fixed in the main axis direction: their cell count will not grow. In the cross axis direction we can place overflow the grid as much as we want and it will adapt to fit. Items can placed either explicitly by using the GridItem style (syntax = uint span unit, GridItemX = 1 span 3would mean: Place this in column 1 and span 3 rows (or the opposite if LayoutType = GridVertical) Grid gap can be achieved via 'HorizontalSpaceBetween' and 'Vertical Space Between' grid templates can take up to 24 values each value is made up of a unit, a 16bit float value, and a ushort stretch value parser syntax: 100px_1s 300px HorizontalWrap First layout the main axis, if elements do not fit we add a new line box and continue adding elements until that line is full or we are done. repeat Because we need to solve the main axis first, we can't resolve aspect locks that are locked to the cross axis size. SpaceBetween on the cross axis works to like grid gap: we don't put space between the elements but rather between the layout lines. This means collapsing on the cross axis also collapses space not between the elements but between the element and the spacer size on the cross axis. ","keywords":""},{"title":"Style Queries","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/styles/style_queries","content":"","keywords":""},{"title":"Basic State Queries​","type":1,"pageTitle":"Style Queries","url":"/EvolveUIDocs/docs/styles/style_queries#basic-state-queries","content":""},{"title":"Hover​","type":1,"pageTitle":"Style Queries","url":"/EvolveUIDocs/docs/styles/style_queries#hover","content":"Hover is active on elements that the mouse or other non-touch pointing device is currently over. It works by finding the deepest element in the list of all elements that intersect or contain the point and then all elements that are ancestors of that element are also marked as hovered. style hover-me { [hover] { BackgroundColor = hotpink; } }  "},{"title":"Focus​","type":1,"pageTitle":"Style Queries","url":"/EvolveUIDocs/docs/styles/style_queries#focus","content":"Focus is set explicitly by the runtime when an element becomes focused. style focus-me { [focus] { TextFontSize = 100px; } }  "},{"title":"Active​","type":1,"pageTitle":"Style Queries","url":"/EvolveUIDocs/docs/styles/style_queries#active","content":"Active is triggered on the element that the mouse was down on (following the same hierarchy rules as [hover]) and continues to apply until the mouse is up. style handle-active { [active] { CornerRadiusTopLeft = 50%; } }  "},{"title":"Init​","type":1,"pageTitle":"Style Queries","url":"/EvolveUIDocs/docs/styles/style_queries#init","content":"Init is set on elements for only the frame in which they were first created or became enabled. This is useful for tracking animations values or transitons. On the first frame set opacity to 0 and then transition it the default value (100%) style handle-init { transition spring(default) = Opacity; [init] { Opacity = 0%; } }  "},{"title":"Hierarchy State Queries​","type":1,"pageTitle":"Style Queries","url":"/EvolveUIDocs/docs/styles/style_queries#hierarchy-state-queries","content":"States within an element's hierarchy can be queried using a more advanced form of the state selectors. The examples below will use the focus state but the same behavior applies to hover, active and init as well  style fade-when-ancestor-focused { [focus ancestor] { Opacity = 50%; } } style turn-blue-when-child-focused { [focus child] { BackgroundColor = blue; } } style round-corners-when-parent-focused { [focus parent] { CornerRadius = 25%; } } style padd-left-when-descendant-focused { [focus descendant] { PaddingLeft = 25px; } }  "},{"title":"Attribute Queries​","type":1,"pageTitle":"Style Queries","url":"/EvolveUIDocs/docs/styles/style_queries#attribute-queries","content":"Elements can also be styled based on the presence or lack of attributes that were set either in a ui file or from C#. Styling can be done by either checking if the attribute key exists and matching any value, or by specifically matching only certain values. style handle-selected { // no value defined so as long as the element has a 'selected' // attribute the text will be yellow [attr:selected] { TextColor = yellow; } // this will only match when the element has the attribute 'selected' // and the value of that attribute is 'selection1' [attr:selected=&quot;selection1&quot;] { BackgroundColor = blue; } }  We can also style based on the lack of an attribute match style handle-selected { // if the element doesn't have a 'selected' attribute, make the text red [unless attr:selected] { TextColor = red; } // this will match if the element either doesn't have the attribute 'selected', // or it has the 'selected' attribute but the value is NOT equal to 'selection1' [unless attr:selected=&quot;selection1&quot;] { BackgroundColor = blue; } }  "},{"title":"Hierarchy Attribute Queries​","type":1,"pageTitle":"Style Queries","url":"/EvolveUIDocs/docs/styles/style_queries#hierarchy-attribute-queries","content":"Similar to how states can be queried across the hierarchy, attributes can also be queried. style check-ancestor-attribute { [when ancestor attr:key] { } [when ancestor attr:key = &quot;SomeValue&quot;] { } } style check-children-attribute { [when child attr:key] {} [when child attr:key = &quot;SomeValue&quot;] {} } style check-descendant-attribute { [when child attr:key] {} [when child attr:key = &quot;SomeValue&quot;] {} } style check-parent-attribute { [when parent attr:key] {} [when parent attr:key = &quot;SomeValue&quot;] {} }  "},{"title":"Child Count Queries​","type":1,"pageTitle":"Style Queries","url":"/EvolveUIDocs/docs/styles/style_queries#child-count-queries","content":"You can also style an element based on how many children it has and even pass in a comparison expression. The numeric comparison value must be a positive integer constant. style red-when-empty { // no children [when empty] { BackgroundColor = red; } // same as [when empty] above [when child-count(0)] { BackgroundColor = red; } } style child-count { [when child-count(== 2)] {} [when child-count(!= 2)] {} [when child-count(&lt;= 10)] {} [when child-count(&gt;= 10)] {} [when child-count(&gt; 5)] {} [when child-count(&lt; 5)] {} }  "},{"title":"Child Index Queries​","type":1,"pageTitle":"Style Queries","url":"/EvolveUIDocs/docs/styles/style_queries#child-index-queries","content":"It is often helpful to know if an element you are styling is the first child, or the last child or at some other index. Child Index Queries exist for exactly this purpose and are quite powerful! "},{"title":"Only Child​","type":1,"pageTitle":"Style Queries","url":"/EvolveUIDocs/docs/styles/style_queries#only-child","content":"Matches when the element is the ony child within a parent style blue-text-when-lonely { [when only-child] { TextColor = blue; } }  "},{"title":"First and Last Child​","type":1,"pageTitle":"Style Queries","url":"/EvolveUIDocs/docs/styles/style_queries#first-and-last-child","content":"Matches when the element is the first child of its parent or the last child respectively style first-child-turns-orange-last-child-turns-green { [when first-child] { BackgroundColor = orange; } [when last-child] { BackgroundColor = green; } }  "},{"title":"Nth-Child​","type":1,"pageTitle":"Style Queries","url":"/EvolveUIDocs/docs/styles/style_queries#nth-child","content":"Takes a function expression that describes how children will be matched by this query in a 1-based indexing scheme. Works identically to n-th child expression in css style fancy-matching { // turn the element outline white if it is the second child [when nth-child(2)] { OutlineColor = white; } // turn every fourth element pink [when nth-child(4n)] { BackgroundColor = pink; } // turn the first three element blue [when nth-child(-n + 3)] { BackgroundColor = blue; } // turns all elements except the first three yellow [when nth-child(n + 3)] { BackgroundColor = yellow; } // Turns elements 4 [=(3×0)+4], 7 [=(3×1)+4], 10 [=(3×2)+4], 13 [=(3×3)+4], etc black [when nth-child(3n + 4) { BackgroundColor = black; } }  "},{"title":"Even and Odd Children​","type":1,"pageTitle":"Style Queries","url":"/EvolveUIDocs/docs/styles/style_queries#even-and-odd-children","content":"Matches when the element is at an even or odd child index  style alternate-fonts { [when nth-child(odd)] { TextFontAsset = &quot;Font1&quot;; } [when nth-child(even)] { TextFontAsset = &quot;Font2&quot;; } }  "},{"title":"Tag Queries​","type":1,"pageTitle":"Style Queries","url":"/EvolveUIDocs/docs/styles/style_queries#tag-queries","content":"Elements can also be styled based on their tag name with relational filtering. style tag-based-styling { [when tag(TagName)] [when tag(ModuleName::TagName)] [when root-tag(TagName)] [when root-tag(ModuleName::TagName)] [when parent-tag(TagName)] [when parent-tag(ModuleName::TagName)] [when ancestor-tag(TagName)] [when ancestor-tag(ModuleName::TagName)] [when child-with-tag(TagName)] [when child-with-tag(ModuleName::TagName)] [when descendant-with-tag(TagName)] [when descendant-with-tag(ModuleName::TagName)] [when first-with-tag(TagName)] [when first-with-tag(ModuleName::TagName)] [when last-with-tag(TagName)] [when last-with-tag(ModuleName::TagName)] [when only-with-tag(TagName)] [when only-with-tag(ModuleName::TagName)] }  "},{"title":"Condition Queries​","type":1,"pageTitle":"Style Queries","url":"/EvolveUIDocs/docs/styles/style_queries#condition-queries","content":"Sometimes you just need more power. Maybe you're implementing a resposive design or maybe you have a game that enters a certain state and you want to change the look of some elements based on game state. With condition queries you can make up your own query logic and have the style system respond to it. Unlike the other query types listed so far, condition queries require some C# code to work. Here is how to define them. First we need to make callback that matches the delegate type.  delegate bool StyleConditionEvaluator(UIView view, DeviceInfo deviceInfo); // DeviceInfo has the following interface: struct DeviceInfo { float dpiScale; float GetScaledScreenWidth(); float GetScaledScreenHeight(); }  This example will style an element differently depending on the aspect ratio of our screen. So let's provide conditions callbacks to check if width is larger than height and vice versa; While this example is super simple, you can run any code you want in this function. Maybe you want to check if your player is injured, or possesses some item, or if the internet connection got interrupted in an MMO game... you can make this do whatever you like. StyleConditionEvaluator widthLarger = (UIView view, DeviceInfo deviceInfo) =&gt; { return Screen.width &gt; Screen.height; }; StyleConditionEvaluator heightLarger = (UIView view, DeviceInfo deviceInfo) =&gt; { return Screen.height &gt; Screen.width; };  Now we need to register these functions with our UIApplication using the SetStyleCondition api. UIApplication application; // assume you set this somehow, probably from your UIRoot. application.SetStyleCondition(&quot;WidthIsLarger&quot;, widthLarger); application.SetStyleCondition(&quot;HeightIsLarger&quot;, heightLarger);  The evaluator functions are called every frame and are invoked once per active view in the application (Hence the UIView argument in the StyleConditionEvaluator delegate). Now that our functions are setup, let's write a style that can use them. style size-based-on-screen-aspect { // if the screen width is larger than height, make our width 500px [when &quot;WidthIsLarger&quot;] { PreferredWidth = 500px; } // if the screen width is smaller than height, make our width 250px [when &quot;HeightIsLarger&quot;] { PreferredWidth = 250px; } }  "},{"title":"Property Types","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/styles/style_types_generated","content":"","keywords":""},{"title":"AlignmentBoundary​","type":1,"pageTitle":"Property Types","url":"/EvolveUIDocs/docs/styles/style_types_generated#alignmentboundary","content":"A value that is used to constrain the result of aligning an element. Value\tDescriptionNone\tThe element has no boundary and no clamping will occur Screen\tThe element's position is clamped to the screen. This ensures the element remains on screen Parent\tThe element's position is clamped inside the bounds of it's parent ParentContentArea\tThe element's position is clamped to the it's parent size minus any padding or border the parent has on the relaveant axis Clipper\tThe element's position is clamped to the it's clipper's bounds View\tThe element's position is clamped to the it's view's bounds UnconstrainedParent\tThe element's position is clamped to the it's parent's bounds but ignores the element's size, effectively ensuring the alignment point remains inside the parent but the rest of the element is unconstrained syntax​ "},{"title":"AlignmentDirection​","type":1,"pageTitle":"Property Types","url":"/EvolveUIDocs/docs/styles/style_types_generated#alignmentdirection","content":"Determines the direction that alignment will occur. Value\tDescriptionStart\tThe element aligns from the left side of the parent End\tThe element aligns from the right side of the parent syntax​ "},{"title":"AlignmentOffset​","type":1,"pageTitle":"Property Types","url":"/EvolveUIDocs/docs/styles/style_types_generated#alignmentoffset","content":"Offsets the point from which alignment occurs Unit\tShorthand\tDescriptionWidth\tw\tThe width of the element Height\th\tThe height of the element ContentHeight\tcnth\tThe content height of the element ContentWidth\tcntw\tThe content width of the element Em\tem\tThe em size resolved for this element ParentWidth\tpw\tThe post layout width of the parent element or the view size if parent is null ParentHeight\tph\tThe post layout height of the parent element or the view size if parent is null ParentContentAreaWidth\tpcaw\tThe parent's width (or viewport width if parent is null) minus any border and padding on the horizontal axis ParentContentAreaHeight\tpcah\tThe parent's height (or viewport height if parent is null) minus any border and padding on the vertical axis ContentAreaWidth\tcaw\tThe post layout width of the element minus any padding and border on the horizontal axis ContentAreaHeight\tcah\tThe post layout height of the element minus any padding and border on the vertical axis Percent\t%\tA percentage based value, the value that this is relative to changes based on the property usage. See individual properties to see what the % relative value is Pixel\tpx\tA fixed pixel value that accounts for any dpi scaling ScreenWidth\tsw\tThe total screen width in dpi scaled pixels ScreenHeight\tsh\tThe total screen height in dpi scaled pixels ViewportWidth\tvw\tThe width of the view that an element belongs to in dpi scaled pixels ViewportHeight\tvh\tThe height of the view that an element belongs to in dpi scaled pixels BackgroundImageWidth\tbw\tThe width of the currently assigned background texture in unscaled texels BackgroundImageHeight\tbh\tThe height of the currently assigned background texture in unscaled texels syntax​ "},{"title":"AlignmentTarget​","type":1,"pageTitle":"Property Types","url":"/EvolveUIDocs/docs/styles/style_types_generated#alignmenttarget","content":"Determines the point against which an element applies alignments. Value\tDescriptionLayoutBox\tThe element aligns relative to it's own layout position and size Clipper\tThe element aligns relative to it's clippers position and size or it's view if there is no clipper Parent\tThe element aligns relative to it's parent position and size ParentContentArea\tThe element aligns relative to it's parent position and size inset by any padding and border the parent has on the relavant axis View\tThe element aligns relative to it's view Screen\tThe element aligns relative to the screen Mouse\tThe element aligns relative to the mouse position. This is an easy way to make things follow the mouse syntax​ "},{"title":"AspectRatio​","type":1,"pageTitle":"Property Types","url":"/EvolveUIDocs/docs/styles/style_types_generated#aspectratio","content":"Constrains the element's size based on a provided aspect ratio. There are two valid values WidthControlsHeight and HeightControlsWidth These modes in conjuction with a ratio define the size constraints for this element during layout. There are some layout types that cannot support this in some cases, most notably HorizontalWrap and VerticalWrapcannot support element's aspect ratio constraints on the main axis. Style syntax examples: height-ctrl-width 1:1width-ctrl-height 3:2height-ctrl-width 5:1 syntax​ "},{"title":"BackgroundFit​","type":1,"pageTitle":"Property Types","url":"/EvolveUIDocs/docs/styles/style_types_generated#backgroundfit","content":"Determines how an element's background texture will scale with the element's rendered size. Value\tDescriptionScaleToFit\tThe image will scale up or down with element size but will retain it's native aspect ratio ScaleToFitAndOverflow\tThe image will scale up or down with element size but will retain it's native aspect ratio, allows the texture to overflow the element size Fill\tThe image will always fill the entire element and will not retain its native aspect ratio syntax​ "},{"title":"BorderMode​","type":1,"pageTitle":"Property Types","url":"/EvolveUIDocs/docs/styles/style_types_generated#bordermode","content":"Currently Unused syntax​ "},{"title":"ClipBehavior​","type":1,"pageTitle":"Property Types","url":"/EvolveUIDocs/docs/styles/style_types_generated#clipbehavior","content":"Determines what kind of rectangles can clip this element. Value\tDescriptionNormal\tThe element is clipped against the next highest element in it's ancestry with an OverflowX or OverflowY property defined Never\tThe element will never be clipped View\tThe element will clip only against it's view Screen\tThe element will clip only against the screen syntax​ "},{"title":"ClipBounds​","type":1,"pageTitle":"Property Types","url":"/EvolveUIDocs/docs/styles/style_types_generated#clipbounds","content":"Determines the rectangle considered for clipping children when OverflowX or OverflowY are set for an element Value\tDescriptionBorderBox\tThe clipping size is determined based on the full size of the element ContentBox\tThe clipping size is determined based on the full size of the element and inset by any padding or border on the clipping element syntax​ "},{"title":"CursorInfo​","type":1,"pageTitle":"Property Types","url":"/EvolveUIDocs/docs/styles/style_types_generated#cursorinfo","content":"A reference to a cursor asset syntax​ "},{"title":"ElementRelativeSize​","type":1,"pageTitle":"Property Types","url":"/EvolveUIDocs/docs/styles/style_types_generated#elementrelativesize","content":"A size that is relative to an element's post layout size. % is relative to the element's height or width depending on which axis this property is applied to. Unit\tShorthand\tDescriptionWidth\tw\tThe width of the element Height\th\tThe height of the element Percent\t%\tA percentage based value, the value that this is relative to changes based on the property usage. See individual properties to see what the % relative value is Pixel\tpx\tA fixed pixel value that accounts for any dpi scaling BackgroundImageWidth\tbw\tThe width of the currently assigned background texture in unscaled texels BackgroundImageHeight\tbh\tThe height of the currently assigned background texture in unscaled texels MinWidthHeight\tmnwh\tThe minimum of the target's width or height MaxWidthHeight\tmxwh\tThe maximum of the target's width or height syntax​ "},{"title":"FontAssetId​","type":1,"pageTitle":"Property Types","url":"/EvolveUIDocs/docs/styles/style_types_generated#fontassetid","content":"A reference to a Font asset syntax​ "},{"title":"FontStyle​","type":1,"pageTitle":"Property Types","url":"/EvolveUIDocs/docs/styles/style_types_generated#fontstyle","content":"Not yet implemented Value\tDescriptionNormal\tThe text will render normally without decoration Bold\tThe text will render with a bold font if available or a pseudo bold if no bold font is provided Italic\tThe text will render with an italic font if available or a pseudo italic if no italic font is provided Underline\tThe text will render with an underline StrikeThrough\tThe text will render with a strike though Multiple values can applied with an | operator. For example to render both bold and italic: Bold | Italic syntax​ "},{"title":"GridItemPlacement​","type":1,"pageTitle":"Property Types","url":"/EvolveUIDocs/docs/styles/style_types_generated#griditemplacement","content":"Defines how an element is placed inside of a grid layout. Only applies if the element's layout parent is a grid This is made of two parts, a place and a span. place refers to the coordinate on the relevant axis that the element should placed on. If place &lt; 0 the grid will automatically place the element in the next available cell(s). span tells the grid how wide or tall the element should be inside the grid. If span &lt;= 0 it will default to 1 syntax​ "},{"title":"GridLayoutDensity​","type":1,"pageTitle":"Property Types","url":"/EvolveUIDocs/docs/styles/style_types_generated#gridlayoutdensity","content":"Grids can either be Dense or Sparse. When a grid places element inside of itself, Dense will always try to place new elements starting at the first cell where Sparse will remember the last place it successfully placed and element and will continue placement from that point. Sparse is faster since the search range is reduced. syntax​ "},{"title":"GridTemplate​","type":1,"pageTitle":"Property Types","url":"/EvolveUIDocs/docs/styles/style_types_generated#gridtemplate","content":"Grids define a template of cells that determine how elements are sized and placed within it. A grid can define a maximum of 24 cells on each axis syntax​ "},{"title":"ImageRenderMode​","type":1,"pageTitle":"Property Types","url":"/EvolveUIDocs/docs/styles/style_types_generated#imagerendermode","content":"Not yet implemented syntax​ "},{"title":"LayoutBehavior​","type":1,"pageTitle":"Property Types","url":"/EvolveUIDocs/docs/styles/style_types_generated#layoutbehavior","content":"An element can either participate in it's parent's layout phase (Normal) or not (Ignored). An element with LayoutBehavior = Ignoredwill be totally ignored by it's parent and will not contribute to it's parent size at all. Ignored elements are always laid out at their parent's top left position. Ignored elements can reference sizes relative to their parent and excute their layout after the parent has completed it's main layout pass. syntax​ "},{"title":"LayoutDirection​","type":1,"pageTitle":"Property Types","url":"/EvolveUIDocs/docs/styles/style_types_generated#layoutdirection","content":"Layout direction determines if an element lays out it's children starting with the first child and ending with the last child (Forward) or starting with the last child and ending with the first (Reverse) syntax​ "},{"title":"LayoutType​","type":1,"pageTitle":"Property Types","url":"/EvolveUIDocs/docs/styles/style_types_generated#layouttype","content":"Determines the layout algorithm used by an element to layout it's children that are do not have LayoutBehavior = Ignored Value\tDescriptionVertical\tA one dimensional vertical column Horizontal\tA one dimensional horizontal colum GridHorizontal\tA two dimensional grid that places children first horizontally then wraps to another row when overflowing GridVertical\tA two dimensional grid that places children first vertically then wraps to another column when overflowing HorizontalWrap\tSimilar to Horizontal except that children that overflow will wrap to a new row instead of simply overflowing VerticalWrap\tSimilar to Vertical except that children that overflow will wrap to a new column instead of simply overflowing Stack\tAll children are laid out on top of each other on the z axis Radial\tNot yet implemented syntax​ "},{"title":"Overflow​","type":1,"pageTitle":"Property Types","url":"/EvolveUIDocs/docs/styles/style_types_generated#overflow","content":"Determines if any descendants that overflow are Visible or Hidden. Note that this only applies to screen aligned bounding boxes and is not the same as per-pixel masking. syntax​ "},{"title":"PointerEvents​","type":1,"pageTitle":"Property Types","url":"/EvolveUIDocs/docs/styles/style_types_generated#pointerevents","content":"Determine if input should be handled by an element or completely ignored Value\tDescriptionNormal\tInput is handled as normal None\tInput is totally ignored syntax​ "},{"title":"RenderTransform​","type":1,"pageTitle":"Property Types","url":"/EvolveUIDocs/docs/styles/style_types_generated#rendertransform","content":"Applies a series of matrix transformations to an element in world space. Supports up to 7 transformations. syntax​ "},{"title":"RevealDirection​","type":1,"pageTitle":"Property Types","url":"/EvolveUIDocs/docs/styles/style_types_generated#revealdirection","content":"The direction in which a reveal effect runs, either Clockwise or CounterClockWise syntax​ "},{"title":"RevealMode​","type":1,"pageTitle":"Property Types","url":"/EvolveUIDocs/docs/styles/style_types_generated#revealmode","content":"Value\tDescriptionNone\tNo reveal effect Manual\tUser completely controls the effect with the corresponding style properties HorizontalSweepLeft\tReveal the element from right to left HorizontalSweepRight\tReveal the element from left to right VerticalSweepUp\tReveal the element from bottom to top VerticalSweepDown\tReveal the element from top to bottom RadialSweep\tReveal the element from the center point in a sweep direction set by RevealDirection CenterExpand\tReveal the element from the center in an ever growing circle, size is set by RevealAmount OffsetExpand\tReveal the element from the RevealOffsetX and RevealOffsetY positions in an ever growing circle, size is set by RevealAmount syntax​ "},{"title":"SpaceCollapse​","type":1,"pageTitle":"Property Types","url":"/EvolveUIDocs/docs/styles/style_types_generated#spacecollapse","content":"Determines the interaction of padding and margin between elements in a layout. Multiple values can be set with the | operator Value\tDescriptionNone\tNo changes occur, both parent and siblings all keep their defined paddings and margins RemoveInner\tRemoves all marigins from children except left margin on the first child and right margin on the last RemoveOuter\tRemoves margin left from the first child and margin right from the last child CollapseOuter\tLooks at the parent's padding left and the first child's margin left and takes the larger of the two. Does the opposite for the last child CollapseInner\tLooks at the margins between each child and takes the largest of the two Collapse\tApplies both CollapseInner and CollapseOuter Remove\tApplies both RemoveInner and RemoveOuter syntax​ "},{"title":"TextAlignment​","type":1,"pageTitle":"Property Types","url":"/EvolveUIDocs/docs/styles/style_types_generated#textalignment","content":"Aligns the text within its own layout box. Does not impact text position if text is content sized because in that case there is no space to align into. Value\tDescriptionLeft\tPush text to the left Right\tPush text to the right Center\tCenter the text syntax​ "},{"title":"TextAlignmentVertical​","type":1,"pageTitle":"Property Types","url":"/EvolveUIDocs/docs/styles/style_types_generated#textalignmentvertical","content":"Aligns the text vertically within its own layout box. Does not impact text position if text is content sized because in that case there is no space to align into. Not currently working Value\tDescriptionBaseline\tAligns text to the elements baseline Top\tAligns text to geometric top of the text quads Bottom\tAligns text to geometric bottom of the text quads Center\tAligns text to geometric center of the text quads syntax​ "},{"title":"TextOverflow​","type":1,"pageTitle":"Property Types","url":"/EvolveUIDocs/docs/styles/style_types_generated#textoverflow","content":"Determine how text is displayed that overflows its own bounds Not currently working Value\tDescriptionNone\tDo nothing and allow the overflow Truncate\tShorten the rendered text so there is no overflow Ellipsis\tShorten the rendered text so there is no overflow and append ... syntax​ "},{"title":"TextTransform​","type":1,"pageTitle":"Property Types","url":"/EvolveUIDocs/docs/styles/style_types_generated#texttransform","content":"Performs a case transform on text Value\tDescriptionNone\tInput is unchanged UpperCase\tAll characters in the text will be uppercased LowerCase\tAll characters in the text will be lowercased SmallCaps\tAll characters in the text will be uppercased but rendered smaller. Not currently working TitleCase\tThe first character of each word in the text will be upper cased. Not currently working syntax​ "},{"title":"TextureInfo​","type":1,"pageTitle":"Property Types","url":"/EvolveUIDocs/docs/styles/style_types_generated#textureinfo","content":"A reference to a texture, gradient, or mask. Includes a SampleMode that defines how the texture will be used Value\tDescriptionDefault\tJust renders the texture as is NineSlice\tApplies 9-slice borders based on the element's Border sizes and the texture asset's Border size LinearGradient\tSamples the texture a linear gradient. Underlying texture data should be a gradient or this will look very strange RadialGradient\tSamples the texture a radial gradient. Underlying texture data should be a gradient or this will look very strange EllipticalGradient\tSamples the texture an elliptical gradient gradient. Underlying texture data should be a gradient or this will look very strange ConicGradient\tSamples the texture a conic gradient. Underlying texture data should be a gradient or this will look very strange SoftMask\tSamples the texture as a soft mask, applying its alpha value along with a threshold to determine which parts of the main texture are visible SoftMaskInverse\tSame as SoftMask but inverts the mask region HardMaskInverse\tSame as HardMask but inverts the mask region syntax​ "},{"title":"TextureRelativeSize​","type":1,"pageTitle":"Property Types","url":"/EvolveUIDocs/docs/styles/style_types_generated#texturerelativesize","content":"A size that is relative to a given texture's size. % is relative to the texture's height or width depending on which axis this property is applied to. Unit\tShorthand\tDescriptionPercent\t%\tA percentage based value, the value that this is relative to changes based on the property usage. See individual properties to see what the % relative value is Pixel\tpx\tA fixed pixel value that accounts for any dpi scaling ImageWidth\tbw\tThe width of the currently assigned background texture in unscaled texels ImageHeight\tbh\tThe height of the currently assigned background texture in unscaled texels syntax​ "},{"title":"UIAngle​","type":1,"pageTitle":"Property Types","url":"/EvolveUIDocs/docs/styles/style_types_generated#uiangle","content":"An angular measurement % is relative to a rotation of 360 degrees. 25% == 90 degrees, 50% == 180 degrees, etc Unit\tShorthand\tDescriptionPercent\t%\tA percentage based value, the value that this is relative to changes based on the property usage. See individual properties to see what the % relative value is Degrees\tdeg\tAn angular value in degrees Radians\trad\tAn angular value in radians syntax​ "},{"title":"UIFontSize​","type":1,"pageTitle":"Property Types","url":"/EvolveUIDocs/docs/styles/style_types_generated#uifontsize","content":"Unit\tShorthand\tDescriptionEm\tem\tThe em size resolved for this element Rem\trem\tThe root em size resolved for this element Point\tpt\tA size specified in units defined by the currently assigned font file or the default font if none is assigned Pixel\tpx\tA fixed pixel value that accounts for any dpi scaling syntax​ "},{"title":"UIMeasurement​","type":1,"pageTitle":"Property Types","url":"/EvolveUIDocs/docs/styles/style_types_generated#uimeasurement","content":"A size used for measuring elements for layout. % is relative to the parent's layout size. There is a paradox that is possible where a parent has a size relative to its content and a child size's relative to its parent. In such cases the child will have a 0 size. Unit\tShorthand\tDescriptionContent\tcnt\tThe content size of the element Em\tem\tThe em size resolved for this element LineHeight\tlh\tThe line height of the element computed from the current font size ParentSize\tpsz\tThe size of the parent. Note that if there exists a paradox where the parent sizes itself based on content size and some child sizes itself based on the parent size. In this case the child will set its size to zero. This paradox is only applicable for layout Percent\t%\tA percentage based value, the value that this is relative to changes based on the property usage. See individual properties to see what the % relative value is Pixel\tpx\tA fixed pixel value that accounts for any dpi scaling ViewportWidth\tvw\tThe width of the view that an element belongs to in dpi scaled pixels ViewportHeight\tvh\tThe height of the view that an element belongs to in dpi scaled pixels BackgroundImageWidth\tbw\tThe width of the currently assigned background texture in unscaled texels BackgroundImageHeight\tbh\tThe height of the currently assigned background texture in unscaled texels Stretch\ts\tA portion of 'remaining space' that should be attributed to this element. ApplicationWidth\taw\tThe total width of the root view in dpi scaled pixels ApplicationHeight\tah\tThe total width of the root view in dpi scaled pixels MaxChild\tmx\tThe size of the largest child MinChild\tmn\tThe size of the smallest child StretchContent\tstrcnt\tA unit that reserves at least 1x the content size and then adds n stretch pieces FitContent\tfc\tNot Supported FillRemaining\tfr\tA fixed percentage of the remaining space in a layout before stretch values are distributed syntax​ "},{"title":"UIRange01​","type":1,"pageTitle":"Property Types","url":"/EvolveUIDocs/docs/styles/style_types_generated#uirange01","content":"A range between 0 and 1 also expressable and a percentage syntax​ "},{"title":"UISizeConstraint​","type":1,"pageTitle":"Property Types","url":"/EvolveUIDocs/docs/styles/style_types_generated#uisizeconstraint","content":"A size that is used to constrain the min and max size of an element for layout. % is relative to the parent's layout size. Unit\tShorthand\tDescriptionContent\tcnt\tThe content size of the element Em\tem\tThe em size resolved for this element LineHeight\tlh\tThe line height of the element computed from the current font size ParentSize\tpsz\tThe size of the parent. Note that if there exists a paradox where the parent sizes itself based on content size and some child sizes itself based on the parent size. In this case the child will set its size to zero. This paradox is only applicable for layout Percent\t%\tA percentage based value, the value that this is relative to changes based on the property usage. See individual properties to see what the % relative value is Pixel\tpx\tA fixed pixel value that accounts for any dpi scaling ViewportWidth\tvw\tThe width of the view that an element belongs to in dpi scaled pixels ViewportHeight\tvh\tThe height of the view that an element belongs to in dpi scaled pixels BackgroundImageWidth\tbw\tThe width of the currently assigned background texture in unscaled texels BackgroundImageHeight\tbh\tThe height of the currently assigned background texture in unscaled texels ApplicationWidth\taw\tThe total width of the root view in dpi scaled pixels ApplicationHeight\tah\tThe total width of the root view in dpi scaled pixels MaxChild\tmx\tThe size of the largest child MinChild\tmn\tThe size of the smallest child syntax​ "},{"title":"UISpaceSize​","type":1,"pageTitle":"Property Types","url":"/EvolveUIDocs/docs/styles/style_types_generated#uispacesize","content":"A size that is used to determine spacings around and between elements. Unit\tShorthand\tDescriptionEm\tem\tThe em size resolved for this element Pixel\tpx\tA fixed pixel value that accounts for any dpi scaling ViewportWidth\tvw\tThe width of the view that an element belongs to in dpi scaled pixels ViewportHeight\tvh\tThe height of the view that an element belongs to in dpi scaled pixels Stretch\ts\tA portion of 'remaining space' that should be attributed to this element. ApplicationWidth\taw\tThe total width of the root view in dpi scaled pixels ApplicationHeight\tah\tThe total width of the root view in dpi scaled pixels syntax​ "},{"title":"UVWrapMode​","type":1,"pageTitle":"Property Types","url":"/EvolveUIDocs/docs/styles/style_types_generated#uvwrapmode","content":"Tells the graphics system how the uvs of a texture should be handled if they overflow. Value\tDescriptionDefault\tBehavior is determined based on the type of texture being sampled Wrap\tConstrain the uvs to the texture box and wrap them around if they overflow Clamp\tNever exceed the extreme edges of the uv box syntax​ "},{"title":"Visibility​","type":1,"pageTitle":"Property Types","url":"/EvolveUIDocs/docs/styles/style_types_generated#visibility","content":"Determines the rendering visibility of an element. Does not impact layout or input handling or clipping. Value\tDescriptionVisible\tThe element is always rendered according to clipping rules as normal Hidden\tThe element is not rendered syntax​ "},{"title":"WhitespaceMode​","type":1,"pageTitle":"Property Types","url":"/EvolveUIDocs/docs/styles/style_types_generated#whitespacemode","content":"Tells the text system how whitespace should be handled for a given piece of text. Multiple values can be combined using the | operator Value\tDescriptionNone\tNo special processing CollapseWhitespace\tSubsequent whitespace characters are collapsed to be at most 1 character PreserveNewLines\tIf there are new line characters in the source, do not collapse them TrimStart\tIf there is whitespace between text start and the first visible character, remove it TrimEnd\tIf there is whitespace between text end and the last visible character, remove it TrimLineStart\tOn each line remove any leading whitespace TrimLineEnd\tOn each line remove any trailing whitespace NoWrap\tDisable the auto wrapping feature CollapseMultipleNewLines\tSubsequent new lines get collapsed into a single new line TrimLine\tApplies TrimLineStart and TrimLineEnd Trim\tApplies TrimStart and TrimEnd CollapseWhitespaceAndTrim\tApplies Trim and CollapseWhitespace syntax​ "},{"title":"Function","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/templates/top_level_declarations/function","content":"Function A function is very similar to a template except that instead of representing a single element, it can represent n elements. Because there is no 1-1 mapping of declaration to element, the api for function is more restricted than for template and typography. In particular, a function cannot: Set AttributesSet StylesUse lifecycle handlersUse input event handlers It can still declare parameters, state, slots, or any other member type that does not deal directly with a single element. Unlike a template or typography, a function is not valid without a render block. function SomeFunction { required int count; render { repeat(i in count) { Text(&quot;I am a function&quot;); } } } ","keywords":""},{"title":"Import","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/templates/top_level_declarations/import","content":"Import An import statement lets you use declarations, styles, and other assets from an imported module, optionally through an alias. import SomeModule; import SomeOtherModule as Library; template xyz render { // if both SomeModule and SomeOtherModule define this element, a name conflict SomeElement(); SomeModule::SomeElement(); // once imported you can refer to elements Library::SomeElement(); } ","keywords":""},{"title":"Decorators","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/templates/top_level_declarations/decorator","content":"Decorators Decorators are ways to inject behavior into elements that already defined. Example use cases might be we want to track some analytics to see how often certain UIs are being used, or we want certain actions to trigger a route state change, or we need a way to add tooltips to elements without refactoring the elements to be tooltip aware. A decorator can accept parameters and can extrude values but defines no body of its own. decorator TrackClicks { state int clickCount; mouse:click =&gt; clickCount++; } A decorator can declare the following member types: Companion ParametersStateAttributesInstance StylesStyle ListLifecycle handlersInput event handlersSpawn list Unlike the other top level declarations, there is no functional style syntax alternative for decorators. Decorators cannot be applied todecorator or function. There is a special extension of decorator when you only want it to apply to a typography element. In this case the decorator must be declared with decorator typography. When doing so, $text becomes available to the decorator and a compile error will thrown if you attempt to decorate a non typography element with this decorator. A decorator can be applied either to a top-level template or typography declaration or to invocation, the effect is the same. When multiple decorators are applied to an element, they apply in the order they are used. @SomeDecorator template SomeTemplate { ... } template DecoratorExample : DecoratorExample render { // lets turn this button into something that is able to switch between menu screens. // We could add a click handler here that does this logic, but it would be better if we // could hook into a menu transition system that we previously created. Button(&quot;Take me there!&quot;); // using a decorator (which can be user defined) we add functionality that intercepts the button click // and invokes our route transition instead. We didn't even alter the button to do this @RouterLink(&quot;/game/main_menu&quot;) Button(&quot;Take me there!&quot;); // Decorators can also accept arbitrary bindings. In this case I extended the Button to also track how many times it was clicked, // And setup an analytics category with an identifier. Button itself didn't change at all @TrackClicks(category = &quot;Transitions&quot;, identifier = &quot;Go To Main Menu&quot;) Button(&quot;Take me there!&quot;); // We can combine as many decorators as we like. Here is the button with both analytics and routing attached @RouterLink(&quot;/game/main_menu&quot;) @TrackClicks(category = &quot;Transitions&quot;, identifier = &quot;Go To Main Menu&quot;) Button(&quot;Take me there!&quot;); // decorators can also extrude their state, this is only valid if the decorator is marked as `persistent` @TrackClicks(category = &quot;Transitions&quot;, identifier = &quot;Go To Main Menu&quot;) [totalClicks] Button(&quot;Clicked: &quot; + totalClicks + &quot; times&quot;); // decorators can also extrude their `this` value but doing so requires an `as` alias. @TrackClicks(category = &quot;Transitions&quot;, identifier = &quot;Go To Main Menu&quot;) [$this as clickTracker] Button(&quot;Clicked: &quot; + clickTracker.totalClicks + &quot; times&quot;); } A decorator with no body is valid, has zero runtime impact, and is useful for reflection based used cases like testing, code generation, or authoring environments.","keywords":""},{"title":"Attributes","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/templates/top_level_declarations/members/attributes","content":"","keywords":""},{"title":"As a member declaration​","type":1,"pageTitle":"Attributes","url":"/EvolveUIDocs/docs/templates/top_level_declarations/members/attributes#as-a-member-declaration","content":"In a top level declaration, you can declare an attribute with the attribute member syntax. attr: followed by the key name of the attribute optionally followed by a value expression. The value expression can be any expression that returns a string, boolean value, or enum value. template Thing { attr:valid; attr:abc = &quot;xyz&quot;; attr:someKeyCode = KeyCode.A; attr:somethingBoolean = true; attr:someExpression = ComputeSomething(); }  "},{"title":"As an invocation member​","type":1,"pageTitle":"Attributes","url":"/EvolveUIDocs/docs/templates/top_level_declarations/members/attributes#as-an-invocation-member","content":"When applying an attribute to an element invocation, the same rules/apis apply as in the top level declaration member version. template Example render { SomeElement(attr:valid); SomeElement(attr:abc = &quot;xyz&quot;); SomeElement(attr:someKeyCode = KeyCode.A); SomeElement(attr:somethingBoolean = true); SomeElement(attr:someExpression = ComputeSomething());  "},{"title":"Using an ElementReference​","type":1,"pageTitle":"Attributes","url":"/EvolveUIDocs/docs/templates/top_level_declarations/members/attributes#using-an-elementreference","content":"When using an ElementReference to set attributes you instead use the C# api. There is also an api for reading attributes withstring GetAttribute(string key) and bool HasAttribute(string key).  elementReference.SetAttribute(&quot;key&quot;, value);  "},{"title":"Computed Properties","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/templates/top_level_declarations/members/computed_properties","content":"Computed Properties A computed property is a read only method which can be extruded like a value. You can think of it like a C# get-only property. Computed properties are public by default but can be annotated with :private to make them only visible inside the defining template. They cannot be used with a from mapping but do have access to any top level field declaration. template ComputedPropertyExample { state int x; state int y; computed int sum =&gt; x + y; // only visible inside this template's definition computed:private int product =&gt; x + y; } template UsingAComputedProperty render { // a computed property can be extruded with the [] operator ComputedPropertyExample() [sum] Text($&quot;x + y is {sum}&quot;); } ","keywords":""},{"title":"Instance Styles","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/templates/top_level_declarations/members/instance_style","content":"Instance Styles Instance styles are single-element overrides for style properties. When applied they have the highest precedence and will win over non instance styles. An instance style is assigned either using the style:PropertyName = expression syntax within a template file or with the C# api from ElementReference.style. The value expression can be either a properly typed expression that matches the property type or can use backticks to use the style file syntax. // assigning from a template context template Thing : SomeCompanion { style:BackgroundColor = `red`; style:PaddingLeft = $companion.ComputePadding(); style:PreferredWidth = new UIMeasurement(10f, UIMeasurementUnit.Content); } // assigning from C# ElementReference elementRef = SomeHowGetAnElementReference(); elementRef.style.SetPreferredWidth(new UIMeasurement(10f, UIMeasurementUnit.Content)); elementRef.style.SetBackgroundColor(Color.blue); Assigning instance styles is more expensive and uses more memory than using pre-baked styles. It's not a huge cost but generally you should prefer to use styles over instance styles.","keywords":""},{"title":"on_change","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/templates/top_level_declarations/members/on_change","content":"on_change render render renderrenderrender {}render { ... .. ...} before&gt;","keywords":""},{"title":"Parameters","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/templates/top_level_declarations/members/parameters","content":"Parameters Templates can accept parameters which is the preferred way to get data into them. Parameters can be either declared directly in a template or using a from declaration. There are two types of parameter declarations: required and optional. Required parameters cannot define a default value, but optional parameters can. If a required parameter is not provided when a template is used the compiler will show an error. Parameters can either define a new field on a template or use a feature called from to alias another expression. Required parameters must be defined before optional ones. The order in which you define your parameters is also the order in which a caller must provide them if not explicitly referring to them by name. When using implicit parameter passing, the rules follow those of C# Named Argumentsexcept that we use an = instead of : like C# does. template ParameterExample { required Vector3 vec; // define a required parameter optional float value; // define an optional parameter optional string name = &quot;EvolveUI&quot;; // define an optional parameter with a default value optional float valueX from stateVector.x; // map this parameter to stateVector's x field optional float valueY from stateVector.y = 3.14159f; // map this parameter to stateVector's y field, with a default value state Vector3 stateVector; // private parameters are not visible outside of the template definition. A caller can still pass them // into the template but they cannot be used with the `sync` or `onChange` declarations and cannot be extruded optional:private string secret; } template ParameterUsage { render { // with explicit parameter passing ParameterExample(vec = new Vector3(), valueX = 10, valueY = 11); // with immplicit parameter passing (vec3, value, then explicitly valueY because it skips over other optional parameters) ParameterExample(new Vector3(), 10f, valueY = 11); } } ","keywords":""},{"title":"Companion Types","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/templates/top_level_declarations/companions","content":"","keywords":""},{"title":"Mapping values from companions​","type":1,"pageTitle":"Companion Types","url":"/EvolveUIDocs/docs/templates/top_level_declarations/companions#mapping-values-from-companions","content":"You can map values from a companion in the same way you could map them from state. // c# file public class Inventory { public int selectedItemIndex; public string[] GetItemNames() { ... } public string GetEquippedItemName(int itemIndex) { ... } } // template file template InventoryUI : Inventory { // we alias the selectedItemIndex parameter from the selectedItemIndex field on the companion required int selectedItemIndex from $companion.selectedItemIndex; // when mapping from a companion, if the companion's field name matches the template's declared name // then you can omit the field name. This line is the same as the one above but shorter. required int selectedItemIndex from $companion; method string[] GetItemNames() from $companion; // when mapping a method, the signatures must match exactly. // you can pick a different name for the template value if you specify the source explicitly; method string GetItemName(int itemIndex) from $companion.GetEquippedItemName; }  "},{"title":"Mapping event and life cycle handlers from companions​","type":1,"pageTitle":"Companion Types","url":"/EvolveUIDocs/docs/templates/top_level_declarations/companions#mapping-event-and-life-cycle-handlers-from-companions","content":"An event or life cycle can also be mapped from the companion. As long as the signatures match between the event you are mapping and the method on the companion instance, the mapping is valid. There is also a shorthand for mapping both input event names and life cycle handlers. For lifecycle events the return type is ignored and can be anything as long as your mapping method defines no parameters. The name mapping table for lifecycle events is below: Event Name\tMethod Mapping Namebefore:create\tOnBeforeCreate after:create\tOnAfterCreate before:enable\tOnBeforeEnable after:enable\tOnAfterEnable before:update\tOnBeforeUpdate after:update\tOnAfterUpdate before:input\tOnBeforeInput after:input\tOnAfterInput before:finish\tOnBeforeFinish after:finish\tOnAfterFinish before:disable\tOnBeforeDisable after:disable\tOnAfterDisable before:destroy\tOnBeforeDestroy after:destroy\tOnAfterDestroy There is a similar mapping table for input event names, however with the added caveat that signature of your method must also match Event Name\tMethod Mapping Namemouse:enter\tOnMouseEnter(MouseInputEvent) mouse:exit\tOnMouseExit(MouseInputEvent) mouse:up\tOnMouseUp(MouseInputEvent) mouse:down\tOnMouseDown(MouseInputEvent) mouse:heldDown\tOnMouseHeldDown(MouseInputEvent) mouse:move\tOnMouseMove(MouseInputEvent) mouse:hover\tOnMouseHover(MouseInputEvent) mouse:context\tOnMouseContext(MouseInputEvent) mouse:scroll\tOnMouseScroll(MouseInputEvent) mouse:click\tOnMouseClick(MouseInputEvent) mouse:update\tOnMouseUpdate(MouseInputEvent) Event Name\tMapping Method Namekey:down\tOnKeyDown(KeyboardInputEvent) key:heldDown\tOnKeyHeldDown(KeyboardInputEvent) key:up\tOnKeyUp(KeyboardInputEvent) Event Name\tMapping Method Namefocus:gain\tOnFocusGained(FocusChangeEvent) focus:lost\tOnFocusLost(FocusChangeEvent) Drag create is a special snowflake because it accepts a MouseInputEvent and expects to return an instance of DragEvent. All other drag handlers conform to the same signature requirements. Event Name\tMapping Method Name\tDescriptiondrag:create\tDragEvent OnDragCreate(MouseInputEvent))\tFires when a drag could begin. Returning null will not start a drag. Returning any other subclass of DragEvent will being a drag. drag:move&lt;T&gt;\tOnDragMove(DragEvent)\tFires when a drag of type T moves across this element drag:hover&lt;T&gt;\tOnDragHover(DragEvent)\tFires when a drag of type T hovers over this element drag:update&lt;T&gt;\tOnDragUpdate(DragEvent)\tFires when a drag of type T moves or hovers over this element drag:enter&lt;T&gt;\tOnDragEnter(DragEvent)\tFires when a drag of type T enters this element drag:exit&lt;T&gt;\tOnDragExit(DragEvent)\tFires when a drag of type T exits this element drag:drop&lt;T&gt;\tOnDragDrop(DragEvent)\tFires when a drop event of type T occurs on this element drag:cancel&lt;T&gt;\tOnDragCancel(DragEvent)\tFires when a drag event of type T is canceled on this element "},{"title":"Input Handlers","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/templates/top_level_declarations/members/input_handlers","content":"","keywords":""},{"title":"Propagation​","type":1,"pageTitle":"Input Handlers","url":"/EvolveUIDocs/docs/templates/top_level_declarations/members/input_handlers#propagation","content":"Events effectively fire for a whole hierarchy unless event.StopPropagation() is called. Once called, this event type is dead for the duration of the frame and no other element can respond to it. A common practice in UI frameworks is have the concept of event bubbling and capture. While Evolve doesn't directly implement events in this way, because of the way the event phases are executed we can emulate this fairly well. "},{"title":"Using from with input events​","type":1,"pageTitle":"Input Handlers","url":"/EvolveUIDocs/docs/templates/top_level_declarations/members/input_handlers#using-from-with-input-events","content":"When using a from mapping, the event signature must match the below 'Mapping Signature' table. In all cases except fordrag:create the return type of the linked method is ignored and an be anything. If you use the shorthand for mapping an input handler from a companion such as mouse:down from $companion then the method name must match the name given in the 'Mapping Signature' column. If you supply the method name explicitly such as mouse:down from $companion.SomeMethod or mouse:up from someState.SomeMethod then only the signatures must match. Note that the shorthand that omits the method name is only valid for $companion "},{"title":"Mouse Event Types​","type":1,"pageTitle":"Input Handlers","url":"/EvolveUIDocs/docs/templates/top_level_declarations/members/input_handlers#mouse-event-types","content":"Event Name\tMethod Mapping Namemouse:enter\tOnMouseEnter(MouseInputEvent) mouse:exit\tOnMouseExit(MouseInputEvent) mouse:up\tOnMouseUp(MouseInputEvent) mouse:down\tOnMouseDown(MouseInputEvent) mouse:heldDown\tOnMouseHeldDown(MouseInputEvent) mouse:move\tOnMouseMove(MouseInputEvent) mouse:hover\tOnMouseHover(MouseInputEvent) mouse:context\tOnMouseContext(MouseInputEvent) mouse:scroll\tOnMouseScroll(MouseInputEvent) mouse:click\tOnMouseClick(MouseInputEvent) mouse:update\tOnMouseUpdate(MouseInputEvent) "},{"title":"Keyboard Event Types​","type":1,"pageTitle":"Input Handlers","url":"/EvolveUIDocs/docs/templates/top_level_declarations/members/input_handlers#keyboard-event-types","content":"Event Name\tMapping Method Namekey:down\tOnKeyDown(KeyboardInputEvent) key:heldDown\tOnKeyHeldDown(KeyboardInputEvent) key:up\tOnKeyUp(KeyboardInputEvent) "},{"title":"Focus Event Types​","type":1,"pageTitle":"Input Handlers","url":"/EvolveUIDocs/docs/templates/top_level_declarations/members/input_handlers#focus-event-types","content":"Event Name\tMapping Method Namefocus:gain\tOnFocusGained(FocusChangeEvent) focus:lost\tOnFocusLost(FocusChangeEvent) "},{"title":"Drag Event Types​","type":1,"pageTitle":"Input Handlers","url":"/EvolveUIDocs/docs/templates/top_level_declarations/members/input_handlers#drag-event-types","content":""},{"title":"Drag Event Types​","type":1,"pageTitle":"Input Handlers","url":"/EvolveUIDocs/docs/templates/top_level_declarations/members/input_handlers#drag-event-types","content":"Drag create is a special snowflake because it accepts a MouseInputEvent and expects to return an instance of DragEvent. All other drag handlers conform to the same signature requirements. If you omit a drag event type (listed as T in the table below), then these events will fire any drag event type. Event Name\tMapping Method Name\tDescriptiondrag:create\tDragEvent OnDragCreate(MouseInputEvent))\tFires when a drag could begin. Returning null will not start a drag. Returning any other subclass of DragEvent will being a drag. drag:move&lt;T&gt;\tOnDragMove(DragEvent)\tFires when a drag of type T moves across this element drag:hover&lt;T&gt;\tOnDragHover(DragEvent)\tFires when a drag of type T hovers over this element drag:update&lt;T&gt;\tOnDragUpdate(DragEvent)\tFires when a drag of type T moves or hovers over this element drag:enter&lt;T&gt;\tOnDragEnter(DragEvent)\tFires when a drag of type T enters this element drag:exit&lt;T&gt;\tOnDragExit(DragEvent)\tFires when a drag of type T exits this element drag:drop&lt;T&gt;\tOnDragDrop(DragEvent)\tFires when a drop event of type T occurs on this element drag:cancel&lt;T&gt;\tOnDragCancel(DragEvent)\tFires when a drag event of type T is canceled on this element "},{"title":"Lifecycle Handlers","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/templates/top_level_declarations/members/lifecycle","content":"Lifecycle Handlers Evolve exposes a number of lifecycle hooks that you can implement to customize the behavior of elements. The syntax is when:hook_name =&gt; expression. when can be either before or `after. Hook names and descriptions are found below: Event Name\tDescriptioncreate\tCalled when the element is first created. At this point no parameters have been passed but state has been initialized enable\tCalled when the element was either first created or was re-enabled in a frame update\tCalled every frame, parameters have been set for this frame finish\tCalled every frame after all descendents have been updated disable\tCalled asynchronously when an element was disabled. This happens on the main thread at the start of the next frame destroy\tCalled asynchronously when an element was destroyed. This happens on the main thread at the start of the next frame Lifecycle can be layered like an onion if an element is decorated. The element itself will fire it's handlers 'in the center' and any decorators are called around it. @TopLevelDecorator template SomeElement { ... } @Decorator1 @Decorator2 SomeElement( before:update =&gt; Debug.Log(&quot;Before Inline&quot;), after:update =&gt; Debug.Log(&quot;After Inline&quot;) ); // assuming we log each before/after update the output would be Decorator1.BeforeUpdate Decorator2.BeforeUpdate Before Inline TopLevelDecorator.BeforeUpdate SomeElement.BeforeUpdate // onion center, no actual method is called here which means // that for element declarations, before:update and after:update are basically the same SomeElement.AfterUpdate TopLevelDecorator.AfterUpdate After Inline Decorator2.AfterUpdate Decorator1.AfterUpdate An event or life cycle can also be mapped from the companion or from top level state. As long as the signatures match between the event you are mapping and the method on the companion or state instance, the mapping is valid. There is also a shorthand for mapping life cycle handlers from a $companion. For lifecycle events the return type is ignored and can be anything as long as your mapping method defines no parameters. The name mapping table for lifecycle events is below: Event Name\tMethod Mapping Namebefore:create\tOnBeforeCreate after:create\tOnAfterCreate before:enable\tOnBeforeEnable after:enable\tOnAfterEnable before:update\tOnBeforeUpdate after:update\tOnAfterUpdate before:finish\tOnBeforeFinish after:finish\tOnAfterFinish before:disable\tOnBeforeDisable after:disable\tOnAfterDisable before:destroy\tOnBeforeDestroy after:destroy\tOnAfterDestroy","keywords":""},{"title":"Spawns","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/templates/top_level_declarations/members/spawns","content":"Spawns Evolve will only compile templates into a build which are reachable from the main entry point of an application. This is generally very desirable because it means we don't include things that are not used which saves on both compile time and code size. Occasionally you'll want to spawn something like a 'window' where the content of that window isn't directly reachable by traversing all of the templates/typography usages from the entry point. In cases like this, there is a way to force a template to be included in a build even if it is not directly referenced. This element is then traversed just like the entry point to find all of the templates that should be included in a build. To do this, you can declare a spawns member in any top level declaration. The syntax accepts a list of qualified names of templates. These names are resolved using the usual import resolution rules, so you may or may not need to include the specific module names depending on your application. template WindowSpawner { spawns [SomeModule::TemplateName, AnotherTemplate]; render { ... } } ","keywords":""},{"title":"Methods","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/templates/top_level_declarations/members/methods","content":"Methods It can helpful for top level declarations to define methods. These can be used either as helpers or as an interface that can be extruded. Methods can be defined with any signature you like. By default they are public and can be extruded. Methods are available within other methods as well, and can be sourced with afrom mapping or defined in the template definition itself. Methods can be marked with :private to prevent them being used in extrusions. template MethodExample : SomeCompanionType { // when defining a method from a companion type you must define the signature explicitly // and it must exactly match the method as it was defined in the companion type method:private float Sqrt(float input) from $companion; method float PrintSqrt(float input) { // using the Sqrt method Debug.Log(Sqrt(input)); } method void PrintValue(int value) { Debug.Log(value); } } template MethodUsage render { // methods get extruded like normal with the [] operator MethodExample() [PrintValue, PrintSqrt]; run PrintValue(100); run PrintValue(200); run PrintSqrt(300f); } ","keywords":""},{"title":"Slots","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/templates/top_level_declarations/members/slots","content":"","keywords":""},{"title":"Implicit Slots​","type":1,"pageTitle":"Slots","url":"/EvolveUIDocs/docs/templates/top_level_declarations/members/slots#implicit-slots","content":"These are by far the most commonly used slots. This is the slot that is used whenever an element has children such as: template Example render { SomeSlottedElement() { Text(&quot;This is inside the implicit slot&quot;); } }  When overriding an implicit slot, you don't have to do anything special, just declare a block and use it. Some elements do not expose an implicit slot, the most common of which is typography elements. To declare an implicit slot you need to use a declaration member as shown below. Addtionally you must actually render the slot somewhere inside the render block of your template or the compiler will throw an error. This is done to make an element's interface very clear. template ThingWithImplicitSlot { slot implicit; // declare that this element has an implicit slot render { Text(&quot;Before Slot&quot;); render slot-&gt;implicit; // render the slot Text(&quot;After Slot&quot;); } }  "},{"title":"Default slot bodies​","type":1,"pageTitle":"Slots","url":"/EvolveUIDocs/docs/templates/top_level_declarations/members/slots#default-slot-bodies","content":"If a slot is not overridden, you can optionally provide a default block to render instead. template ThingWithImplicitSlot { slot implicit; // declare that this element has an implicit slot render { Text(&quot;Before Slot&quot;); render slot-&gt;implicit { Text(&quot;Rendered if the slot is not overridden&quot;); } Text(&quot;After Slot&quot;); } }  "},{"title":"Trivial Containers​","type":1,"pageTitle":"Slots","url":"/EvolveUIDocs/docs/templates/top_level_declarations/members/slots#trivial-containers","content":"A trivial container is a template that does not define a render block. In these cases an implicit slot is generated automatically, as it is assumed that is the intention of the element. If you want to opt-out of the implicit slot generation, you can define a empty render block.  template Trivial; template DoesNotAcceptChidren render {} template UsingTrivial render { Trivial() { Text(&quot;Inside the implicit slot&quot;); } DoesNotAcceptChildren(); // fine DoesNotAcceptChildren() { // error, you cannot use the implicit slot because it is not defined Text(&quot;Compile error!&quot;); } }  "},{"title":"Named Slots​","type":1,"pageTitle":"Slots","url":"/EvolveUIDocs/docs/templates/top_level_declarations/members/slots#named-slots","content":"A named slot is a named container that users of your template can optionally override. Unlike an implicit slot, a named slot must be explicitly overridden. It can also accept parameters. Named slots can accept a default block. A named slot is declared like this: template ThingWithNamedSlots { slot title(string s); // declare a named slot 'title' that accepts a string slot content(int i, float f); // declare a named slot 'content' that accepts an int and a float render { Text(&quot;Before Slot&quot;); // when rendering the slot, the parameters must be passed in render slot-&gt;title(&quot;Some Title&quot;); render slot-&gt;content(10, 100f) { Text(&quot;Default slot body&quot;); } Text(&quot;After Slot&quot;); } } // when overriding a slot, you can give the parameters whatever names you want, it is the order // that matters. When overriding slots, the implicit slot must be last. template NamedSlotExample render { ThingWithNamedSlots() { slot-&gt;title(str) { Text($&quot;The title is {str}&quot;); } Text(&quot;Part of implicit slot&quot;); } }  "},{"title":"Dynamic Slots​","type":1,"pageTitle":"Slots","url":"/EvolveUIDocs/docs/templates/top_level_declarations/members/slots#dynamic-slots","content":"A dynamic slot is similar to a named slot in that it can accept arguments. There are two main differences: A dynamic slot can only be declared onceA dynamic slot can have a name provided by an expression not known at compile time Dynamic slots don't have a strict naming requirement, any string will do and there is not guarantee that the slot will actually render, it is up to the declaring template to manage which dynamic slots get rendered. template ThingWithDynamicSlot { slot dynamic(string s); // declare a dynamic slot that accepts a string render { Text(&quot;Before Slot&quot;); // when rendering the slot, the parameters must be passed in // the [] render slot-&gt;[&quot;one&quot;](&quot;Some string&quot;); render slot-&gt;[SomeExpressionReturningAString()](&quot;Some string&quot;); render slot-&gt;[&quot;three&quot;](&quot;Some string&quot;) { Text(&quot;Default slot body&quot;); } Text(&quot;After Slot&quot;); } } template SlotExample render { ThingWithDynamicSlot() { slot-&gt;[&quot;one&quot;](value) { Text(&quot;Slot 1&quot;); } slot-&gt;[&quot;two&quot;](value) { Text(&quot;Slot 2&quot;); } slot-&gt;[&quot;three&quot;](value) { Text(&quot;Slot 3&quot;); } } }  "},{"title":"Multiple rendering​","type":1,"pageTitle":"Slots","url":"/EvolveUIDocs/docs/templates/top_level_declarations/members/slots#multiple-rendering","content":"A slot can be rendered as many times as you like template ThingWithSlot { slot implicit; render { Text(&quot;Before Slot&quot;); render slot-&gt;implicit; render slot-&gt;implicit; render slot-&gt;implicit; render slot-&gt;implicit; render slot-&gt;implicit; Text(&quot;After Slot&quot;); } }  "},{"title":"Template","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/templates/top_level_declarations/template","content":"Template Template is the workhorse of Evolve and by far the most common top level declaration that will be used. A template declares the inputs, outputs, contents, and behavior of a UI element in Evolve. A template is usually declared using a class-like structured syntax, but for the case where very few or no members are needed, a shorthand exists that looks more like a function declaration. Sometimes you simply want to give a formal name to a container element // using the shorthand we accept a list of declarations that are comma separated followed by a // 'render' block where all of the template contents will go. template ThingUsingShorthand(required string name) render { Text(name); } ","keywords":""},{"title":"Top level state","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/templates/top_level_declarations/members/state","content":"Top level state Top level state is accessible everywhere inside of a template. State is public by default which means that when a template is used, public state can be extruded. When using the :private visibility modifier state fields cannot be extruded. template StatefulExample : CompanionType { state float value; // define template-local state field state float valueWithDefault = 100f; state:private string privateState = &quot;Not visible outside of this template&quot;; // top level state can also be mapped to a companion field state string itemName from $companion; // if no field/property name is provided, it assumes you want the 'itemName' field/property from the companion state string itemRarity from $companion.rarity; // if a field/property name is provided, that will be used // you can both map a companion field and provide a default value like this: state int itemValue from $companion = 100; } ","keywords":""},{"title":"Styles","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/templates/top_level_declarations/members/style_list","content":"","keywords":""},{"title":"C# Api​","type":1,"pageTitle":"Styles","url":"/EvolveUIDocs/docs/templates/top_level_declarations/members/style_list#c-api","content":"ElementReference elementRef = SomeHowGetAnElementReference(); StyleId styleId = uiRuntime.GetStyle(&quot;ModuleName&quot;, &quot;StyleName&quot;); elementRef.styleList.Add(styleId); elementRef.styleList.Remove(styleId); elementRef.styleList.Toggle(styleId);  "},{"title":"Using Statements","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/templates/top_level_declarations/using","content":"Using Statements Evolve can reference namespaces with at using statement that functions identically to C#'s using statement using System.Collectsion.Generic; template UsingNameSpaceExample render { // without the using statement, the compiler would not be able to find the List type state List&lt;string&gt; strings = new List&lt;strings&gt;(); Text(strings.Count); } ","keywords":""},{"title":"Define the Typography Elements","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/Tutorials/QuestLog/definetypography","content":"Define the Typography Elements caution This document needs an UPGRADE A Typography element is a special container that behaves identically to a Text element. You should define a new Typography element when you want to avoid the need to pass a style parameter manually. Typography.ui and add the following code: typography Text_H1(); typography Text_H2(); typography Text_H3(); That's it! You've just created three new Typography elements that you can style individually via a style file. You will use each throughout this project and will style them in the next section. info Typography elements can have a companion class just like templates and decorators!","keywords":""},{"title":"Typography","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/templates/top_level_declarations/typography","content":"Typography Typography is almost the same as a template except it deals exclusively with text elements. It has an extra implicit parameter called textwhich is the string of text it represents and makes the $text built in available. Unlike a template, typography cannot declare a render block or slots. // This is a trival typography with no extra behavior or style // Declaring typography like this is useful to define a consistent // set of text based elements for your game. typography Label; // a more complex typography declaration can include parameters, state, behavior etc. typography ComplexLabel : CompanionType { required bool isBold; state int clickCount; style = [@some-style]; attr:bold = isBold; mouse:click =&gt; clickCount++; // $text provides an interface for getting/setting/manipulating the underlying text string before:update =&gt; $text.SetText($&quot;Clicked {clickCount} times&quot;); } // typography can also accept generics typography GenericLabel&lt;T&gt; { required T value; before:update =&gt; $text.SetText(value.ToString()); } ","keywords":""},{"title":"Introduction","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/Tutorials/QuestLog/introduction","content":"","keywords":""},{"title":"Learning Outcomes​","type":1,"pageTitle":"Introduction","url":"/EvolveUIDocs/docs/Tutorials/QuestLog/introduction#learning-outcomes","content":"This tutorial will cover basic functionality of Evolve, including how to: Setup the compilation and module assets Use templates, general elements, and create custom elementsSetup and use styling to drive the look and feelUse the basics of the animation system "},{"title":"Prerequisites​","type":1,"pageTitle":"Introduction","url":"/EvolveUIDocs/docs/Tutorials/QuestLog/introduction#prerequisites","content":"You should have Unity 2020.3 or later to follow along with this tutorial.Jetbrains Rider is required if you want to use IDE styling and intellisense.This tutorial assumes you already have advanced knowledge of Unity and C#. "},{"title":"Project Files​","type":1,"pageTitle":"Introduction","url":"/EvolveUIDocs/docs/Tutorials/QuestLog/introduction#project-files","content":"Unity Starter Project "},{"title":"Getting Started","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/Tutorials/QuestLog/gettingStarted","content":"","keywords":""},{"title":"Download the Starter Project​","type":1,"pageTitle":"Getting Started","url":"/EvolveUIDocs/docs/Tutorials/QuestLog/gettingStarted#download-the-starter-project","content":"This tutorial is built off a Unity starter project that you can download here. Once you open the project, you'll see Textures, Fonts, Scripts, and Scenes folders in Assets/Evolve. These are all assets that you'll use throughout the tutorial to build the UI. "},{"title":"Setup Evolve​","type":1,"pageTitle":"Getting Started","url":"/EvolveUIDocs/docs/Tutorials/QuestLog/gettingStarted#setup-evolve","content":"The starter project comes with Evolve already installed. However, you will still need to set up your project to configure Evolve. To start, create the necessary assets. Right click on the Assets folder and select Create &gt; Evolve UI &gt; Compilation. Enable Create in Directory, Include Module File, and Include Template before setting the following properties: File Name: QuestLogCompilationDirectory Name: UserInterfaceModule Name: QuestLogModuleTemplate Name: Typography You'll configure the QuestLogModule and Typography assets shortly. In the meantime, select QuestLogCompilation and change: Tag Name: AppRootRoot Module: QuestLogModule The Tag Name property must point to the root .ui template, which will guide how the UI is drawn on the screen. AppRoot does not exist yet - you’ll crease that shortly.  tip Evolve comes with a plugin for Rider that enables intellisense and styling for easier development. See this article for more information. "},{"title":"Setup the Scene​","type":1,"pageTitle":"Getting Started","url":"/EvolveUIDocs/docs/Tutorials/QuestLog/gettingStarted#setup-the-scene","content":"Open the Demo scene located under Assets/Evolve/Scenes. Select the MainCamera game object and add the following components: UI Root, which is what runs your UI. UI Reloader, which lets you set the hotkey that can be used during play mode to tell the UI to refresh without exiting play mode in Unity. Select UI Reloader and change the Compilation property to QuestLogCompilation. tip Make sure to change the Reload Key property of UI Reloader if that conflicts with other applications running on your desktop. "},{"title":"Create the Main Screen","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/Tutorials/QuestLog/createMainScreen","content":"","keywords":""},{"title":"Fixing the Gradient​","type":1,"pageTitle":"Create the Main Screen","url":"/EvolveUIDocs/docs/Tutorials/QuestLog/createMainScreen#fixing-the-gradient","content":"The first child of header-row that references gradient-line is the only one that needs to be changed, since the last one is facing the correct direction. Fortunately, Evolve has two really handy features to solve this - the ability to nest styles and to query based on the child index. Open AppRoot.style and update gradient-line with the following code:  style gradient-line { MarginTop = 12px; BackgroundImage = linear-gradient(&quot;GeneralModule::quest_gradient&quot;); PreferredSize = 300px 4px; [when:first-child] { BackgroundImageRotation = 180deg; } }  [when:first-child] is a query that tells Evolve to only apply the defined style properties if the element is, well, the first child. BackgroundImageRotation is a handy style property that lets you rotate the background image by a defined amount, which in this case is flipped 180 degrees. info There are a lot of different ways that you can query to determine when a style should be applied. For example, you can apply a style to only the second child with when:child-count(== 2)] or [hover] for when the user is over the element. Read more here. Go back to Unity and either press play or if it’s still running, push control + G to refresh the UI. You should now see the first gradient facing the opposite direction.  "},{"title":"Fixing the font spacing​","type":1,"pageTitle":"Create the Main Screen","url":"/EvolveUIDocs/docs/Tutorials/QuestLog/createMainScreen#fixing-the-font-spacing","content":"It is common to define a base style that you only want to alter in certain circumstances. For this tutorial, the Text_H1 style will be built with the flexibility to apply it with or without lettering spacing using a style attribute. A style attribute is a way to define a custom key that can be used by the query engine to determine if styling should occur. Open Typography.style and update the Text_H1 style with the following code: style &lt;Title_H1&gt; { TextColor = white; TextFontSize = 48px; TextTransform = UpperCase; TextFontAsset = @H1_Font; [attr:characterSpacing] { TextCharacterSpacing = 0.2em; } }  Attribute definition is formatted as [attr:yourCustomName] { //styles }. The custom name is what you must reference when defining the element to tell Evolve to apply the style properties. This means that you will need to update the Text_H1 element in AppRoot to reference the attribute. Head over to the file and replace Text_H1 with the highlighted code below: template AppRoot : AppRoot render { Div(style = [@header-row]) { Div(style = [@gradient-line]); Text_H1(&quot;Quests&quot;, attr:characterSpacing); Div(style = [@gradient-line]); } }  Go back to Unity refresh the UI to see the QUEST header with character spacing.  "},{"title":"Setup the Module","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/Tutorials/QuestLog/setupModule","content":"","keywords":""},{"title":"Configure the references​","type":1,"pageTitle":"Setup the Module","url":"/EvolveUIDocs/docs/Tutorials/QuestLog/setupModule#configure-the-references","content":"Expand the Module References section and click the + button to add two rows. Set the first to GeneralModule and the second to BasicElements. ::: tipBasicElements is a module that comes pre-packaged with Evolve. You may need to click the eye button in the search window to locate the module. ::: Next, expand the Fonts section and add three new rows. Set the following properties: Asset_id: H1 and Font: Bebas Neue Cyrillic_64_UISDFAsset_id: H2 and Font: Cabin-Bold_64_UISDFAsset_id: Normal and Font: Cabin-SemiBold_64_UISDF Expand the Textures section and click the + button to add a new row. Change the following properties, leaving border at 0: Asset Id: quest_log_backgroundTexture: Background Click Apply. The module should now look like this:  "},{"title":"Template Syntax","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/templates/template_syntax","content":"","keywords":""},{"title":"Exploring Template Syntax​","type":1,"pageTitle":"Template Syntax","url":"/EvolveUIDocs/docs/templates/template_syntax#exploring-template-syntax","content":"A template is defined in a .ui file and describes the structure of a UI and provides a super easy method to handle data binding between your UI hierarchy and your logic. "},{"title":"Data Binding​","type":1,"pageTitle":"Template Syntax","url":"/EvolveUIDocs/docs/templates/template_syntax#data-binding","content":"Any field, property, method, event, or value you use in data binding expressions will need to be public. The reason for this is that when the code is pre-compiled to C#, it will not compile if you use non accessible values. In general you want to keep the data flow of your UI in a top down direction. There are use cases for two way binding on some elements like TextInput or Dropdown but in general you should strive to pass data down to children and not up to parents. "},{"title":"Template Syntax​","type":1,"pageTitle":"Template Syntax","url":"/EvolveUIDocs/docs/templates/template_syntax#template-syntax-1","content":"Templates can be defined syntactically with a functional notation or a long form structured notation. We'll focus on the structure notation for now. Throughout these examples we'll be building a totally fictional inventory system UI. template Inventory { } template Inventory { // inside of a template there is a 'render' block that is used to render other UI elements // We'll start simple and just render a static piece of text render { Text(&quot;My Inventory&quot;); Text(&quot;I have lots of items&quot;); } } template Inventory { // we define a piece of state local to this instance of our UI element to track how many items are in our inventory // state is defined with a 'state' keyword state int itemCount; render { Text(&quot;My Inventory&quot;); Text($&quot;I have {itemCount} items&quot;); } }  "},{"title":"Companion types​","type":1,"pageTitle":"Template Syntax","url":"/EvolveUIDocs/docs/templates/template_syntax#companion-types","content":"A companion is a C# type that supports integration with a ui template. It can be a struct or a class.  // in a C# file somewhere public struct InventoryCompanion { // any public fields, methods, properties, or events are visible to ui templates public float someField; // defining a field of type ElementReference and adding an [InjectElementReference] attribute will automatically // link this field to the ui element of the template this companion is bound to [InjectElementReference] public ElementReference elementRef; // [InjectUIRuntime] will automatically set this fields value to the UI runtime to which the bound template belongs [InjectUIRuntime] public UIRuntime runtime; public int ComputeItemCount() { ... } // any event handler method can be marked with an attribute to implicitly register itself as a handler for the // corresponding event type. The method must conform to the given event handler signature, in this case accepting either // a single MouseEvent parameter or no parameters. The method names do not matter, only the signature and the attributes. [OnMouseDown] public void OnMouseDown(MouseEvent evt) { ... } [OnMouseUp] // The MouseEvent parameter can be omitted if it is not used public void HandleMouseUp() { ... } // Similar to input event handlers, life cycle events can also be declared on a companion type with attributes // life cycle handlers do not accept any parameters, and can declare any return type they like (which is ignored by the template system anyway) [OnUpdate] public void Update() { ... } } // in a .ui file // a companion is defined with the ':' operator and the name of the C# type which will serve as the companion template Inventory : InventoryCompanion { render { // anywhere inside of a template declaration, '$companion' will provide the companion instance. // any public field, property, method, or event can then by accessed from that instance. Text($&quot;Inventory has {$companion.ComputeItemCount()} items&quot;); } }  Companion Input Events​ OnMouseDownOnMouseUpOnMouseClickOnMouseHelDownOnMouseEnterOnMouseExitOnMouseContextOnMouseMoveOnMouseHoverOnKeyDownOnKeyHeldDownOnKeyUpOnTextInputOnDragCreateOnDragMoveOnDragCancelOnDragDropOnDragFinish Companion Lifecycle Attributes​ OnCreateOnEnableOnUpdateOnFinishOnDisableOnDestroy "},{"title":"Parameters​","type":1,"pageTitle":"Template Syntax","url":"/EvolveUIDocs/docs/templates/template_syntax#parameters","content":"Templates can accept parameters which is the preferred way to get data into them. Parameters can be either declared directly in a template or using a from declaration. They can optionally define a default value. If a default value is not provided, then the user must pass in a value for that parameter or the compiler will emit an error. There are two types of parameter declarations: required and optional. Required parameters cannot define a default value, but optional parameters can. Parameters can either define a new field on a template or use a feature called from to alias another expression. Required parameters must be defined before optional ones. The order in which you define your parameters is also the order in which a caller must provide them if not explicitly referring to them by name. template ParameterExample { required Vector3 vec; // define a required parameter optional float value; // define an optional parameter optional string name = &quot;EvolveUI&quot;; // define an optional parameter with a default value optional float valueX from stateVector.x; // map this parameter to stateVector's x field optional float valueY from stateVector.y = 3.14159f; // map this parameter to stateVector's y field, with a default value state Vector3 stateVector; // private parameters are not visible outside of the template definition. A caller can still pass them // into the template but they cannot be used with the `sync` or `onChange` declarations and cannot be extruded optional:private string secret; } template ParameterUsage { render { ParameterExample(vec = new Vector3(), valueX = 10, valueY = 11); } }  "},{"title":"Top level state​","type":1,"pageTitle":"Template Syntax","url":"/EvolveUIDocs/docs/templates/template_syntax#top-level-state","content":"Top level state is accessible everywhere inside of a template. State is public by default which means that when a template is used, public state can be extruded. When using the :private visiblity modifier state fields cannot be extruded. template StatefulExample : CompanionType { state float value; // define template-local state field state float valueWithDefault = 100f; state:private string privateState = &quot;Not visible outside of this template&quot;; // top level state can also be mapped to a companion field state string itemName from $companion; // if no field/property name is provided, it assumes you want the 'itemName' field/property from the companion state string itemRarity from $companion.rarity; // if a field/property name is provided, that will be used // you can both map a companion field and provide a default value like this: state int itemValue from $companion = 100; }  "},{"title":"Computed Properties​","type":1,"pageTitle":"Template Syntax","url":"/EvolveUIDocs/docs/templates/template_syntax#computed-properties","content":"A computed property is a read only method which can be extruded like a value. Computed properties are public by default but can be annotated with :private to make them only visible inside the defining template. They cannot be used with a from mapping but do have access to any top level field declaration. template ComputedPropertyExample { state int x; state int y; computed int sum =&gt; x + y; // only visible inside this template's definition computed:private int product =&gt; x + y; } template UsingAComputedProperty render { // a computed property can be extruded with the [] operator ComputedPropertyExample() [sum] Text($&quot;x + y is {sum}&quot;); }  "},{"title":"Methods​","type":1,"pageTitle":"Template Syntax","url":"/EvolveUIDocs/docs/templates/template_syntax#methods","content":"Methods can be defined with any signature you like. By default they are public and can be extruded. Methods are available within other methods as well, and can be sourced with afrom mapping or defined in the template definition itself.  template MethodExample : SomeCompanionType { // when defining a method from a companion type you must define the signature explicitly // and it must exactly match the method as it was defined in the companion type method float Sqrt(float input) from $companion; method float PrintSqrt(float input) { // using the Sqrt method Debug.Log(Sqrt(input)); } method void PrintValue(int value) { Debug.Log(value); } } template MethodUsage render { // methods get extruded like normal with the [] operator MethodExample() [PrintValue, PrintSqrt]; run PrintValue(100); run PrintValue(200); run PrintSqrt(300f); }  "},{"title":"Extrusion​","type":1,"pageTitle":"Template Syntax","url":"/EvolveUIDocs/docs/templates/template_syntax#extrusion","content":"Where parameters are the way to get data into a template, extrusions are the way to get data back out. You can think of extrusion the same way you think about deconstruction in some languages. Any public state, required, optional, computed, or method can be extruded, along with a reference to a template's UI element. Extrusion is performed using the [] operator, which accepts a list of expressions to extrude. template ExtrusionExample render { ThingWithInternalState() [value1, value2] { run Debug.Log(value2); } // extrusion scope is not constrained to the child scope created with `{}` run Debug.Log(value1); // sometimes there may be naming conflicts with extruded values. When this is the case, you can // an assign an alias to the extruded value with the 'as' operator state float xyz; SomeElement() [xyz as abc]; // alias SomeElement.xyz as abc because xyz was already defined in this scope // an element reference is extruded with the '&amp;' operator and any unique identifier that is valid in the scope SomeElement() [&amp;elementRef] run Debug.Log(elementRef.GetAttribute(&quot;selected&quot;));  } "},{"title":"Decorators​","type":1,"pageTitle":"Template Syntax","url":"/EvolveUIDocs/docs/templates/template_syntax#decorators","content":""},{"title":"Decorators​","type":1,"pageTitle":"Template Syntax","url":"/EvolveUIDocs/docs/templates/template_syntax#decorators-1","content":"Decorators are ways to inject behavior into elements that are already defined. An example use case might be that we want to track some analytics to see how often certain UIs are being used, or we want certain actions to trigger a route state change, or we need a way to add tooltips to elements without refactoring the elements to be tooltip aware. template DecoratorExample render { // lets turn this button into something that is able to switch between menu screens. // We could add a click handler here that does this logic, but it would be better if we // could hook into a menu transition system that we previously created. Button(&quot;Take me there!&quot;); // using a decorator (which can be user defined) we add functionality that intercepts the button click // and invokes our route transition instead. We didn't even alter the button to do this @RouterLink(&quot;/game/main_menu&quot;) Button(&quot;Take me there!&quot;); // Decorators can also accept arbitrary bindings. In this case I extended the Button to also track how many times it was clicked, // And setup an analytics category with an identifier. Button itself didn't change at all @TrackClicks(category = &quot;Transitions&quot;, identifier = &quot;Go To Main Menu&quot;) Button(&quot;Take me there!&quot;); // We can combine as many decorators as we like. Here is the button with both analytics and routing attached @RouterLink(&quot;/game/main_menu&quot;) @TrackClicks(category = &quot;Transitions&quot;, identifier = &quot;Go To Main Menu&quot;) Button(&quot;Take me there!&quot;); // decorators can also work with extrusion the same way templates do @TrackClicks(category = &quot;Transitions&quot;, identifier = &quot;Go To Main Menu&quot;) [totalClicks] Button(&quot;Clicked: &quot; + totalClicks + &quot; times&quot;); } // you can also define decorators on template and typography declarations, which has the same effect as placing them at the usage site // like we did in the above examples. Decorators used this way can accept values computed from the template's state and parameters // and can extrude values that are usable within the template definition. @RouterLink(&quot;Game/Inventory&quot;) @SomeDecorator(value = someValue) [extrudedThing] template TopLevelDecoratorExample { optional int someValue; computed int computeMe =&gt; someValue * extrudedThing; // ...contents... }  Decorators are defined in a similar manner to templates. They can declare state, params, computed properties, methods, styles, attributes and a companion type. They can also define input and life cycle handlers. Unlike a template, decorators cannot declare a render block, and cannot themselves be decorated. decorator MyDecorator { required string name; style:BackgroundColor = Color.red; style = [@one, @two]; method string GetName() { return $&quot;Hello, my name is {name}&quot;; } } decorator DecoratorWithCompanion : CompanionType { state int frameCount = 0; state string value from $companion; attr:someAttribute = value; before:update =&gt; frameCount++; mouse:down =&gt; $companion.HandleMouse($evt); }  "},{"title":"Functional Syntax​","type":1,"pageTitle":"Template Syntax","url":"/EvolveUIDocs/docs/templates/template_syntax#functional-syntax","content":"Sometimes its annoying to type a full template definition for a template that doesn't declare much. You can use the template shorthand for these cases which is functionally identical to the long form declaration, but instead of using a block to declare all of the members, you declare a list of statements like a function signature and use the render keyword followed by a block to define the contents. This functional syntax works for template, typography, and function but not decorator.  template Greeter(param string name) render { Text($&quot;Hello {name}&quot;); }  "},{"title":"Modules​","type":1,"pageTitle":"Template Syntax","url":"/EvolveUIDocs/docs/templates/template_syntax#modules","content":"The idea behind modules is that they are portable between projects. They packages templates, styles, and assets together and serve as a basis for resolving imports within .ui files. Modules can have dependencies on other modules. There are no visibility rules for elements, all template / element declarations are considered to be public. If a module (A) includes a dependency on another module (B) and (B) declares a dependency on (C), and (A) wants to reference something in (C), (A) must declare a dependency on (C), it does NOT automatically inherit (B)'s dependency on (C) Modules are file system scoped and cannot be nested. A template &amp; style file belong to the nearest module at the same level or above them in the file tree. If no module asset exists in the project, it is an error. When resolving names for templates &amp; styles, the module in which the template or style is being used is first searched. If there is a template or style that is found, then it is used. If we didn't find the target in the local module, then all of the auto imports and explicit imports are searched. If there is only one match then it is taken. If multiple matches occur then an error is shown and you need to explicitly disambiguate using a ModuleAlias::YourThing fully qualified identifier. // some file.ui import SomeModuleName; import OtherModule as Lib; // import 'OtherModule' and alias it as 'Lib' // A Module (which is an asset in Unity) can define a list of auto imports // and these function as though the user had written `import SomeModule` // in every file belonging to that module template Something render { // the scope resolution operator is used to reference elements residing in imported modules SomeModuleName::Button(); Lib::Button(); // using the alias OtherModule::Button(); // using the full name, same result as the line above Button(); // if no scope resolution operator is present, resolution is as follows // 1. If the 'current' module in which this file is defined defines // a template called 'Button', then we us it. // 2. If the current module does not define 'Button', we look all the // imported modules declared in this file and search for 'Button'. // If one is found, we use it. If multiple imported modules define // 'Button', we throw an Ambiguous import error and the user is required // to use the :: operator to specify which version of 'Button' to use }  "},{"title":"Companion Types​","type":1,"pageTitle":"Template Syntax","url":"/EvolveUIDocs/docs/templates/template_syntax#companion-types-1","content":"A companion is any type that is declared in C# that is bound to your template, typography, function or decoratordeclaration. The purpose of a companion is to provide a generic way to integrate C# code with a template. A type is valid as a companion as long as it is public and defines a parameterless constructor or is a struct. // C# type somewhere in your project public struct SomeCompanion { public int hitPoints; public string currentLevelName; public void ReloadWeapon() { // assume this does work in your game } } // ... some template file ... // : typeName syntax declares a companion type binding for this template // there can only be 1 companion per template. When declaring a companion type, // a new built-in variable becomes available in the template: $companion. // this refers to the companion instance for this template. From this reference // you can use any public field, method, property, or event that the type exposes. template ThingWithCompanion : SomeCompanion { render { Text($&quot;Current Level is {$companion.currentLevelName}&quot;) HealthBar($companion.hitPoints); // you can call methods exposed on the companion instance Button(&quot;Reload&quot;, mouse:click =&gt; $companion.ReloadWeapon()); } }  "},{"title":"Mapping values from companions​","type":1,"pageTitle":"Template Syntax","url":"/EvolveUIDocs/docs/templates/template_syntax#mapping-values-from-companions","content":"You can map values from a companion in the same way you could map them from state. // c# file public class Inventory { public int selectedItemIndex; public string[] GetItemNames() { ... } public string GetEquippedItemName(int itemIndex) { ... } } // template file template InventoryUI : Inventory { // we alias the selectedItemIndex parameter from the selectedItemIndex field on the companion required int selectedItemIndex from $companion.selectedItemIndex; // when mapping from a companion, if the companion's field name matches the template's declared name // then you can omit the field name. This line is the same as the one above but shorter. required int selectedItemIndex from $companion; method string[] GetItemNames() from $companion; // when mapping a method, the signatures must match exactly. // you can pick a different name for the template value if you specify the source explicitly; method string GetItemName(int itemIndex) from $companion.GetEquippedItemName; }  "},{"title":"Mapping event and life cycle handlers from companions​","type":1,"pageTitle":"Template Syntax","url":"/EvolveUIDocs/docs/templates/template_syntax#mapping-event-and-life-cycle-handlers-from-companions","content":"An event or life cycle can also be mapped from the companion. As long as the signatures match between the event you are mapping and the method on the companion instance, the mapping is valid. There is also a shorthand for mapping both input event names and life cycle handlers. For lifecycle events the return type is ignored and can be anything as long as your mapping method defines no parameters. The name mapping table for lifecycle events is below: Event Name\tMethod Mapping Namebefore:create\tOnBeforeCreate after:create\tOnAfterCreate before:enable\tOnBeforeEnable after:enable\tOnAfterEnable before:update\tOnBeforeUpdate after:update\tOnAfterUpdate before:input\tOnBeforeInput after:input\tOnAfterInput before:finish\tOnBeforeFinish after:finish\tOnAfterFinish before:disable\tOnBeforeDisable after:disable\tOnAfterDisable before:destroy\tOnBeforeDestroy after:destroy\tOnAfterDestroy There is a similar mapping table for input event names, however with the added caveat that signature of your method must also match "},{"title":"Mouse Event Types​","type":1,"pageTitle":"Template Syntax","url":"/EvolveUIDocs/docs/templates/template_syntax#mouse-event-types","content":"Event Name\tMethod Mapping Namemouse:enter\tOnMouseEnter(MouseInputEvent) mouse:exit\tOnMouseExit(MouseInputEvent) mouse:up\tOnMouseUp(MouseInputEvent) mouse:down\tOnMouseDown(MouseInputEvent) mouse:heldDown\tOnMouseHeldDown(MouseInputEvent) mouse:move\tOnMouseMove(MouseInputEvent) mouse:hover\tOnMouseHover(MouseInputEvent) mouse:context\tOnMouseContext(MouseInputEvent) mouse:scroll\tOnMouseScroll(MouseInputEvent) mouse:click\tOnMouseClick(MouseInputEvent) mouse:update\tOnMouseUpdate(MouseInputEvent) "},{"title":"Keyboard Event Types​","type":1,"pageTitle":"Template Syntax","url":"/EvolveUIDocs/docs/templates/template_syntax#keyboard-event-types","content":"Event Name\tMapping Method Namekey:down\tOnKeyDown(KeyboardInputEvent) key:heldDown\tOnKeyHeldDown(KeyboardInputEvent) key:up\tOnKeyUp(KeyboardInputEvent) "},{"title":"Focus Event Types​","type":1,"pageTitle":"Template Syntax","url":"/EvolveUIDocs/docs/templates/template_syntax#focus-event-types","content":"Event Name\tMapping Method Namefocus:gain\tOnFocusGained(FocusChangeEvent) focus:lost\tOnFocusLost(FocusChangeEvent) "},{"title":"Drag Event Types​","type":1,"pageTitle":"Template Syntax","url":"/EvolveUIDocs/docs/templates/template_syntax#drag-event-types","content":""},{"title":"Drag Event Types​","type":1,"pageTitle":"Template Syntax","url":"/EvolveUIDocs/docs/templates/template_syntax#drag-event-types","content":"Drag create is a special snowflake because it accepts a MouseInputEvent and expects to return an instance of DragEvent. All other drag handlers conform to the same signature requirements. If you omit a drag event type (listed as T in the table below), then these events will fire any drag event type. Event Name\tMapping Method Name\tDescriptiondrag:create\tDragEvent OnDragCreate(MouseInputEvent))\tFires when a drag could begin. Returning null will not start a drag. Returning any other subclass of DragEvent will being a drag. drag:move&lt;T&gt;\tOnDragMove(DragEvent)\tFires when a drag of type T moves across this element drag:hover&lt;T&gt;\tOnDragHover(DragEvent)\tFires when a drag of type T hovers over this element drag:update&lt;T&gt;\tOnDragUpdate(DragEvent)\tFires when a drag of type T moves or hovers over this element drag:enter&lt;T&gt;\tOnDragEnter(DragEvent)\tFires when a drag of type T enters this element drag:exit&lt;T&gt;\tOnDragExit(DragEvent)\tFires when a drag of type T exits this element drag:drop&lt;T&gt;\tOnDragDrop(DragEvent)\tFires when a drop event of type T occurs on this element drag:cancel&lt;T&gt;\tOnDragCancel(DragEvent)\tFires when a drag event of type T is canceled on this element "},{"title":"Lifecycle of elements​","type":1,"pageTitle":"Template Syntax","url":"/EvolveUIDocs/docs/templates/template_syntax#lifecycle-of-elements","content":"Evolve's template system works on a concept called Structural Identity. This means that the compiler figures out which 'scope' and element belongs to and ties that element's lifecycle to the scope. Scopes are created whenever there control flow and all elements declared in that scope are bound to its lifecycle. This means we only create elements when we enter a scope for the first time and we disable or destroy elements when the scope is no longer in use. Every frame as your template execute the system figures out if the control flow being run was also run last frame or not and decides if it needs to create the elements within this scope or if it should use the same instances from last frame. One of the great things about system is that you can declarestate variables anywhere inside of a scope and they will retain their values across frames. Here is how a frame is built for each template in your game. Was this the first time this scope was entered? if so then invoke any created hooks that are defined on the elements Was this created this frame or previously disabled? if so then invoke any enabled hooks Set all of the per-frame 'bindings' for the currently executing element. This includes: parametersnon constant stylesnon constant attributes invoke any before early input hooksprocess inputinvoke any after early input hooksinvoke any update hooksinvoke any after update input hooksrecursively visit all of the children of this templateinvoke any late input hooks invoke any finish hooks template Example(required bool showGroup1) render { if(showGroup1) { // a new scope is created for the true case // the two text elements below are bound to this scope // if this branch does not execute in a given frame, // all elements that are descendents of this scope will be // disabled (or destroyed if the scope is marked with :destructive) Text(&quot;Element 1&quot;); Text(&quot;Element 2&quot;); } else { // a new scope is created for the else case // Element 3 is a member of this scope. Text(&quot;Element 3&quot;); } }  Destructive Scopes​ A scope can be marked as destructive using a :destructive tag after its declaration. Some examples: if:destructive()else:destructiveelse if:destructiveswitch:destructive() { .. }case:destructive &quot;condition&quot; { .. }default:destructive { .. } Some scopes are implicitly destructive, such as those generated by a repeat. In the case of repeat, if the input size shrinks from one frame to another then the extra items that were inside the repeat last frame will be destroyed. If a repeat is disabled due to its parent scope being disabled, its child scopes will be disabled as normal and not be destroyed. Destroying a View will destroy all of its descendent scopes and their associated elements. template Example(required bool showGroup1) render { // because this scope is marked as destructive, if there is a frame in which // this branch is not entered, its descendents will all be destroyed instead of // being disabled as they normally would be. When the branch is later re-entered // the elements we be re-created again. if:destructive(showGroup1) { Text(&quot;Element 1&quot;); Text(&quot;Element 2&quot;); } }  Asynchronous Lifecycle​ There are two classes of events which are not executed as your code runs each frame: disable and destroy. For performance reasons we only run these handlers at the start of the next frame. It is illegal / undefined behavior if you have a disable/destroy handler that uses a closure to close over any fields / state in a template. Generally, you should not have to worry about this because the system makes it very hard to do, but in case you are tempted to trick the system into doing something crazy: you've been warned! "},{"title":"Element References​","type":1,"pageTitle":"Template Syntax","url":"/EvolveUIDocs/docs/templates/template_syntax#element-references","content":"Evolve is a high performance UI library and as such makes certain decisions around what the concept of a UI element really is. Unlike most other UI systems, the core unit of Evolve is not a tree node that is subclassed from some type, but a simple 4 byte type called ElementId. Because we don't use real objects to represent our UI elements, we need a way work with ElementIds in the context of our game in order to set styles, attributes, perform layout and do all of the typical UI things. The solution to this in Evolve is a type called ElementReference. The purpose of an ElementReference is to be the one stop shop for interfacing with the system data for a single element. An ElementReference can be used to query layout results, set style properties, manipulate a list of applied styles, check the 'live-ness' of an element, and is often passed around in templates as arguments to things that need to position themselves relatively or query an element for certain properties. There are a few ways to get an ElementReference depending on the context you are working in. Template &amp; Typography &amp; Decorator declarations​ When inside of a top level declarations (except for function) you can always use $element to get the current element reference. Inside of a render block, $element becomes contextual based on where it is used and is only valid inside a binding expression. It is not valid inside a create, run, enable, var, state, repeat, if or any other expression that is not related to property or lifecycle binding. In a given element usage like Text(&quot;xyz&quot;), the $element reference becomes available inside of bindings. When inside of a render block, you can refer to $root to get an ElementReference for the current template root, in the example below it would point at Thing. You can also use $parent to refer to an element's parent. This is available everywhere inside a render block and always points to the currently executing element's parent. template Thing { before:update =&gt; { $element.SetAttribute(&quot;ticked&quot;, true); // in a top level declaration $element points to Thing } render { Text($&quot;the element is {$element}&quot;); // refers to the Text element Text($&quot;the element is {$root}&quot;); // refers to the Thing, which is the template root run $element.SetAttribute(&quot;illegal&quot;, true); // $element points nowhere, this is not allowed run $root.SetAttribute(&quot;illegal&quot;, false); // $root points to Thing, totally fine run $parent.SetAttribute(&quot;fine, &quot;yep&quot;); // $parent points at Thing's parent. this MAY be invalid if Thing is a view root and has no parent. Element1(value = $parent) { // $parent == Thing Element2(value = $parent) { // $parent == Element1 } } }  Inside of a decorator, $element points to the element being decorated. decorator SomeDecorator { before:update =&gt; $element.stlye.BackgroundColor = `red`; }  Element references with companion types​ When defining a companion type in C#, you can define a public, non readonly field of type ElementReference and mark it with the attribute [InjectElementReference]and the system will set the value of this field to the paired ElementReference. // when used as a companion, the myElementReference will be set by the system. This still works even if this companion type // is used as a companion for a decorator. Note that it will NOT be set when used as the companion of a `function`, because functions // are not mapped 1-1 with elements. No error will be thrown in this case, the field will simply not be initialized. public class SomeCompanion { [InjectElementReference] public ElementReference myElementReference; }  "},{"title":"Set the Base Styles","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/Tutorials/QuestLog/setBaseStyles","content":"","keywords":""},{"title":"Typography styles​","type":1,"pageTitle":"Set the Base Styles","url":"/EvolveUIDocs/docs/Tutorials/QuestLog/setBaseStyles#typography-styles","content":"The first thing you will do is define the Title typography style. Create a new Style File and name it Typography. Open the file and add the following code: const H1_Font = &quot;H1&quot;; const H2_Font = &quot;H2&quot;; const Normal_Font = &quot;Normal&quot;; const PrimaryAccentColor = #77E2C7; const SecondaryAccentColor = #BACED4;  Evolve stylesheets can create a constant variable, which can be referenced by any style property. This is very handy for creating reusable values that you only need to change in one location. Constant variables require the const keyword, a string id and a value. In the example above, a new constant is created called H1_Font with the value of H1, which points to the font asset reference you defined in QuestLogModule earlier. Next, add the following: style &lt;Text_H1&gt; { TextColor = white; TextTransform = UpperCase; TextFontAsset = @H1_Font; TextFontSize = 48px; }  Styles require the style keyword, a string Id, and curly braces ({ }). All properties are defined within the curly braces.Surrounding a String Id with angle brackets ( &lt; &gt; ) indicates that you want the style applied to any element that matches the tag type. Leaving the brackets off is the equivalent of a class style, which you must reference on an element. (You'll do this shortly.) In the code above, the &lt;Text_H1&gt; style will automatically be applied to any Typography element that has the same tag. The style has typical font properties, such as the font color and size. The TextTransform property is used to ensure every character is uppercase. The TextFontAsset property points to the H1_Font constant defined at the top. Add the rest of the typography styles in now: style &lt;Text_H2&gt; { TextColor = white; TextFontSize = 24px; TextFontAsset = @H2_Font; [attr:uppercase] { TextTransform = UpperCase; } } style &lt;Text_H3&gt; { TextTransform = UpperCase; TextFontAsset = @H1_Font; TextFontSize = 48px; TextColor = @PrimaryAccentColor; }  Attributes are a way to extend your style to cover more scenarios. For example, when referencing the Text_H2 or Text_H3 style, you can include the uppercase attribute to turn all character’s upper case. Leave it off and they'll show up exactly how you entered them. You'll explore attributes in more depth shortly. "},{"title":"Root styles​","type":1,"pageTitle":"Set the Base Styles","url":"/EvolveUIDocs/docs/Tutorials/QuestLog/setBaseStyles#root-styles","content":"The entry point for the QuestLog will be via an AppRoot template and will have a stylesheet. Create a new UI File, name it AppRoot, and check the Include Style File box.  Open AppRoot.style and add the following code: style &lt;AppRoot&gt; { BackgroundImage = &quot;quest_log_background&quot;; PaddingTop = 64px; PaddingBottom = 64px; PaddingLeft = 83px; PaddingRight = 150px; }  &lt;AppRoot&gt; will automatically apply to the AppRoot template. The style properties set the background image to quest_log_background, which was defined in the module asset earlier. It also sets the padding so that the children are brought in a bit. Add two more styles: style header-row { PreferredWidth = 1s; PaddingLeft = 1s; PaddingRight = 1s; LayoutType = Horizontal; SpaceBetweenHorizontal = 18px; MarginBottom = 75px; } style gradient-line { MarginTop = 12px; BackgroundImage = linear-gradient(&quot;GeneralModule::quest_gradient&quot;); PreferredSize = 300px 4px; }  header-row is a class style that will be set on the topmost div in AppRoot and is where all the title elements will sit. PreferredWidth is set to 1s, which makes the element stretch the entire width of the div.Setting PaddingLeft and PaddingRight to 1s tells the engine to center the content. LayoutType specifies the direction that children should appear. SpaceBetweenHorizontal adds an 18px gap between each element. gradient-line introduces a new property, BackgroundImage, which in this case is set to a linear-gradient rather than an image. Linear-gradient takes one property, which is a string id that points to a gradient in GeneralModule. info quest_gradient was defined in the GeneralModule that was included in the starter project. References in other modules must be prefixed with the scope operator ::. See this article for more information. There are two UI Measurement types being used, pixel (px) and stretch (s). Use pixel if you want to define the fixed pixel value that accounts for DPI scaling. Use stretch to tell Evolve to apply a portion of the ‘remaining space’ that the element has. info Another way to think about Stretch is that it is the equivalent of FlexGrow, which is used by the FlexBox CSS system and UI Toolkit. Read more about UIMeasurements here. "},{"title":"Create and Animate the Quest Filter","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/Tutorials/QuestLog/createNavigation","content":"","keywords":""},{"title":"Update AppRoot​","type":1,"pageTitle":"Create and Animate the Quest Filter","url":"/EvolveUIDocs/docs/Tutorials/QuestLog/createNavigation#update-approot","content":"It is possible to have templates call other templates. This is very helpful for creating modular code that is easier to maintain. Lets have you take care of that part of the setup before jumping into building out QuestList - that way you can see your progress in real time. Open AppRoot.ui and add the following code to the end of the Template: template AppRoot : AppRoot render { Div(style = [@header-row]) { Div(style = [@gradient-line]); Title(&quot;Quests&quot;); Div(style = [@gradient-line]); } Div(style = [@master-detail-container]) { QuestList(); } }  Add the following style to AppRoot.style: style master-detail-container { LayoutType = Horizontal; SpaceBetweenHorizontal = 50px; PreferredSize = 1s; }  Everything here is straight forward. As you can see, the only new concept is that you supply the name of the template to reference it. "},{"title":"Add the Elements​","type":1,"pageTitle":"Create and Animate the Quest Filter","url":"/EvolveUIDocs/docs/Tutorials/QuestLog/createNavigation#add-the-elements","content":"The first thing you'll do is setup the base elements that the player will interact with. Open QuestList.ui and add the following code: using QuestLog; using System; using System.Collections.Generic; template QuestList { render { Group(style = [@quest-list-header]) { Text_H2(&quot;Active&quot;, attr:uppercase); Text_H2(&quot;Completed&quot;, attr:uppercase); } Div(style = [@accent]); } }  Group is another way to organize elements, like a Div. Text_H2 is the typography element that you created earlier. The uppercase attribute ensures that the text is displayed as such, thereby removing the dependency on the code to be correct. Next, add the following styles to QuestList.style: const color_LightWhite = #6D6C72; style quest-list-header { LayoutType = Horizontal; SpaceBetweenHorizontal = 32px; PreferredWidth = 496px; PaddingLeft = 32px; BorderBottom = 1px; BorderColor = @color_LightWhite; PaddingBottom = 8px; MarginBottom = 12px; } style accent { LayoutBehavior = Ignored; PreferredSize = 90px 4px; BackgroundColor = white; AlignmentOriginX = -0.5w; AlignmentOffsetX = 70px; AlignmentOffsetY = 35px; AlignmentTarget = Parent; CornerRadius = 50%; ShadowColor = white; ShadowBlur = 15; }  accent is introducing a few new style properties: LayoutBehavior specifies whether the element should participate in the parent's layout phase. In this case, accent is set to Ignored, which means that it will not contribute to the parent size. AlignmentOrigin, AlignmentOffset and AlignmentTarget are properties that adjust how the element aligns in relation to its parent. For example, because AlignmentOriginX is set to -0.5w, the element will adjust the X starting position to be negative half the width of the parent. CornerRadius changes the element to have rounded corners by the specified amount.ShadowColor and ShadowBlur can be used to add a shadow effect and are responsible for the nice glow that the bar has. tip Try changing the values of the elements above to see how they impact the visual look. Push play to see how your new elements are drawn onto the UI. There's no interactivity yet though! You'll do that next.  "},{"title":"Register Player Interactions​","type":1,"pageTitle":"Create and Animate the Quest Filter","url":"/EvolveUIDocs/docs/Tutorials/QuestLog/createNavigation#register-player-interactions","content":"Two things need to happen when the player clicks on of the filters: The bottom highlight needs to move to the new active stateThe list of quests needs to filter based on their status There also needs to be a check to make sure that nothing happens when the player clicks on the filter that is already enabled. In this section you will focus just on animating the bottom highlight. Add the following code to the top of QuestList.UI: template QuestList { state QuestStatus status = QuestStatus.Active; state float animTargetX = 0; state float animTargetWidth = 0; bool shouldStartAnimation = false; state Action&lt;UIElement, QuestStatus&gt; QuestFilter_OnClick = (el, newStatus) =&gt; { if(status == newStatus) { return; } status = newStatus; animTargetWidth = el.GetLayoutSize().width; animTargetX = el.GetLayoutLocalPosition().x + animTargetWidth * 0.5f; shouldStartAnimation = true; }; //original code after this point render { ... } }  The code above is defining and setting four state variables. State variables are a special kind of variable that persist across frames like regular C# variables. However, unlike regular variables, the value assignment runs just once when the template is first instantiated. Here is a deeper look at each variable: status tracks whichever filter is currently active and is also set to QuestStatus.Active by default.animTargetX and animTargetWidth set the target x position and width of the Div/Accent element that you created earlier. These values will be set again and used with the animation runs.shouldStartAnimation represents whether code should run to move the Div/Accent element to a new filter. QuestFilter_OnClick is an Action that will run each time the player clicks on a filter. The first thing it'll do is confirm that the player clicked on a new filter and will abort if they did not. The status is updated and animation values are set if the check passes. It is now time to hook up the click event. Update the two Text_H2 elements so that they include a mouse:click event: Group(style = [@quest-list-header]) { Text_H2(&quot;Active&quot;, attr:uppercase, mouse:click = QuestFilter_OnClick($this, QuestStatus.Active)); Text_H2(&quot;Completed&quot;, attr:uppercase, mouse:click = QuestFilter_OnClick($this, QuestStatus.Completed)); });  Any element can register a callback. You just need to provide a prefix (i.e mouse), the event type (i.e. click), and assign it code to run. The Active and Completed filters are both registered to handle mouse:click events and pointed towards QuestFilter_OnClick. info There are many different types of events that you can hook into that cover mouse, keyboard, drag &amp; drop, and touch events. You can read more here. If you were to click on one of the buttons nothing would happen. That's because the actual animation logic is missing. Update the Div/Accent element at the bottom of your code with the following on:update event: Div(style = [@accent], before:update =&gt; { if (shouldStartAnimation) { $this.style.SetAlignmentOffsetX(animTargetX); $this.style.SetPreferredWidth(animTargetWidth); } });  Elements also have several lifecycle hooks that you can use. In this case, the on:update hook is used to check whether the element needs to be animated, and if so, sets a new AlignmentOffsetX and PreferredWidth values based on the animation state variables defined and set earlier. Run or reload the project in Unity and try clicking on one of the filters.  Unfortunately, it's not smoothly animating just yet. This is because there's one style property that is missing from Accent. Open QuestList.style and update the accent style to include the following property: style accent { /* Other styles above */ transition CubicEaseIn 200ms = AlignmentOffsetX, PreferredWidth; }  Transitions are easy to implement animations that observe style properties. When a property value is changed, the system will smoothly transition from the old value to the new one. Transitions are built on top of the animation system, which uses a generic interpolator that you can extend. In the property above, the standard CubicEaseIn interpolator is used. The duration is set to 200ms and the properties that the transition will monitor for are AlignmentOffsetX and PreferredWidth. Run or reload the project again and you should now see it smoothly animating.  "},{"title":"Show the Quest Details","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/Tutorials/QuestLog/showQuestDetails","content":"","keywords":""},{"title":"Refactor AppRoot​","type":1,"pageTitle":"Show the Quest Details","url":"/EvolveUIDocs/docs/Tutorials/QuestLog/showQuestDetails#refactor-approot","content":"SelectionManager will be used to determine whether the quest details should be shown. Open AppRoot.ui and add a new if statement to the last div: template AppRoot : AppRoot() { //Original code above Div(style = [@master-detail-container]) { QuestList(selectionManager, questList = allQuests); if(selectionManager.selectedQuest != null) { QuestDetails(selectionManager.selectedQuest); } } }  "},{"title":"Create the QuestDetails template​","type":1,"pageTitle":"Show the Quest Details","url":"/EvolveUIDocs/docs/Tutorials/QuestLog/showQuestDetails#create-the-questdetails-template","content":"There's one final template to create! Create new UI and Style Files named QuestDetails. Open QuestDetails.ui and add the following code: using QuestLog; element QuestDetails { implicit Quest quest; } template QuestDetails : element QuestDetails() { run { if (quest.Objectives != null) { System.Array.Sort(quest.Objectives); } } Text(quest.Title, style = [@quest-detail-title]); Text(quest.Description, style = [@quest-detail-description]); Group(style = [@quest-rewards-objectives-container]) { Group(style = [@quest-objectives]) { Text_H3(&quot;Objective Log&quot;); foreach(objective in quest.Objectives) { Group(style = [@quest-objective-line]) { var string questText = $&quot;&lt;color #25FFC4&gt;{objective.DestroyedObjects}/{objective.DestroyRequirement}&lt;color white&gt; Objects Destroyed&quot;; Checkbox(attr:checked = objective.Completed, attr:colorized); Text(questText, style = [@quest-objective-text]); } } } Group() { Text_H3(&quot;Rewards&quot;); Group(style = [@reward-list]) { foreach(reward in quest.Rewards) { Div(style = [@reward-frame]) { Image(src = reward.Asset, style = [@reward-image]); } } } } } }  The Run block is sorting all of the quest.Objectives be completed state. The rest of the code is creating text and container elements that are organizing the quest data into relevant blocks for proper formatting. The last thing to do is add the missing styles. Open QuestDetails.style and add the following code: style &lt;QuestDetails&gt; { PreferredSize = 1s; PaddingTop = 48px; } style quest-objective-line { LayoutType = Horizontal; SpaceBetweenHorizontal = 10px; PaddingTop = 1s; PaddingBottom = 1s; } style quest-detail-title { TextColor = @PrimaryAccentColor; TextFontAsset = @H1_Font; TextFontSize = 60px; MarginBottom = 20px; } style quest-rewards-objectives-container { PreferredWidth = 1s; Padding = 100px 25px; LayoutType = Horizontal; } style quest-detail-description { PreferredWidth = 1s; TextColor = @SecondaryAccentColor; TextFontAsset = @Normal_Font; TextFontSize = 24px; } style quest-objective-text { TextFontSize = 28px; TextColor = #979698; TextFontAsset = @Normal_Font; } style quest-objectives { PreferredSize = 1s; SpaceBetweenVertical = 20px; } style reward-list { LayoutType = Horizontal; SpaceBetweenHorizontal = 8px; AlignmentOffsetX = -4px; } style reward-frame { PreferredSize = 1bw 1bh; BackgroundImage = &quot;quest_reward_frame&quot;; Padding = 1s; } style reward-image { PreferredSize = 1bw 1bh; }  info See [INSERT DOC] if you would like to dig into any of the style properties. Run or reload the project and select any of the quests to see the details.  "},{"title":"Refactor QuestList​","type":1,"pageTitle":"Show the Quest Details","url":"/EvolveUIDocs/docs/Tutorials/QuestLog/showQuestDetails#refactor-questlist","content":"There's one final issue to fix. QuestDetails element is being redrawn every frame since SelectionManager always has a quest listed as selected. This adds unncessary overhead but is easy to fix with just one line of code in the QuestFilter_OnClick action located in QuestList.UI:  state Action&lt;UIElement, QuestStatus&gt; QuestFilter_OnClick = (el, newStatus) =&gt; { //Original code above selectionManager.Deselect(); };  "},{"title":"Populate the Quest List","type":0,"sectionRef":"#","url":"/EvolveUIDocs/docs/Tutorials/QuestLog/populateQuestList","content":"","keywords":""},{"title":"Bind the data​","type":1,"pageTitle":"Populate the Quest List","url":"/EvolveUIDocs/docs/Tutorials/QuestLog/populateQuestList#bind-the-data","content":"There is also a small refactor that you'll need to do so that the QuestList has data to display. Open AppRoot.ui and update the following code: template AppRoot : AppRoot() { state Quest[] allQuests = MakeQuests(); run System.Array.Sort(allQuests); state SelectionManager selectionManager = new SelectionManager(&quot;selected&quot;); Div(style = [@header-row]) { Div(style = [@gradient-line]); Text_H1(&quot;Quests&quot;); Div(style = [@gradient-line]); } Div(style = [@master-detail-container]) { QuestList(selectionManager, questList = allQuests); } }  Here's what the new code is doing: SelectionManager keeps track of the quest and element that is currently selected to ensure that no two elements both simultaneously have the selected attribute applied. You can find the class in the Assets/Evolve/Scripts folder.MakeQuests() is a helper method that generates random quest data for demonstration purposes. In reality, you'd want to assign this real data that is likely coming from a scriptable object or database. The results are stored in allQuests state variable, which ensures that MakeQuests() is only run once.The run keyword allows you to execute regular C# code inside of the template. In this case, it's sorting the quests.The QuestList template is now passing in the allQuests parameter, which you'll store a reference to and bind to a ScrollView. Open QuestList.ui and update the QuestList element at the top to include a variable that will store the allQuests data and a reference to SelectionManager: element QuestList { implicit SelectionManager selectionManager; IList&lt;Quest&gt; questList; } template QuestList : element QuestList { //original code }  "},{"title":"Create the ScrollView​","type":1,"pageTitle":"Populate the Quest List","url":"/EvolveUIDocs/docs/Tutorials/QuestLog/populateQuestList#create-the-scrollview","content":"Since there is a high likelihood that the player will have more quests than what can show on screen, you'll add them all into a ScrollView that will be styled to fit the look of the game. To do this, you'll need to update QuestList.ui. Add the following code to the end of the template section: template QuestList : element QuestList { //Original code above ScrollView(style = [@quest-list]) { foreach(quest in questList, keyFn = (item) =&gt; item.Id) { if(quest.Status == status) { QuestLogItem(quest = quest, mouse:click = () { selectionManager.Select($this, quest); }); } } } }  Here's what the new code is doing: ScrollView is a standard container that is available in the BasicElements module that comes with Evolve. It'll handle generating the ability to scroll for you. Within ScrollView is a loop that will iterate through each item in questList and create a new QuestLogItem, passing in the quest data and setting a mouse:click event that points towards the SelectionManager helper class that was included in the starter project. Finally, you'll need to add the new styles into QuestList.style: const color_ScrollTrack = rgba(75, 75, 75, 255); style quest-log-scroll-knob { PreferredWidth = 6px; Feather = 1px; AlignmentTargetX = Parent; AlignmentOffsetX = -1px; CornerRadius = 50%; BackgroundImageRotation = 270deg; BackgroundImage = linear-gradient(&quot;GeneralModule::scrollbar-gradient&quot;); } style quest-log-scroll-track { PreferredWidth = 3px; AlignmentTargetX = Parent; AlignmentDirectionX = End; AlignmentOffsetX = -12px; BackgroundColor = @color_ScrollTrack; }  "},{"title":"Create the QuestLogItem​","type":1,"pageTitle":"Populate the Quest List","url":"/EvolveUIDocs/docs/Tutorials/QuestLog/populateQuestList#create-the-questlogitem","content":"Next, you'll create the QuestLogItem element that will look like this:  Create new UI and Style Files named QuestLogItem. Open QuestLogItem.ui and add the following code: using QuestLog; element QuestLogItem { Quest quest; } container QuestLogBracket(); template QuestLogItem : element QuestLogItem(attr:completed = quest.IsCompleted) { Div(style = [@quest-log-shade]); Div(style = [@quest-log-item-container]) { Text_H2(quest.Title); if(quest.IsCompleted) { Checkbox(isChecked = true); } } QuestLogBracket(); QuestLogBracket(); }  info QuestLogBracket is a container that will display the two green corner brackets only when the element is selected. Instead of defining the container, you could create a div and manually set the style. When QuestLogItem is first instantiated, it will look at the value of quest.IsCompleted and set the completed attribute to either true or false. This will then determine if the style should display as though the quest is active or completed. (You will set these styles shortly.) The rest of the code is pretty straight forward - two Div containers are being created and have their styles set. The second Div contains the quest title and will show a checkbox if the quest is completed. Checkbox is a custom container included in the project. info You can also set the attribute in the body of the template by calling run $root.SetAttribute(). This is handy if you need to alter the value independently of instantiation. Next, add the following code to the stylesheet: style &lt;QuestLogItem&gt; { PreferredSize = 1bw 1bh; BackgroundImage = &quot;GeneralModule::quest_item_frame&quot;; LayoutType = Stack; } style quest-log-item-container { LayoutType = Horizontal; SpaceBetweenHorizontal = 1s; PreferredSize = 1s; Padding = 1s 20px; [when:parent attr:selected] { BackgroundImage = &quot;GeneralModule::quest_item_frame_selected&quot;; } } style quest-log-shade { PreferredSize = 1bw 1bh; Visibility = Hidden; [hover:parent] { Visibility = Visible; } BackgroundImage = &quot;GeneralModule::quest_item_frame_shade&quot;; [when:parent attr:selected] { BackgroundImage = &quot;GeneralModule::quest_item_frame_selected_shade&quot;; } } style &lt;QuestLogBracket&gt; { PreferredSize = 1bw 1bh; LayoutBehavior = Ignored; AlignmentTarget = Parent; [when:parent attr:selected] { BackgroundImage = &quot;GeneralModule::quest_item_frame_selected_corner&quot;; AlignmentOffset = -8px; [when:last-with-tag(QuestLogBracket)] { BackgroundImageRotation = 180deg; AlignmentDirection = End; } } }  Most of the style logic is driven by a combination of style queries. For example, [when:parent attr:selected] ensures that the style is only run if the parent container has the attribute of selected. It is also possible to have nested queries. For example, &lt;QuestLogBracket&gt; has a [when:parent attr:selected] and inside of that style, is another query - [when:last-with-tag(QuestLogBracket)]. The nesting will ensure that when:last-with-tag styling will be applied if the parent is selected (per the first query) and is the last QuestLogBracket container (per the second query). note The value of the selected attribute is driven by the SelectionManager helper code that was included in the project. Refresh the UI in Unity and you should now have a working quest list. "}]